"use strict";var THREE=THREE||{REVISION:"58"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}};self.Int32Array=self.Int32Array||Array;self.Float32Array=self.Float32Array||Array;String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")};THREE.extend=function(h,g){if(Object.keys){for(var l=Object.keys(g),k=0,j=l.length;k<j;k++){var i=l[k];Object.defineProperty(h,i,Object.getOwnPropertyDescriptor(g,i))}}else{for(i in l={}.hasOwnProperty,g){l.call(g,i)&&(h[i]=g[i])}}return h};(function(){for(var e=0,d=["ms","moz","webkit","o"],f=0;f<d.length&&!window.requestAnimationFrame;++f){window.requestAnimationFrame=window[d[f]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[d[f]+"CancelAnimationFrame"]||window[d[f]+"CancelRequestAnimationFrame"]}void 0===window.requestAnimationFrame&&(window.requestAnimationFrame=function(a){var j=Date.now(),i=Math.max(0,16-(j-e)),h=window.setTimeout(function(){a(j+i)},i);e=j+i;return h});window.cancelAnimationFrame=window.cancelAnimationFrame||function(b){window.clearTimeout(b)}})();THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;THREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.RepeatWrapping=1000;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Color=function(b){void 0!==b&&this.set(b);return this};THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(b){b instanceof THREE.Color?this.copy(b):"number"===typeof b?this.setHex(b):"string"===typeof b&&this.setStyle(b);return this},setHex:function(b){b=Math.floor(b);this.r=(b>>16&255)/255;this.g=(b>>8&255)/255;this.b=(b&255)/255;return this},setRGB:function(e,d,f){this.r=e;this.g=d;this.b=f;return this},setHSL:function(f,e,h){if(0===e){this.r=this.g=this.b=h}else{var g=function(i,d,j){0>j&&(j+=1);1<j&&(j-=1);return j<1/6?i+6*(d-i)*j:0.5>j?d:j<2/3?i+6*(d-i)*(2/3-j):i},e=0.5>=h?h*(1+e):h+e-h*e,h=2*h-e;this.r=g(h,e,f+1/3);this.g=g(h,e,f);this.b=g(h,e,f-1/3)}return this},setStyle:function(b){if(/^rgb\((\d+),(\d+),(\d+)\)$/i.test(b)){return b=/^rgb\((\d+),(\d+),(\d+)\)$/i.exec(b),this.r=Math.min(255,parseInt(b[1],10))/255,this.g=Math.min(255,parseInt(b[2],10))/255,this.b=Math.min(255,parseInt(b[3],10))/255,this}if(/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.test(b)){return b=/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.exec(b),this.r=Math.min(100,parseInt(b[1],10))/100,this.g=Math.min(100,parseInt(b[2],10))/100,this.b=Math.min(100,parseInt(b[3],10))/100,this}if(/^\#([0-9a-f]{6})$/i.test(b)){return b=/^\#([0-9a-f]{6})$/i.exec(b),this.setHex(parseInt(b[1],16)),this}if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(b)){return b=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(b),this.setHex(parseInt(b[1]+b[1]+b[2]+b[2]+b[3]+b[3],16)),this}if(/^(\w+)$/i.test(b)){return this.setHex(THREE.ColorKeywords[b]),this}},copy:function(b){this.r=b.r;this.g=b.g;this.b=b.b;return this},copyGammaToLinear:function(b){this.r=b.r*b.r;this.g=b.g*b.g;this.b=b.b*b.b;return this},copyLinearToGamma:function(b){this.r=Math.sqrt(b.r);this.g=Math.sqrt(b.g);this.b=Math.sqrt(b.b);return this},convertGammaToLinear:function(){var e=this.r,d=this.g,f=this.b;this.r=e*e;this.g=d*d;this.b=f*f;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(){var b={h:0,s:0,l:0};return function(){var a=this.r,p=this.g,o=this.b,n=Math.max(a,p,o),m=Math.min(a,p,o),l,k=(m+n)/2;if(m===n){m=l=0}else{var j=n-m,m=0.5>=k?j/(n+m):j/(2-n-m);switch(n){case a:l=(p-o)/j+(p<o?6:0);break;case p:l=(o-a)/j+2;break;case o:l=(a-p)/j+4}l/=6}b.h=l;b.s=m;b.l=k;return b}}(),getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(f,e,h){var g=this.getHSL();g.h+=f;g.s+=e;g.l+=h;this.setHSL(g.h,g.s,g.l);return this},add:function(b){this.r+=b.r;this.g+=b.g;this.b+=b.b;return this},addColors:function(d,c){this.r=d.r+c.r;this.g=d.g+c.g;this.b=d.b+c.b;return this},addScalar:function(b){this.r+=b;this.g+=b;this.b+=b;return this},multiply:function(b){this.r*=b.r;this.g*=b.g;this.b*=b.b;return this},multiplyScalar:function(b){this.r*=b;this.g*=b;this.b*=b;return this},lerp:function(d,c){this.r+=(d.r-this.r)*c;this.g+=(d.g-this.g)*c;this.b+=(d.b-this.b)*c;return this},equals:function(b){return b.r===this.r&&b.g===this.g&&b.b===this.b},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(f,e,h,g){this.x=f||0;this.y=e||0;this.z=h||0;this.w=void 0!==g?g:1};THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(f,e,h,g){this.x=f;this.y=e;this.z=h;this.w=g;return this},copy:function(b){this.x=b.x;this.y=b.y;this.z=b.z;this.w=b.w;return this},setFromEuler:function(j,i){var p=Math.cos(j.x/2),o=Math.cos(j.y/2),n=Math.cos(j.z/2),m=Math.sin(j.x/2),l=Math.sin(j.y/2),k=Math.sin(j.z/2);void 0===i||"XYZ"===i?(this.x=m*o*n+p*l*k,this.y=p*l*n-m*o*k,this.z=p*o*k+m*l*n,this.w=p*o*n-m*l*k):"YXZ"===i?(this.x=m*o*n+p*l*k,this.y=p*l*n-m*o*k,this.z=p*o*k-m*l*n,this.w=p*o*n+m*l*k):"ZXY"===i?(this.x=m*o*n-p*l*k,this.y=p*l*n+m*o*k,this.z=p*o*k+m*l*n,this.w=p*o*n-m*l*k):"ZYX"===i?(this.x=m*o*n-p*l*k,this.y=p*l*n+m*o*k,this.z=p*o*k-m*l*n,this.w=p*o*n+m*l*k):"YZX"===i?(this.x=m*o*n+p*l*k,this.y=p*l*n+m*o*k,this.z=p*o*k-m*l*n,this.w=p*o*n-m*l*k):"XZY"===i&&(this.x=m*o*n-p*l*k,this.y=p*l*n-m*o*k,this.z=p*o*k+m*l*n,this.w=p*o*n+m*l*k);return this},setFromAxisAngle:function(f,e){var h=e/2,g=Math.sin(h);this.x=f.x*g;this.y=f.y*g;this.z=f.z*g;this.w=Math.cos(h);return this},setFromRotationMatrix:function(t){var s=t.elements,r=s[0],t=s[4],q=s[8],p=s[1],o=s[5],n=s[9],m=s[2],l=s[6],s=s[10],k=r+o+s;0<k?(r=0.5/Math.sqrt(k+1),this.w=0.25/r,this.x=(l-n)*r,this.y=(q-m)*r,this.z=(p-t)*r):r>o&&r>s?(r=2*Math.sqrt(1+r-o-s),this.w=(l-n)/r,this.x=0.25*r,this.y=(t+p)/r,this.z=(q+m)/r):o>s?(r=2*Math.sqrt(1+o-r-s),this.w=(q-m)/r,this.x=(t+p)/r,this.y=0.25*r,this.z=(n+l)/r):(r=2*Math.sqrt(1+s-r-o),this.w=(p-t)/r,this.x=(q+m)/r,this.y=(n+l)/r,this.z=0.25*r);return this},inverse:function(){this.conjugate().normalize();return this},conjugate:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var b=this.length();0===b?(this.z=this.y=this.x=0,this.w=1):(b=1/b,this.x*=b,this.y*=b,this.z*=b,this.w*=b);return this},multiply:function(d,c){return void 0!==c?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(d,c)):this.multiplyQuaternions(this,d)},multiplyQuaternions:function(t,s){var r=t.x,q=t.y,p=t.z,o=t.w,n=s.x,m=s.y,l=s.z,k=s.w;this.x=r*k+o*n+q*l-p*m;this.y=q*k+o*m+p*n-r*l;this.z=p*k+o*l+r*m-q*n;this.w=o*k-r*n-q*m-p*l;return this},multiplyVector3:function(b){console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");return b.applyQuaternion(this)},slerp:function(r,q){var p=this.x,o=this.y,n=this.z,m=this.w,l=m*r.w+p*r.x+o*r.y+n*r.z;0>l?(this.w=-r.w,this.x=-r.x,this.y=-r.y,this.z=-r.z,l=-l):this.copy(r);if(1<=l){return this.w=m,this.x=p,this.y=o,this.z=n,this}var k=Math.acos(l),j=Math.sqrt(1-l*l);if(0.001>Math.abs(j)){return this.w=0.5*(m+this.w),this.x=0.5*(p+this.x),this.y=0.5*(o+this.y),this.z=0.5*(n+this.z),this}l=Math.sin((1-q)*k)/j;k=Math.sin(q*k)/j;this.w=m*l+this.w*k;this.x=p*l+this.x*k;this.y=o*l+this.y*k;this.z=n*l+this.z*k;return this},equals:function(b){return b.x===this.x&&b.y===this.y&&b.z===this.z&&b.w===this.w},fromArray:function(b){this.x=b[0];this.y=b[1];this.z=b[2];this.w=b[3];return this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}};THREE.Quaternion.slerp=function(f,e,h,g){return h.copy(f).slerp(e,g)};THREE.Vector2=function(d,c){this.x=d||0;this.y=c||0};THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(d,c){this.x=d;this.y=c;return this},setX:function(b){this.x=b;return this},setY:function(b){this.y=b;return this},setComponent:function(d,c){switch(d){case 0:this.x=c;break;case 1:this.y=c;break;default:throw Error("index is out of range: "+d)}},getComponent:function(b){switch(b){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+b)}},copy:function(b){this.x=b.x;this.y=b.y;return this},add:function(d,c){if(void 0!==c){return console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(d,c)}this.x+=d.x;this.y+=d.y;return this},addVectors:function(d,c){this.x=d.x+c.x;this.y=d.y+c.y;return this},addScalar:function(b){this.x+=b;this.y+=b;return this},sub:function(d,c){if(void 0!==c){return console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(d,c)}this.x-=d.x;this.y-=d.y;return this},subVectors:function(d,c){this.x=d.x-c.x;this.y=d.y-c.y;return this},multiplyScalar:function(b){this.x*=b;this.y*=b;return this},divideScalar:function(b){0!==b?(this.x/=b,this.y/=b):this.set(0,0);return this},min:function(b){this.x>b.x&&(this.x=b.x);this.y>b.y&&(this.y=b.y);return this},max:function(b){this.x<b.x&&(this.x=b.x);this.y<b.y&&(this.y=b.y);return this},clamp:function(d,c){this.x<d.x?this.x=d.x:this.x>c.x&&(this.x=c.x);this.y<d.y?this.y=d.y:this.y>c.y&&(this.y=c.y);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(b){return this.x*b.x+this.y*b.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(b){return Math.sqrt(this.distanceToSquared(b))},distanceToSquared:function(d){var c=this.x-d.x,d=this.y-d.y;return c*c+d*d},setLength:function(d){var c=this.length();0!==c&&d!==c&&this.multiplyScalar(d/c);return this},lerp:function(d,c){this.x+=(d.x-this.x)*c;this.y+=(d.y-this.y)*c;return this},equals:function(b){return b.x===this.x&&b.y===this.y},fromArray:function(b){this.x=b[0];this.y=b[1];return this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(e,d,f){this.x=e||0;this.y=d||0;this.z=f||0};THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,d,f){this.x=e;this.y=d;this.z=f;return this},setX:function(b){this.x=b;return this},setY:function(b){this.y=b;return this},setZ:function(b){this.z=b;return this},setComponent:function(d,c){switch(d){case 0:this.x=c;break;case 1:this.y=c;break;case 2:this.z=c;break;default:throw Error("index is out of range: "+d)}},getComponent:function(b){switch(b){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+b)}},copy:function(b){this.x=b.x;this.y=b.y;this.z=b.z;return this},add:function(d,c){if(void 0!==c){return console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(d,c)}this.x+=d.x;this.y+=d.y;this.z+=d.z;return this},addScalar:function(b){this.x+=b;this.y+=b;this.z+=b;return this},addVectors:function(d,c){this.x=d.x+c.x;this.y=d.y+c.y;this.z=d.z+c.z;return this},sub:function(d,c){if(void 0!==c){return console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(d,c)}this.x-=d.x;this.y-=d.y;this.z-=d.z;return this},subVectors:function(d,c){this.x=d.x-c.x;this.y=d.y-c.y;this.z=d.z-c.z;return this},multiply:function(d,c){if(void 0!==c){return console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(d,c)}this.x*=d.x;this.y*=d.y;this.z*=d.z;return this},multiplyScalar:function(b){this.x*=b;this.y*=b;this.z*=b;return this},multiplyVectors:function(d,c){this.x=d.x*c.x;this.y=d.y*c.y;this.z=d.z*c.z;return this},applyMatrix3:function(f){var e=this.x,h=this.y,g=this.z,f=f.elements;this.x=f[0]*e+f[3]*h+f[6]*g;this.y=f[1]*e+f[4]*h+f[7]*g;this.z=f[2]*e+f[5]*h+f[8]*g;return this},applyMatrix4:function(f){var e=this.x,h=this.y,g=this.z,f=f.elements;this.x=f[0]*e+f[4]*h+f[8]*g+f[12];this.y=f[1]*e+f[5]*h+f[9]*g+f[13];this.z=f[2]*e+f[6]*h+f[10]*g+f[14];return this},applyProjection:function(g){var f=this.x,j=this.y,i=this.z,g=g.elements,h=1/(g[3]*f+g[7]*j+g[11]*i+g[15]);this.x=(g[0]*f+g[4]*j+g[8]*i+g[12])*h;this.y=(g[1]*f+g[5]*j+g[9]*i+g[13])*h;this.z=(g[2]*f+g[6]*j+g[10]*i+g[14])*h;return this},applyQuaternion:function(t){var s=this.x,r=this.y,q=this.z,p=t.x,o=t.y,n=t.z,t=t.w,m=t*s+o*q-n*r,l=t*r+n*s-p*q,k=t*q+p*r-o*s,s=-p*s-o*r-n*q;this.x=m*t+s*-p+l*-n-k*-o;this.y=l*t+s*-o+k*-p-m*-n;this.z=k*t+s*-n+m*-o-l*-p;return this},transformDirection:function(f){var e=this.x,h=this.y,g=this.z,f=f.elements;this.x=f[0]*e+f[4]*h+f[8]*g;this.y=f[1]*e+f[5]*h+f[9]*g;this.z=f[2]*e+f[6]*h+f[10]*g;this.normalize();return this},divide:function(b){this.x/=b.x;this.y/=b.y;this.z/=b.z;return this},divideScalar:function(b){0!==b?(this.x/=b,this.y/=b,this.z/=b):this.z=this.y=this.x=0;return this},min:function(b){this.x>b.x&&(this.x=b.x);this.y>b.y&&(this.y=b.y);this.z>b.z&&(this.z=b.z);return this},max:function(b){this.x<b.x&&(this.x=b.x);this.y<b.y&&(this.y=b.y);this.z<b.z&&(this.z=b.z);return this},clamp:function(d,c){this.x<d.x?this.x=d.x:this.x>c.x&&(this.x=c.x);this.y<d.y?this.y=d.y:this.y>c.y&&(this.y=c.y);this.z<d.z?this.z=d.z:this.z>c.z&&(this.z=c.z);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(b){return this.x*b.x+this.y*b.y+this.z*b.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(d){var c=this.length();0!==c&&d!==c&&this.multiplyScalar(d/c);return this},lerp:function(d,c){this.x+=(d.x-this.x)*c;this.y+=(d.y-this.y)*c;this.z+=(d.z-this.z)*c;return this},cross:function(g,f){if(void 0!==f){return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(g,f)}var j=this.x,i=this.y,h=this.z;this.x=i*g.z-h*g.y;this.y=h*g.x-j*g.z;this.z=j*g.y-i*g.x;return this},crossVectors:function(d,c){this.x=d.y*c.z-d.z*c.y;this.y=d.z*c.x-d.x*c.z;this.z=d.x*c.y-d.y*c.x;return this},angleTo:function(b){b=this.dot(b)/(this.length()*b.length());return Math.acos(THREE.Math.clamp(b,-1,1))},distanceTo:function(b){return Math.sqrt(this.distanceToSquared(b))},distanceToSquared:function(e){var d=this.x-e.x,f=this.y-e.y,e=this.z-e.z;return d*d+f*f+e*e},setEulerFromRotationMatrix:function(x,w){function v(b){return Math.min(Math.max(b,-1),1)}var u=x.elements,t=u[0],s=u[4],r=u[8],q=u[1],o=u[5],n=u[9],l=u[2],k=u[6],u=u[10];void 0===w||"XYZ"===w?(this.y=Math.asin(v(r)),0.99999>Math.abs(r)?(this.x=Math.atan2(-n,u),this.z=Math.atan2(-s,t)):(this.x=Math.atan2(k,o),this.z=0)):"YXZ"===w?(this.x=Math.asin(-v(n)),0.99999>Math.abs(n)?(this.y=Math.atan2(r,u),this.z=Math.atan2(q,o)):(this.y=Math.atan2(-l,t),this.z=0)):"ZXY"===w?(this.x=Math.asin(v(k)),0.99999>Math.abs(k)?(this.y=Math.atan2(-l,u),this.z=Math.atan2(-s,o)):(this.y=0,this.z=Math.atan2(q,t))):"ZYX"===w?(this.y=Math.asin(-v(l)),0.99999>Math.abs(l)?(this.x=Math.atan2(k,u),this.z=Math.atan2(q,t)):(this.x=0,this.z=Math.atan2(-s,o))):"YZX"===w?(this.z=Math.asin(v(q)),0.99999>Math.abs(q)?(this.x=Math.atan2(-n,o),this.y=Math.atan2(-l,t)):(this.x=0,this.y=Math.atan2(r,u))):"XZY"===w&&(this.z=Math.asin(-v(s)),0.99999>Math.abs(s)?(this.x=Math.atan2(k,o),this.y=Math.atan2(r,t)):(this.x=Math.atan2(-n,u),this.y=0));return this},setEulerFromQuaternion:function(i,h){function n(b){return Math.min(Math.max(b,-1),1)}var m=i.x*i.x,l=i.y*i.y,k=i.z*i.z,j=i.w*i.w;void 0===h||"XYZ"===h?(this.x=Math.atan2(2*(i.x*i.w-i.y*i.z),j-m-l+k),this.y=Math.asin(n(2*(i.x*i.z+i.y*i.w))),this.z=Math.atan2(2*(i.z*i.w-i.x*i.y),j+m-l-k)):"YXZ"===h?(this.x=Math.asin(n(2*(i.x*i.w-i.y*i.z))),this.y=Math.atan2(2*(i.x*i.z+i.y*i.w),j-m-l+k),this.z=Math.atan2(2*(i.x*i.y+i.z*i.w),j-m+l-k)):"ZXY"===h?(this.x=Math.asin(n(2*(i.x*i.w+i.y*i.z))),this.y=Math.atan2(2*(i.y*i.w-i.z*i.x),j-m-l+k),this.z=Math.atan2(2*(i.z*i.w-i.x*i.y),j-m+l-k)):"ZYX"===h?(this.x=Math.atan2(2*(i.x*i.w+i.z*i.y),j-m-l+k),this.y=Math.asin(n(2*(i.y*i.w-i.x*i.z))),this.z=Math.atan2(2*(i.x*i.y+i.z*i.w),j+m-l-k)):"YZX"===h?(this.x=Math.atan2(2*(i.x*i.w-i.z*i.y),j-m+l-k),this.y=Math.atan2(2*(i.y*i.w-i.x*i.z),j+m-l-k),this.z=Math.asin(n(2*(i.x*i.y+i.z*i.w)))):"XZY"===h&&(this.x=Math.atan2(2*(i.x*i.w+i.y*i.z),j-m+l-k),this.y=Math.atan2(2*(i.x*i.z+i.y*i.w),j+m-l-k),this.z=Math.asin(n(2*(i.z*i.w-i.x*i.y))));return this},getPositionFromMatrix:function(b){this.x=b.elements[12];this.y=b.elements[13];this.z=b.elements[14];return this},getScaleFromMatrix:function(e){var d=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),f=this.set(e.elements[4],e.elements[5],e.elements[6]).length(),e=this.set(e.elements[8],e.elements[9],e.elements[10]).length();this.x=d;this.y=f;this.z=e;return this},getColumnFromMatrix:function(f,e){var h=4*f,g=e.elements;this.x=g[h];this.y=g[h+1];this.z=g[h+2];return this},equals:function(b){return b.x===this.x&&b.y===this.y&&b.z===this.z},fromArray:function(b){this.x=b[0];this.y=b[1];this.z=b[2];return this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.extend(THREE.Vector3.prototype,{applyEuler:function(){var b=new THREE.Quaternion;return function(a,f){var e=b.setFromEuler(a,f);this.applyQuaternion(e);return this}}(),applyAxisAngle:function(){var b=new THREE.Quaternion;return function(a,f){var e=b.setFromAxisAngle(a,f);this.applyQuaternion(e);return this}}(),projectOnVector:function(){var b=new THREE.Vector3;return function(a){b.copy(a).normalize();a=this.dot(b);return this.copy(b).multiplyScalar(a)}}(),projectOnPlane:function(){var b=new THREE.Vector3;return function(a){b.copy(this).projectOnVector(a);return this.sub(b)}}(),reflect:function(){var b=new THREE.Vector3;return function(a){b.copy(this).projectOnVector(a).multiplyScalar(2);return this.subVectors(b,this)}}()});THREE.Vector4=function(f,e,h,g){this.x=f||0;this.y=e||0;this.z=h||0;this.w=void 0!==g?g:1};THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(f,e,h,g){this.x=f;this.y=e;this.z=h;this.w=g;return this},setX:function(b){this.x=b;return this},setY:function(b){this.y=b;return this},setZ:function(b){this.z=b;return this},setW:function(b){this.w=b;return this},setComponent:function(d,c){switch(d){case 0:this.x=c;break;case 1:this.y=c;break;case 2:this.z=c;break;case 3:this.w=c;break;default:throw Error("index is out of range: "+d)}},getComponent:function(b){switch(b){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+b)}},copy:function(b){this.x=b.x;this.y=b.y;this.z=b.z;this.w=void 0!==b.w?b.w:1;return this},add:function(d,c){if(void 0!==c){return console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(d,c)}this.x+=d.x;this.y+=d.y;this.z+=d.z;this.w+=d.w;return this},addScalar:function(b){this.x+=b;this.y+=b;this.z+=b;this.w+=b;return this},addVectors:function(d,c){this.x=d.x+c.x;this.y=d.y+c.y;this.z=d.z+c.z;this.w=d.w+c.w;return this},sub:function(d,c){if(void 0!==c){return console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(d,c)}this.x-=d.x;this.y-=d.y;this.z-=d.z;this.w-=d.w;return this},subVectors:function(d,c){this.x=d.x-c.x;this.y=d.y-c.y;this.z=d.z-c.z;this.w=d.w-c.w;return this},multiplyScalar:function(b){this.x*=b;this.y*=b;this.z*=b;this.w*=b;return this},applyMatrix4:function(g){var f=this.x,j=this.y,i=this.z,h=this.w,g=g.elements;this.x=g[0]*f+g[4]*j+g[8]*i+g[12]*h;this.y=g[1]*f+g[5]*j+g[9]*i+g[13]*h;this.z=g[2]*f+g[6]*j+g[10]*i+g[14]*h;this.w=g[3]*f+g[7]*j+g[11]*i+g[15]*h;return this},divideScalar:function(b){0!==b?(this.x/=b,this.y/=b,this.z/=b,this.w/=b):(this.z=this.y=this.x=0,this.w=1);return this},setAxisAngleFromQuaternion:function(d){this.w=2*Math.acos(d.w);var c=Math.sqrt(1-d.w*d.w);0.0001>c?(this.x=1,this.z=this.y=0):(this.x=d.x/c,this.y=d.y/c,this.z=d.z/c);return this},setAxisAngleFromRotationMatrix:function(t){var s,r,q,t=t.elements,p=t[0];q=t[4];var o=t[8],n=t[1],m=t[5],l=t[9];r=t[2];s=t[6];var k=t[10];if(0.01>Math.abs(q-n)&&0.01>Math.abs(o-r)&&0.01>Math.abs(l-s)){if(0.1>Math.abs(q+n)&&0.1>Math.abs(o+r)&&0.1>Math.abs(l+s)&&0.1>Math.abs(p+m+k-3)){return this.set(1,0,0,0),this}t=Math.PI;p=(p+1)/2;m=(m+1)/2;k=(k+1)/2;q=(q+n)/4;o=(o+r)/4;l=(l+s)/4;p>m&&p>k?0.01>p?(s=0,q=r=0.707106781):(s=Math.sqrt(p),r=q/s,q=o/s):m>k?0.01>m?(s=0.707106781,r=0,q=0.707106781):(r=Math.sqrt(m),s=q/r,q=l/r):0.01>k?(r=s=0.707106781,q=0):(q=Math.sqrt(k),s=o/q,r=l/q);this.set(s,r,q,t);return this}t=Math.sqrt((s-l)*(s-l)+(o-r)*(o-r)+(n-q)*(n-q));0.001>Math.abs(t)&&(t=1);this.x=(s-l)/t;this.y=(o-r)/t;this.z=(n-q)/t;this.w=Math.acos((p+m+k-1)/2);return this},min:function(b){this.x>b.x&&(this.x=b.x);this.y>b.y&&(this.y=b.y);this.z>b.z&&(this.z=b.z);this.w>b.w&&(this.w=b.w);return this},max:function(b){this.x<b.x&&(this.x=b.x);this.y<b.y&&(this.y=b.y);this.z<b.z&&(this.z=b.z);this.w<b.w&&(this.w=b.w);return this},clamp:function(d,c){this.x<d.x?this.x=d.x:this.x>c.x&&(this.x=c.x);this.y<d.y?this.y=d.y:this.y>c.y&&(this.y=c.y);this.z<d.z?this.z=d.z:this.z>c.z&&(this.z=c.z);this.w<d.w?this.w=d.w:this.w>c.w&&(this.w=c.w);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(b){return this.x*b.x+this.y*b.y+this.z*b.z+this.w*b.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(d){var c=this.length();0!==c&&d!==c&&this.multiplyScalar(d/c);return this},lerp:function(d,c){this.x+=(d.x-this.x)*c;this.y+=(d.y-this.y)*c;this.z+=(d.z-this.z)*c;this.w+=(d.w-this.w)*c;return this},equals:function(b){return b.x===this.x&&b.y===this.y&&b.z===this.z&&b.w===this.w},fromArray:function(b){this.x=b[0];this.y=b[1];this.z=b[2];this.w=b[3];return this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}};THREE.Line3=function(d,c){this.start=void 0!==d?d:new THREE.Vector3;this.end=void 0!==c?c:new THREE.Vector3};THREE.Line3.prototype={constructor:THREE.Line3,set:function(d,c){this.start.copy(d);this.end.copy(c);return this},copy:function(b){this.start.copy(b.start);this.end.copy(b.end);return this},center:function(b){return(b||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(0.5)},delta:function(b){return(b||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,d){var f=d||new THREE.Vector3;return this.delta(f).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(){var d=new THREE.Vector3,c=new THREE.Vector3;return function(f,b){d.subVectors(f,this.start);c.subVectors(this.end,this.start);var a=c.dot(c),a=c.dot(d)/a;b&&(a=THREE.Math.clamp(a,0,1));return a}}(),closestPointToPoint:function(e,d,f){e=this.closestPointToPointParameter(e,d);f=f||new THREE.Vector3;return this.delta(f).multiplyScalar(e).add(this.start)},applyMatrix4:function(b){this.start.applyMatrix4(b);this.end.applyMatrix4(b);return this},equals:function(b){return b.start.equals(this.start)&&b.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}};THREE.Box2=function(d,c){this.min=void 0!==d?d:new THREE.Vector2(Infinity,Infinity);this.max=void 0!==c?c:new THREE.Vector2(-Infinity,-Infinity)};THREE.Box2.prototype={constructor:THREE.Box2,set:function(d,c){this.min.copy(d);this.max.copy(c);return this},setFromPoints:function(f){if(0<f.length){var e=f[0];this.min.copy(e);this.max.copy(e);for(var h=1,g=f.length;h<g;h++){e=f[h],e.x<this.min.x?this.min.x=e.x:e.x>this.max.x&&(this.max.x=e.x),e.y<this.min.y?this.min.y=e.y:e.y>this.max.y&&(this.max.y=e.y)}}else{this.makeEmpty()}return this},setFromCenterAndSize:function(){var b=new THREE.Vector2;return function(a,f){var e=b.copy(f).multiplyScalar(0.5);this.min.copy(a).sub(e);this.max.copy(a).add(e);return this}}(),copy:function(b){this.min.copy(b.min);this.max.copy(b.max);return this},makeEmpty:function(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(b){return(b||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(0.5)},size:function(b){return(b||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(b){this.min.min(b);this.max.max(b);return this},expandByVector:function(b){this.min.sub(b);this.max.add(b);return this},expandByScalar:function(b){this.min.addScalar(-b);this.max.addScalar(b);return this},containsPoint:function(b){return b.x<this.min.x||b.x>this.max.x||b.y<this.min.y||b.y>this.max.y?!1:!0},containsBox:function(b){return this.min.x<=b.min.x&&b.max.x<=this.max.x&&this.min.y<=b.min.y&&b.max.y<=this.max.y?!0:!1},getParameter:function(b){return new THREE.Vector2((b.x-this.min.x)/(this.max.x-this.min.x),(b.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(b){return b.max.x<this.min.x||b.min.x>this.max.x||b.max.y<this.min.y||b.min.y>this.max.y?!1:!0},clampPoint:function(d,c){return(c||new THREE.Vector2).copy(d).clamp(this.min,this.max)},distanceToPoint:function(){var b=new THREE.Vector2;return function(a){return b.copy(a).clamp(this.min,this.max).sub(a).length()}}(),intersect:function(b){this.min.max(b.min);this.max.min(b.max);return this},union:function(b){this.min.min(b.min);this.max.max(b.max);return this},translate:function(b){this.min.add(b);this.max.add(b);return this},equals:function(b){return b.min.equals(this.min)&&b.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}};THREE.Box3=function(d,c){this.min=void 0!==d?d:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=void 0!==c?c:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};THREE.Box3.prototype={constructor:THREE.Box3,set:function(d,c){this.min.copy(d);this.max.copy(c);return this},setFromPoints:function(f){if(0<f.length){var e=f[0];this.min.copy(e);this.max.copy(e);for(var h=1,g=f.length;h<g;h++){e=f[h],e.x<this.min.x?this.min.x=e.x:e.x>this.max.x&&(this.max.x=e.x),e.y<this.min.y?this.min.y=e.y:e.y>this.max.y&&(this.max.y=e.y),e.z<this.min.z?this.min.z=e.z:e.z>this.max.z&&(this.max.z=e.z)}}else{this.makeEmpty()}return this},setFromCenterAndSize:function(){var b=new THREE.Vector3;return function(a,f){var e=b.copy(f).multiplyScalar(0.5);this.min.copy(a).sub(e);this.max.copy(a).add(e);return this}}(),copy:function(b){this.min.copy(b.min);this.max.copy(b.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(b){return(b||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(0.5)},size:function(b){return(b||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(b){this.min.min(b);this.max.max(b);return this},expandByVector:function(b){this.min.sub(b);this.max.add(b);return this},expandByScalar:function(b){this.min.addScalar(-b);this.max.addScalar(b);return this},containsPoint:function(b){return b.x<this.min.x||b.x>this.max.x||b.y<this.min.y||b.y>this.max.y||b.z<this.min.z||b.z>this.max.z?!1:!0},containsBox:function(b){return this.min.x<=b.min.x&&b.max.x<=this.max.x&&this.min.y<=b.min.y&&b.max.y<=this.max.y&&this.min.z<=b.min.z&&b.max.z<=this.max.z?!0:!1},getParameter:function(b){return new THREE.Vector3((b.x-this.min.x)/(this.max.x-this.min.x),(b.y-this.min.y)/(this.max.y-this.min.y),(b.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(b){return b.max.x<this.min.x||b.min.x>this.max.x||b.max.y<this.min.y||b.min.y>this.max.y||b.max.z<this.min.z||b.min.z>this.max.z?!1:!0},clampPoint:function(d,c){return(c||new THREE.Vector3).copy(d).clamp(this.min,this.max)},distanceToPoint:function(){var b=new THREE.Vector3;return function(a){return b.copy(a).clamp(this.min,this.max).sub(a).length()}}(),getBoundingSphere:function(){var b=new THREE.Vector3;return function(a){a=a||new THREE.Sphere;a.center=this.center();a.radius=0.5*this.size(b).length();return a}}(),intersect:function(b){this.min.max(b.min);this.max.min(b.max);return this},union:function(b){this.min.min(b.min);this.max.max(b.max);return this},applyMatrix4:function(){var b=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(a){b[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(a);b[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(a);b[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(a);b[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(a);b[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(a);b[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(a);b[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(a);b[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(a);this.makeEmpty();this.setFromPoints(b);return this}}(),translate:function(b){this.min.add(b);this.max.add(b);return this},equals:function(b){return b.min.equals(this.min)&&b.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}};THREE.Matrix3=function(r,q,p,o,n,m,l,k,j){this.elements=new Float32Array(9);this.set(void 0!==r?r:1,q||0,p||0,o||0,void 0!==n?n:1,m||0,l||0,k||0,void 0!==j?j:1)};THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(t,s,r,q,p,o,n,m,l){var k=this.elements;k[0]=t;k[3]=s;k[6]=r;k[1]=q;k[4]=p;k[7]=o;k[2]=n;k[5]=m;k[8]=l;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},copy:function(b){b=b.elements;this.set(b[0],b[3],b[6],b[1],b[4],b[7],b[2],b[5],b[8]);return this},multiplyVector3:function(b){console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");return b.applyMatrix3(this)},multiplyVector3Array:function(){var b=new THREE.Vector3;return function(a){for(var f=0,e=a.length;f<e;f+=3){b.x=a[f],b.y=a[f+1],b.z=a[f+2],b.applyMatrix3(this),a[f]=b.x,a[f+1]=b.y,a[f+2]=b.z}return a}}(),multiplyScalar:function(d){var c=this.elements;c[0]*=d;c[3]*=d;c[6]*=d;c[1]*=d;c[4]*=d;c[7]*=d;c[2]*=d;c[5]*=d;c[8]*=d;return this},determinant:function(){var r=this.elements,q=r[0],p=r[1],o=r[2],n=r[3],m=r[4],l=r[5],k=r[6],j=r[7],r=r[8];return q*m*r-q*l*j-p*n*r+p*l*k+o*n*j-o*m*k},getInverse:function(f,e){var h=f.elements,g=this.elements;g[0]=h[10]*h[5]-h[6]*h[9];g[1]=-h[10]*h[1]+h[2]*h[9];g[2]=h[6]*h[1]-h[2]*h[5];g[3]=-h[10]*h[4]+h[6]*h[8];g[4]=h[10]*h[0]-h[2]*h[8];g[5]=-h[6]*h[0]+h[2]*h[4];g[6]=h[9]*h[4]-h[5]*h[8];g[7]=-h[9]*h[0]+h[1]*h[8];g[8]=h[5]*h[0]-h[1]*h[4];h=h[0]*g[0]+h[1]*g[3]+h[2]*g[6];if(0===h){if(e){throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0")}console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/h);return this},transpose:function(){var d,c=this.elements;d=c[1];c[1]=c[3];c[3]=d;d=c[2];c[2]=c[6];c[6]=d;d=c[5];c[5]=c[7];c[7]=d;return this},getNormalMatrix:function(b){this.getInverse(b).transpose();return this},transposeIntoArray:function(d){var c=this.elements;d[0]=c[0];d[1]=c[3];d[2]=c[6];d[3]=c[1];d[4]=c[4];d[5]=c[7];d[6]=c[2];d[7]=c[5];d[8]=c[8];return this},clone:function(){var b=this.elements;return new THREE.Matrix3(b[0],b[3],b[6],b[1],b[4],b[7],b[2],b[5],b[8])}};THREE.Matrix4=function(G,F,E,D,C,B,A,z,y,x,v,t,w,k,H,u){var o=this.elements=new Float32Array(16);o[0]=void 0!==G?G:1;o[4]=F||0;o[8]=E||0;o[12]=D||0;o[1]=C||0;o[5]=void 0!==B?B:1;o[9]=A||0;o[13]=z||0;o[2]=y||0;o[6]=x||0;o[10]=void 0!==v?v:1;o[14]=t||0;o[3]=w||0;o[7]=k||0;o[11]=H||0;o[15]=void 0!==u?u:1};THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(G,F,E,D,C,B,A,z,y,x,v,t,w,k,H,u){var o=this.elements;o[0]=G;o[4]=F;o[8]=E;o[12]=D;o[1]=C;o[5]=B;o[9]=A;o[13]=z;o[2]=y;o[6]=x;o[10]=v;o[14]=t;o[3]=w;o[7]=k;o[11]=H;o[15]=u;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(b){b=b.elements;this.set(b[0],b[4],b[8],b[12],b[1],b[5],b[9],b[13],b[2],b[6],b[10],b[14],b[3],b[7],b[11],b[15]);return this},extractPosition:function(b){console.warn("DEPRECATED: Matrix4's .extractPosition() has been renamed to .copyPosition().");return this.copyPosition(b)},copyPosition:function(d){var c=this.elements,d=d.elements;c[12]=d[12];c[13]=d[13];c[14]=d[14];return this},extractRotation:function(){var b=new THREE.Vector3;return function(a){var j=this.elements,a=a.elements,i=1/b.set(a[0],a[1],a[2]).length(),h=1/b.set(a[4],a[5],a[6]).length(),g=1/b.set(a[8],a[9],a[10]).length();j[0]=a[0]*i;j[1]=a[1]*i;j[2]=a[2]*i;j[4]=a[4]*h;j[5]=a[5]*h;j[6]=a[6]*h;j[8]=a[8]*g;j[9]=a[9]*g;j[10]=a[10]*g;return this}}(),setRotationFromEuler:function(d,c){console.warn("DEPRECATED: Matrix4's .setRotationFromEuler() has been deprecated in favor of makeRotationFromEuler.  Please update your code.");return this.makeRotationFromEuler(d,c)},makeRotationFromEuler:function(z,y){var x=this.elements,w=z.x,v=z.y,u=z.z,t=Math.cos(w),w=Math.sin(w),s=Math.cos(v),v=Math.sin(v),r=Math.cos(u),u=Math.sin(u);if(void 0===y||"XYZ"===y){var q=t*r,n=t*u,k=w*r,o=w*u;x[0]=s*r;x[4]=-s*u;x[8]=v;x[1]=n+k*v;x[5]=q-o*v;x[9]=-w*s;x[2]=o-q*v;x[6]=k+n*v;x[10]=t*s}else{"YXZ"===y?(q=s*r,n=s*u,k=v*r,o=v*u,x[0]=q+o*w,x[4]=k*w-n,x[8]=t*v,x[1]=t*u,x[5]=t*r,x[9]=-w,x[2]=n*w-k,x[6]=o+q*w,x[10]=t*s):"ZXY"===y?(q=s*r,n=s*u,k=v*r,o=v*u,x[0]=q-o*w,x[4]=-t*u,x[8]=k+n*w,x[1]=n+k*w,x[5]=t*r,x[9]=o-q*w,x[2]=-t*v,x[6]=w,x[10]=t*s):"ZYX"===y?(q=t*r,n=t*u,k=w*r,o=w*u,x[0]=s*r,x[4]=k*v-n,x[8]=q*v+o,x[1]=s*u,x[5]=o*v+q,x[9]=n*v-k,x[2]=-v,x[6]=w*s,x[10]=t*s):"YZX"===y?(q=t*s,n=t*v,k=w*s,o=w*v,x[0]=s*r,x[4]=o-q*u,x[8]=k*u+n,x[1]=u,x[5]=t*r,x[9]=-w*r,x[2]=-v*r,x[6]=n*u+k,x[10]=q-o*u):"XZY"===y&&(q=t*s,n=t*v,k=w*s,o=w*v,x[0]=s*r,x[4]=-u,x[8]=v*r,x[1]=q*u+o,x[5]=t*r,x[9]=n*u-k,x[2]=k*u-n,x[6]=w*r,x[10]=o*u+q)}x[3]=0;x[7]=0;x[11]=0;x[12]=0;x[13]=0;x[14]=0;x[15]=1;return this},setRotationFromQuaternion:function(b){console.warn("DEPRECATED: Matrix4's .setRotationFromQuaternion() has been deprecated in favor of makeRotationFromQuaternion.  Please update your code.");return this.makeRotationFromQuaternion(b)},makeRotationFromQuaternion:function(v){var u=this.elements,t=v.x,s=v.y,r=v.z,q=v.w,p=t+t,o=s+s,n=r+r,v=t*p,l=t*o,t=t*n,k=s*o,s=s*n,r=r*n,p=q*p,o=q*o,q=q*n;u[0]=1-(k+r);u[4]=l-q;u[8]=t+o;u[1]=l+q;u[5]=1-(v+r);u[9]=s-p;u[2]=t-o;u[6]=s+p;u[10]=1-(v+k);u[3]=0;u[7]=0;u[11]=0;u[12]=0;u[13]=0;u[14]=0;u[15]=1;return this},lookAt:function(){var e=new THREE.Vector3,d=new THREE.Vector3,f=new THREE.Vector3;return function(h,c,b){var a=this.elements;f.subVectors(h,c).normalize();0===f.length()&&(f.z=1);e.crossVectors(b,f).normalize();0===e.length()&&(f.x+=0.0001,e.crossVectors(b,f).normalize());d.crossVectors(f,e);a[0]=e.x;a[4]=d.x;a[8]=f.x;a[1]=e.y;a[5]=d.y;a[9]=f.y;a[2]=e.z;a[6]=d.z;a[10]=f.z;return this}}(),multiply:function(d,c){return void 0!==c?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(d,c)):this.multiplyMatrices(this,d)},multiplyMatrices:function(ar,aq){var ap=ar.elements,ao=aq.elements,an=this.elements,am=ap[0],al=ap[4],ak=ap[8],aj=ap[12],ai=ap[1],ag=ap[5],ae=ap[9],ah=ap[13],ab=ap[2],Z=ap[6],af=ap[10],ad=ap[14],O=ap[3],W=ap[7],Q=ap[11],ap=ap[15],Y=ao[0],X=ao[4],N=ao[8],U=ao[12],D=ao[1],S=ao[5],A=ao[9],T=ao[13],w=ao[2],ac=ao[6],k=ao[10],aa=ao[14],P=ao[3],v=ao[7],o=ao[11],ao=ao[15];an[0]=am*Y+al*D+ak*w+aj*P;an[4]=am*X+al*S+ak*ac+aj*v;an[8]=am*N+al*A+ak*k+aj*o;an[12]=am*U+al*T+ak*aa+aj*ao;an[1]=ai*Y+ag*D+ae*w+ah*P;an[5]=ai*X+ag*S+ae*ac+ah*v;an[9]=ai*N+ag*A+ae*k+ah*o;an[13]=ai*U+ag*T+ae*aa+ah*ao;an[2]=ab*Y+Z*D+af*w+ad*P;an[6]=ab*X+Z*S+af*ac+ad*v;an[10]=ab*N+Z*A+af*k+ad*o;an[14]=ab*U+Z*T+af*aa+ad*ao;an[3]=O*Y+W*D+Q*w+ap*P;an[7]=O*X+W*S+Q*ac+ap*v;an[11]=O*N+W*A+Q*k+ap*o;an[15]=O*U+W*T+Q*aa+ap*ao;return this},multiplyToArray:function(f,e,h){var g=this.elements;this.multiplyMatrices(f,e);h[0]=g[0];h[1]=g[1];h[2]=g[2];h[3]=g[3];h[4]=g[4];h[5]=g[5];h[6]=g[6];h[7]=g[7];h[8]=g[8];h[9]=g[9];h[10]=g[10];h[11]=g[11];h[12]=g[12];h[13]=g[13];h[14]=g[14];h[15]=g[15];return this},multiplyScalar:function(d){var c=this.elements;c[0]*=d;c[4]*=d;c[8]*=d;c[12]*=d;c[1]*=d;c[5]*=d;c[9]*=d;c[13]*=d;c[2]*=d;c[6]*=d;c[10]*=d;c[14]*=d;c[3]*=d;c[7]*=d;c[11]*=d;c[15]*=d;return this},multiplyVector3:function(b){console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.");return b.applyProjection(this)},multiplyVector4:function(b){console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");return b.applyMatrix4(this)},multiplyVector3Array:function(){var b=new THREE.Vector3;return function(a){for(var f=0,e=a.length;f<e;f+=3){b.x=a[f],b.y=a[f+1],b.z=a[f+2],b.applyProjection(this),a[f]=b.x,a[f+1]=b.y,a[f+2]=b.z}return a}}(),rotateAxis:function(b){console.warn("DEPRECATED: Matrix4's .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.");b.transformDirection(this)},crossVector:function(b){console.warn("DEPRECATED: Matrix4's .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.");return b.applyMatrix4(this)},determinant:function(){var z=this.elements,y=z[0],x=z[4],w=z[8],v=z[12],u=z[1],t=z[5],s=z[9],r=z[13],q=z[2],n=z[6],k=z[10],o=z[14];return z[3]*(+v*s*n-w*r*n-v*t*k+x*r*k+w*t*o-x*s*o)+z[7]*(+y*s*o-y*r*k+v*u*k-w*u*o+w*r*q-v*s*q)+z[11]*(+y*r*n-y*t*o-v*u*n+x*u*o+v*t*q-x*r*q)+z[15]*(-w*t*q-y*s*n+y*t*k+w*u*n-x*u*k+x*s*q)},transpose:function(){var d=this.elements,c;c=d[1];d[1]=d[4];d[4]=c;c=d[2];d[2]=d[8];d[8]=c;c=d[6];d[6]=d[9];d[9]=c;c=d[3];d[3]=d[12];d[12]=c;c=d[7];d[7]=d[13];d[13]=c;c=d[11];d[11]=d[14];d[14]=c;return this},flattenToArray:function(d){var c=this.elements;d[0]=c[0];d[1]=c[1];d[2]=c[2];d[3]=c[3];d[4]=c[4];d[5]=c[5];d[6]=c[6];d[7]=c[7];d[8]=c[8];d[9]=c[9];d[10]=c[10];d[11]=c[11];d[12]=c[12];d[13]=c[13];d[14]=c[14];d[15]=c[15];return d},flattenToArrayOffset:function(e,d){var f=this.elements;e[d]=f[0];e[d+1]=f[1];e[d+2]=f[2];e[d+3]=f[3];e[d+4]=f[4];e[d+5]=f[5];e[d+6]=f[6];e[d+7]=f[7];e[d+8]=f[8];e[d+9]=f[9];e[d+10]=f[10];e[d+11]=f[11];e[d+12]=f[12];e[d+13]=f[13];e[d+14]=f[14];e[d+15]=f[15];return e},getPosition:function(){var b=new THREE.Vector3;return function(){console.warn("DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.getPositionFromMatrix( matrix ) instead.");var a=this.elements;return b.set(a[12],a[13],a[14])}}(),setPosition:function(d){var c=this.elements;c[12]=d.x;c[13]=d.y;c[14]=d.z;return this},getInverse:function(N,M){var L=this.elements,K=N.elements,J=K[0],I=K[4],H=K[8],G=K[12],F=K[1],E=K[5],C=K[9],A=K[13],D=K[2],w=K[6],v=K[10],B=K[14],z=K[3],k=K[7],t=K[11],o=K[15];L[0]=C*B*k-A*v*k+A*w*t-E*B*t-C*w*o+E*v*o;L[4]=G*v*k-H*B*k-G*w*t+I*B*t+H*w*o-I*v*o;L[8]=H*A*k-G*C*k+G*E*t-I*A*t-H*E*o+I*C*o;L[12]=G*C*w-H*A*w-G*E*v+I*A*v+H*E*B-I*C*B;L[1]=A*v*z-C*B*z-A*D*t+F*B*t+C*D*o-F*v*o;L[5]=H*B*z-G*v*z+G*D*t-J*B*t-H*D*o+J*v*o;L[9]=G*C*z-H*A*z-G*F*t+J*A*t+H*F*o-J*C*o;L[13]=H*A*D-G*C*D+G*F*v-J*A*v-H*F*B+J*C*B;L[2]=E*B*z-A*w*z+A*D*k-F*B*k-E*D*o+F*w*o;L[6]=G*w*z-I*B*z-G*D*k+J*B*k+I*D*o-J*w*o;L[10]=I*A*z-G*E*z+G*F*k-J*A*k-I*F*o+J*E*o;L[14]=G*E*D-I*A*D-G*F*w+J*A*w+I*F*B-J*E*B;L[3]=C*w*z-E*v*z-C*D*k+F*v*k+E*D*t-F*w*t;L[7]=I*v*z-H*w*z+H*D*k-J*v*k-I*D*t+J*w*t;L[11]=H*E*z-I*C*z-H*F*k+J*C*k+I*F*t-J*E*t;L[15]=I*C*D-H*E*D+H*F*w-J*C*w-I*F*v+J*E*v;L=K[0]*L[0]+K[1]*L[4]+K[2]*L[8]+K[3]*L[12];if(0==L){if(M){throw Error("Matrix4.getInverse(): can't invert matrix, determinant is 0")}console.warn("Matrix4.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/L);return this},translate:function(){console.warn("DEPRECATED: Matrix4's .translate() has been removed.")},rotateX:function(){console.warn("DEPRECATED: Matrix4's .rotateX() has been removed.")},rotateY:function(){console.warn("DEPRECATED: Matrix4's .rotateY() has been removed.")},rotateZ:function(){console.warn("DEPRECATED: Matrix4's .rotateZ() has been removed.")},rotateByAxis:function(){console.warn("DEPRECATED: Matrix4's .rotateByAxis() has been removed.")},scale:function(f){var e=this.elements,h=f.x,g=f.y,f=f.z;e[0]*=h;e[4]*=g;e[8]*=f;e[1]*=h;e[5]*=g;e[9]*=f;e[2]*=h;e[6]*=g;e[10]*=f;e[3]*=h;e[7]*=g;e[11]*=f;return this},getMaxScaleOnAxis:function(){var b=this.elements;return Math.sqrt(Math.max(b[0]*b[0]+b[1]*b[1]+b[2]*b[2],Math.max(b[4]*b[4]+b[5]*b[5]+b[6]*b[6],b[8]*b[8]+b[9]*b[9]+b[10]*b[10])))},makeTranslation:function(e,d,f){this.set(1,0,0,e,0,1,0,d,0,0,1,f,0,0,0,1);return this},makeRotationX:function(d){var c=Math.cos(d),d=Math.sin(d);this.set(1,0,0,0,0,c,-d,0,0,d,c,0,0,0,0,1);return this},makeRotationY:function(d){var c=Math.cos(d),d=Math.sin(d);this.set(c,0,d,0,0,1,0,0,-d,0,c,0,0,0,0,1);return this},makeRotationZ:function(d){var c=Math.cos(d),d=Math.sin(d);this.set(c,-d,0,0,d,c,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(t,s){var r=Math.cos(s),q=Math.sin(s),p=1-r,o=t.x,n=t.y,m=t.z,l=p*o,k=p*n;this.set(l*o+r,l*n-q*m,l*m+q*n,0,l*n+q*m,k*n+r,k*m-q*o,0,l*m-q*n,k*m+q*o,p*m*m+r,0,0,0,0,1);return this},makeScale:function(e,d,f){this.set(e,0,0,0,0,d,0,0,0,0,f,0,0,0,0,1);return this},compose:function(e,d,f){console.warn("DEPRECATED: Matrix4's .compose() has been deprecated in favor of makeFromPositionQuaternionScale. Please update your code.");return this.makeFromPositionQuaternionScale(e,d,f)},makeFromPositionQuaternionScale:function(e,d,f){this.makeRotationFromQuaternion(d);this.scale(f);this.setPosition(e);return this},makeFromPositionEulerScale:function(f,e,h,g){this.makeRotationFromEuler(e,h);this.scale(g);this.setPosition(f);return this},makeFrustum:function(i,h,n,m,l,k){var j=this.elements;j[0]=2*l/(h-i);j[4]=0;j[8]=(h+i)/(h-i);j[12]=0;j[1]=0;j[5]=2*l/(m-n);j[9]=(m+n)/(m-n);j[13]=0;j[2]=0;j[6]=0;j[10]=-(k+l)/(k-l);j[14]=-2*k*l/(k-l);j[3]=0;j[7]=0;j[11]=-1;j[15]=0;return this},makePerspective:function(g,f,j,i){var g=j*Math.tan(THREE.Math.degToRad(0.5*g)),h=-g;return this.makeFrustum(h*f,g*f,h,g,j,i)},makeOrthographic:function(t,s,r,q,p,o){var n=this.elements,m=s-t,l=r-q,k=o-p;n[0]=2/m;n[4]=0;n[8]=0;n[12]=-((s+t)/m);n[1]=0;n[5]=2/l;n[9]=0;n[13]=-((r+q)/l);n[2]=0;n[6]=0;n[10]=-2/k;n[14]=-((o+p)/k);n[3]=0;n[7]=0;n[11]=0;n[15]=1;return this},clone:function(){var b=this.elements;return new THREE.Matrix4(b[0],b[4],b[8],b[12],b[1],b[5],b[9],b[13],b[2],b[6],b[10],b[14],b[3],b[7],b[11],b[15])}};THREE.extend(THREE.Matrix4.prototype,{decompose:function(){var f=new THREE.Vector3,e=new THREE.Vector3,h=new THREE.Vector3,g=new THREE.Matrix4;return function(d,c,b){var a=this.elements;f.set(a[0],a[1],a[2]);e.set(a[4],a[5],a[6]);h.set(a[8],a[9],a[10]);d=d instanceof THREE.Vector3?d:new THREE.Vector3;c=c instanceof THREE.Quaternion?c:new THREE.Quaternion;b=b instanceof THREE.Vector3?b:new THREE.Vector3;b.x=f.length();b.y=e.length();b.z=h.length();d.x=a[12];d.y=a[13];d.z=a[14];g.copy(this);g.elements[0]/=b.x;g.elements[1]/=b.x;g.elements[2]/=b.x;g.elements[4]/=b.y;g.elements[5]/=b.y;g.elements[6]/=b.y;g.elements[8]/=b.z;g.elements[9]/=b.z;g.elements[10]/=b.z;c.setFromRotationMatrix(g);return[d,c,b]}}()});THREE.Ray=function(d,c){this.origin=void 0!==d?d:new THREE.Vector3;this.direction=void 0!==c?c:new THREE.Vector3};THREE.Ray.prototype={constructor:THREE.Ray,set:function(d,c){this.origin.copy(d);this.direction.copy(c);return this},copy:function(b){this.origin.copy(b.origin);this.direction.copy(b.direction);return this},at:function(d,c){return(c||new THREE.Vector3).copy(this.direction).multiplyScalar(d).add(this.origin)},recast:function(){var b=new THREE.Vector3;return function(a){this.origin.copy(this.at(a,b));return this}}(),closestPointToPoint:function(f,e){var h=e||new THREE.Vector3;h.subVectors(f,this.origin);var g=h.dot(this.direction);return h.copy(this.direction).multiplyScalar(g).add(this.origin)},distanceToPoint:function(){var b=new THREE.Vector3;return function(a){var d=b.subVectors(a,this.origin).dot(this.direction);b.copy(this.direction).multiplyScalar(d).add(this.origin);return b.distanceTo(a)}}(),isIntersectionSphere:function(b){return this.distanceToPoint(b.center)<=b.radius},isIntersectionPlane:function(b){return 0!=b.normal.dot(this.direction)||0==b.distanceToPoint(this.origin)?!0:!1},distanceToPlane:function(d){var c=d.normal.dot(this.direction);if(0==c){if(0==d.distanceToPoint(this.origin)){return 0}}else{return -(this.origin.dot(d.normal)+d.constant)/c}},intersectPlane:function(e,d){var f=this.distanceToPlane(e);return void 0===f?void 0:this.at(f,d)},applyMatrix4:function(b){this.direction.add(this.origin).applyMatrix4(b);this.origin.applyMatrix4(b);this.direction.sub(this.origin);return this},equals:function(b){return b.origin.equals(this.origin)&&b.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}};THREE.Sphere=function(d,c){this.center=void 0!==d?d:new THREE.Vector3;this.radius=void 0!==c?c:0};THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(d,c){this.center.copy(d);this.radius=c;return this},setFromCenterAndPoints:function(h,g){for(var l=0,k=0,j=g.length;k<j;k++){var i=h.distanceToSquared(g[k]),l=Math.max(l,i)}this.center=h;this.radius=Math.sqrt(l);return this},copy:function(b){this.center.copy(b.center);this.radius=b.radius;return this},empty:function(){return 0>=this.radius},containsPoint:function(b){return b.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(b){return b.distanceTo(this.center)-this.radius},intersectsSphere:function(d){var c=this.radius+d.radius;return d.center.distanceToSquared(this.center)<=c*c},clampPoint:function(f,e){var h=this.center.distanceToSquared(f),g=e||new THREE.Vector3;g.copy(f);h>this.radius*this.radius&&(g.sub(this.center).normalize(),g.multiplyScalar(this.radius).add(this.center));return g},getBoundingBox:function(b){b=b||new THREE.Box3;b.set(this.center,this.center);b.expandByScalar(this.radius);return b},applyMatrix4:function(b){this.center.applyMatrix4(b);this.radius*=b.getMaxScaleOnAxis();return this},translate:function(b){this.center.add(b);return this},equals:function(b){return b.center.equals(this.center)&&b.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}};THREE.Frustum=function(h,g,l,k,j,i){this.planes=[void 0!==h?h:new THREE.Plane,void 0!==g?g:new THREE.Plane,void 0!==l?l:new THREE.Plane,void 0!==k?k:new THREE.Plane,void 0!==j?j:new THREE.Plane,void 0!==i?i:new THREE.Plane]};THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(i,h,n,m,l,k){var j=this.planes;j[0].copy(i);j[1].copy(h);j[2].copy(n);j[3].copy(m);j[4].copy(l);j[5].copy(k);return this},copy:function(e){for(var d=this.planes,f=0;6>f;f++){d[f].copy(e.planes[f])}return this},setFromMatrix:function(G){var F=this.planes,E=G.elements,G=E[0],D=E[1],C=E[2],B=E[3],A=E[4],z=E[5],y=E[6],x=E[7],v=E[8],t=E[9],w=E[10],k=E[11],H=E[12],u=E[13],o=E[14],E=E[15];F[0].setComponents(B-G,x-A,k-v,E-H).normalize();F[1].setComponents(B+G,x+A,k+v,E+H).normalize();F[2].setComponents(B+D,x+z,k+t,E+u).normalize();F[3].setComponents(B-D,x-z,k-t,E-u).normalize();F[4].setComponents(B-C,x-y,k-w,E-o).normalize();F[5].setComponents(B+C,x+y,k+w,E+o).normalize();return this},intersectsObject:function(){var b=new THREE.Vector3;return function(a){var f=a.matrixWorld,e=this.planes,a=-a.geometry.boundingSphere.radius*f.getMaxScaleOnAxis();b.getPositionFromMatrix(f);for(f=0;6>f;f++){if(e[f].distanceToPoint(b)<a){return !1}}return !0}}(),intersectsSphere:function(f){for(var e=this.planes,h=f.center,f=-f.radius,g=0;6>g;g++){if(e[g].distanceToPoint(h)<f){return !1}}return !0},containsPoint:function(e){for(var d=this.planes,f=0;6>f;f++){if(0>d[f].distanceToPoint(e)){return !1}}return !0},clone:function(){return(new THREE.Frustum).copy(this)}};THREE.Plane=function(d,c){this.normal=void 0!==d?d:new THREE.Vector3(1,0,0);this.constant=void 0!==c?c:0};THREE.Plane.prototype={constructor:THREE.Plane,set:function(d,c){this.normal.copy(d);this.constant=c;return this},setComponents:function(f,e,h,g){this.normal.set(f,e,h);this.constant=g;return this},setFromNormalAndCoplanarPoint:function(d,c){this.normal.copy(d);this.constant=-c.dot(this.normal);return this},setFromCoplanarPoints:function(){var d=new THREE.Vector3,c=new THREE.Vector3;return function(f,b,a){b=d.subVectors(a,b).cross(c.subVectors(f,b)).normalize();this.setFromNormalAndCoplanarPoint(b,f);return this}}(),copy:function(b){this.normal.copy(b.normal);this.constant=b.constant;return this},normalize:function(){var b=1/this.normal.length();this.normal.multiplyScalar(b);this.constant*=b;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(b){return this.normal.dot(b)+this.constant},distanceToSphere:function(b){return this.distanceToPoint(b.center)-b.radius},projectPoint:function(d,c){return this.orthoPoint(d,c).sub(d).negate()},orthoPoint:function(e,d){var f=this.distanceToPoint(e);return(d||new THREE.Vector3).copy(this.normal).multiplyScalar(f)},isIntersectionLine:function(d){var c=this.distanceToPoint(d.start),d=this.distanceToPoint(d.end);return 0>c&&0<d||0>d&&0<c},intersectLine:function(){var b=new THREE.Vector3;return function(a,j){var i=j||new THREE.Vector3,h=a.delta(b),g=this.normal.dot(h);if(0==g){if(0==this.distanceToPoint(a.start)){return i.copy(a.start)}}else{return g=-(a.start.dot(this.normal)+this.constant)/g,0>g||1<g?void 0:i.copy(h).multiplyScalar(g).add(a.start)}}}(),coplanarPoint:function(b){return(b||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var d=new THREE.Vector3,c=new THREE.Vector3;return function(h,g){var g=g||(new THREE.Matrix3).getNormalMatrix(h),b=d.copy(this.normal).applyMatrix3(g),a=this.coplanarPoint(c);a.applyMatrix4(h);this.setFromNormalAndCoplanarPoint(b,a);return this}}(),translate:function(b){this.constant-=b.dot(this.normal);return this},equals:function(b){return b.normal.equals(this.normal)&&b.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}};THREE.Math={clamp:function(e,d,f){return e<d?d:e>f?f:e},clampBottom:function(d,c){return d<c?c:d},mapLinear:function(g,f,j,i,h){return i+(g-f)*(h-i)/(j-f)},smoothstep:function(e,d,f){if(e<=d){return 0}if(e>=f){return 1}e=(e-d)/(f-d);return e*e*(3-2*e)},smootherstep:function(e,d,f){if(e<=d){return 0}if(e>=f){return 1}e=(e-d)/(f-d);return e*e*e*(e*(6*e-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(d,c){return d+Math.floor(Math.random()*(c-d+1))},randFloat:function(d,c){return d+Math.random()*(c-d)},randFloatSpread:function(b){return b*(0.5-Math.random())},sign:function(b){return 0>b?-1:0<b?1:0},degToRad:function(){var b=Math.PI/180;return function(a){return a*b}}(),radToDeg:function(){var b=180/Math.PI;return function(a){return a*b}}()};THREE.Spline=function(z){function y(i,h,A,p,m,l,j){i=0.5*(A-i);p=0.5*(p-h);return(2*(h-A)+i+p)*j+(-3*(h-A)-2*i-p)*l+i*m+h}this.points=z;var x=[],w={x:0,y:0,z:0},v,u,t,s,r,q,n,k,o;this.initFromArray=function(d){this.points=[];for(var c=0;c<d.length;c++){this.points[c]={x:d[c][0],y:d[c][1],z:d[c][2]}}};this.getPoint=function(b){v=(this.points.length-1)*b;u=Math.floor(v);t=v-u;x[0]=0===u?u:u-1;x[1]=u;x[2]=u>this.points.length-2?this.points.length-1:u+1;x[3]=u>this.points.length-3?this.points.length-1:u+2;q=this.points[x[0]];n=this.points[x[1]];k=this.points[x[2]];o=this.points[x[3]];s=t*t;r=t*s;w.x=y(q.x,n.x,k.x,o.x,t,s,r);w.y=y(q.y,n.y,k.y,o.y,t,s,r);w.z=y(q.z,n.z,k.z,o.z,t,s,r);return w};this.getControlPointsArray=function(){var f,e,h=this.points.length,g=[];for(f=0;f<h;f++){e=this.points[f],g[f]=[e.x,e.y,e.z]}return g};this.getLength=function(E){var D,C,B,A=D=D=0,p=new THREE.Vector3,m=new THREE.Vector3,l=[],j=0;l[0]=0;E||(E=100);C=this.points.length*E;p.copy(this.points[0]);for(E=1;E<C;E++){D=E/C,B=this.getPoint(D),m.copy(B),j+=m.distanceTo(p),p.copy(B),D*=this.points.length-1,D=Math.floor(D),D!=A&&(l[D]=j,A=D)}l[l.length]=j;return{chunks:l,total:j}};this.reparametrizeByArcLength=function(G){var F,E,D,C,B,A,p=[],m=new THREE.Vector3,l=this.getLength();p.push(m.copy(this.points[0]).clone());for(F=1;F<this.points.length;F++){E=l.chunks[F]-l.chunks[F-1];A=Math.ceil(G*E/l.total);C=(F-1)/(this.points.length-1);B=F/(this.points.length-1);for(E=1;E<A-1;E++){D=C+E*(1/A)*(B-C),D=this.getPoint(D),p.push(m.copy(D).clone())}p.push(m.copy(this.points[F]).clone())}this.points=p}};THREE.Triangle=function(e,d,f){this.a=void 0!==e?e:new THREE.Vector3;this.b=void 0!==d?d:new THREE.Vector3;this.c=void 0!==f?f:new THREE.Vector3};THREE.Triangle.normal=function(){var b=new THREE.Vector3;return function(a,h,g,f){f=f||new THREE.Vector3;f.subVectors(g,h);b.subVectors(a,h);f.cross(b);a=f.lengthSq();return 0<a?f.multiplyScalar(1/Math.sqrt(a)):f.set(0,0,0)}}();THREE.Triangle.barycoordFromPoint=function(){var e=new THREE.Vector3,d=new THREE.Vector3,f=new THREE.Vector3;return function(n,m,l,k,c){e.subVectors(k,m);d.subVectors(l,m);f.subVectors(n,m);var n=e.dot(e),m=e.dot(d),l=e.dot(f),b=d.dot(d),k=d.dot(f),a=n*b-m*m,c=c||new THREE.Vector3;if(0==a){return c.set(-2,-1,-1)}a=1/a;b=(b*l-m*k)*a;n=(n*k-m*l)*a;return c.set(1-b-n,n,b)}}();THREE.Triangle.containsPoint=function(){var b=new THREE.Vector3;return function(a,h,g,f){a=THREE.Triangle.barycoordFromPoint(a,h,g,f,b);return 0<=a.x&&0<=a.y&&1>=a.x+a.y}}();THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(e,d,f){this.a.copy(e);this.b.copy(d);this.c.copy(f);return this},setFromPointsAndIndices:function(f,e,h,g){this.a.copy(f[e]);this.b.copy(f[h]);this.c.copy(f[g]);return this},copy:function(b){this.a.copy(b.a);this.b.copy(b.b);this.c.copy(b.c);return this},area:function(){var d=new THREE.Vector3,c=new THREE.Vector3;return function(){d.subVectors(this.c,this.b);c.subVectors(this.a,this.b);return 0.5*d.cross(c).length()}}(),midpoint:function(b){return(b||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(b){return THREE.Triangle.normal(this.a,this.b,this.c,b)},plane:function(b){return(b||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(d,c){return THREE.Triangle.barycoordFromPoint(d,this.a,this.b,this.c,c)},containsPoint:function(b){return THREE.Triangle.containsPoint(b,this.a,this.b,this.c)},equals:function(b){return b.a.equals(this.a)&&b.b.equals(this.b)&&b.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}};THREE.Vertex=function(b){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.");return b};THREE.UV=function(d,c){console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead.");return new THREE.Vector2(d,c)};THREE.Clock=function(b){this.autoStart=void 0!==b?b:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=void 0!==window.performance&&void 0!==window.performance.now?window.performance.now():Date.now();this.running=!0},stop:function(){this.getElapsedTime();this.running=!1},getElapsedTime:function(){this.getDelta();return this.elapsedTime},getDelta:function(){var d=0;this.autoStart&&!this.running&&this.start();if(this.running){var c=void 0!==window.performance&&void 0!==window.performance.now?window.performance.now():Date.now(),d=0.001*(c-this.oldTime);this.oldTime=c;this.elapsedTime+=d}return d}};THREE.EventDispatcher=function(){};THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,addEventListener:function(e,d){void 0===this._listeners&&(this._listeners={});var f=this._listeners;void 0===f[e]&&(f[e]=[]);-1===f[e].indexOf(d)&&f[e].push(d)},hasEventListener:function(e,d){if(void 0===this._listeners){return !1}var f=this._listeners;return void 0!==f[e]&&-1!==f[e].indexOf(d)?!0:!1},removeEventListener:function(f,e){if(void 0!==this._listeners){var h=this._listeners,g=h[f].indexOf(e);-1!==g&&h[f].splice(g,1)}},dispatchEvent:function(f){if(void 0!==this._listeners){var e=this._listeners[f.type];if(void 0!==e){f.target=this;for(var h=0,g=e.length;h<g;h++){e[h].call(this,f)}}}}};(function(t){t.Raycaster=function(a,h,g,f){this.ray=new t.Ray(a,h);0<this.ray.direction.lengthSq()&&this.ray.direction.normalize();this.near=g||0;this.far=f||Infinity};var s=new t.Sphere,r=new t.Ray,q=new t.Plane,p=new t.Vector3,o=new t.Vector3,n=new t.Matrix4,m=function(d,c){return d.distance-c.distance},l=function(f,e,d){if(f instanceof t.Particle){o.getPositionFromMatrix(f.matrixWorld);var a=e.ray.distanceToPoint(o);if(a>f.scale.x){return d}d.push({distance:a,point:f.position,face:null,object:f})}else{if(f instanceof t.LOD){o.getPositionFromMatrix(f.matrixWorld),a=e.ray.origin.distanceTo(o),l(f.getObjectForDistance(a),e,d)}else{if(f instanceof t.Mesh){o.getPositionFromMatrix(f.matrixWorld);s.set(o,f.geometry.boundingSphere.radius*f.matrixWorld.getMaxScaleOnAxis());if(!e.ray.isIntersectionSphere(s)){return d}var a=f.geometry,I=a.vertices,c=f.material instanceof t.MeshFaceMaterial,b=!0===c?f.material.materials:null,i=f.material.side,B,w,D,G=e.precision;n.getInverse(f.matrixWorld);r.copy(e.ray).applyMatrix4(n);for(var v=0,C=a.faces.length;v<C;v++){var g=a.faces[v],i=!0===c?b[g.materialIndex]:f.material;if(void 0!==i){q.setFromNormalAndCoplanarPoint(g.normal,I[g.a]);var A=r.distanceToPlane(q);if(!(Math.abs(A)<G)&&!(0>A)){i=i.side;if(i!==t.DoubleSide&&(B=r.direction.dot(q.normal),!(i===t.FrontSide?0>B:0<B))){continue}if(!(A<e.near||A>e.far)){p=r.at(A,p);if(g instanceof t.Face3){if(i=I[g.a],B=I[g.b],w=I[g.c],!t.Triangle.containsPoint(p,i,B,w)){continue}}else{if(g instanceof t.Face4){if(i=I[g.a],B=I[g.b],w=I[g.c],D=I[g.d],!t.Triangle.containsPoint(p,i,B,D)&&!t.Triangle.containsPoint(p,B,w,D)){continue}}else{throw Error("face type not supported")}}d.push({distance:A,point:e.ray.at(A),face:g,faceIndex:v,object:f})}}}}}}}},k=function(g,f,j){for(var g=g.getDescendants(),i=0,h=g.length;i<h;i++){l(g[i],f,j)}};t.Raycaster.prototype.precision=0.0001;t.Raycaster.prototype.set=function(d,c){this.ray.set(d,c);0<this.ray.direction.length()&&this.ray.direction.normalize()};t.Raycaster.prototype.intersectObject=function(e,d){var f=[];!0===d&&k(e,this,f);l(e,this,f);f.sort(m);return f};t.Raycaster.prototype.intersectObjects=function(g,f){for(var j=[],i=0,h=g.length;i<h;i++){l(g[i],this,j),!0===f&&k(g[i],this,j)}j.sort(m);return j}})(THREE);THREE.Object3D=function(){this.id=THREE.Object3DIdCount++;this.name="";this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder=THREE.Object3D.defaultEulerOrder;this.scale=new THREE.Vector3(1,1,1);this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=!0;this.quaternion=new THREE.Quaternion;this.useQuaternion=!1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this.userData={}};THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(){var b=new THREE.Matrix4;return function(a){this.matrix.multiplyMatrices(a,this.matrix);this.position.getPositionFromMatrix(this.matrix);this.scale.getScaleFromMatrix(this.matrix);b.extractRotation(this.matrix);!0===this.useQuaternion?this.quaternion.setFromRotationMatrix(b):this.rotation.setEulerFromRotationMatrix(b,this.eulerOrder)}}(),rotateOnAxis:function(){var d=new THREE.Quaternion,c=new THREE.Quaternion;return function(b,a){d.setFromAxisAngle(b,a);!0===this.useQuaternion?this.quaternion.multiply(d):(c.setFromEuler(this.rotation,this.eulerOrder),c.multiply(d),this.rotation.setEulerFromQuaternion(c,this.eulerOrder));return this}}(),translateOnAxis:function(){var b=new THREE.Vector3;return function(a,d){b.copy(a);!0===this.useQuaternion?b.applyQuaternion(this.quaternion):b.applyEuler(this.rotation,this.eulerOrder);this.position.add(b.multiplyScalar(d));return this}}(),translate:function(d,c){console.warn("DEPRECATED: Object3D's .translate() has been removed. Use .translateOnAxis( axis, distance ) instead. Note args have been changed.");return this.translateOnAxis(c,d)},translateX:function(){var b=new THREE.Vector3(1,0,0);return function(a){return this.translateOnAxis(b,a)}}(),translateY:function(){var b=new THREE.Vector3(0,1,0);return function(a){return this.translateOnAxis(b,a)}}(),translateZ:function(){var b=new THREE.Vector3(0,0,1);return function(a){return this.translateOnAxis(b,a)}}(),localToWorld:function(b){return b.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var b=new THREE.Matrix4;return function(a){return a.applyMatrix4(b.getInverse(this.matrixWorld))}}(),lookAt:function(){var b=new THREE.Matrix4;return function(a){b.lookAt(a,this.position,this.up);!0===this.useQuaternion?this.quaternion.setFromRotationMatrix(b):this.rotation.setEulerFromRotationMatrix(b,this.eulerOrder)}}(),add:function(d){if(d===this){console.warn("THREE.Object3D.add: An object can't be added as a child of itself.")}else{if(d instanceof THREE.Object3D){void 0!==d.parent&&d.parent.remove(d);d.parent=this;this.children.push(d);for(var c=this;void 0!==c.parent;){c=c.parent}void 0!==c&&c instanceof THREE.Scene&&c.__addObject(d)}}},remove:function(d){var c=this.children.indexOf(d);if(-1!==c){d.parent=void 0;this.children.splice(c,1);for(c=this;void 0!==c.parent;){c=c.parent}void 0!==c&&c instanceof THREE.Scene&&c.__removeObject(d)}},traverse:function(e){e(this);for(var d=0,f=this.children.length;d<f;d++){this.children[d].traverse(e)}},getObjectById:function(g,f){for(var j=0,i=this.children.length;j<i;j++){var h=this.children[j];if(h.id===g||!0===f&&(h=h.getObjectById(g,f),void 0!==h)){return h}}},getObjectByName:function(g,f){for(var j=0,i=this.children.length;j<i;j++){var h=this.children[j];if(h.name===g||!0===f&&(h=h.getObjectByName(g,f),void 0!==h)){return h}}},getChildByName:function(d,c){console.warn("DEPRECATED: Object3D's .getChildByName() has been renamed to .getObjectByName().");return this.getObjectByName(d,c)},getDescendants:function(e){void 0===e&&(e=[]);Array.prototype.push.apply(e,this.children);for(var d=0,f=this.children.length;d<f;d++){this.children[d].getDescendants(e)}return e},updateMatrix:function(){!1===this.useQuaternion?this.matrix.makeFromPositionEulerScale(this.position,this.rotation,this.eulerOrder,this.scale):this.matrix.makeFromPositionQuaternionScale(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===e){void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0}for(var d=0,f=this.children.length;d<f;d++){this.children[d].updateMatrixWorld(e)}},clone:function(d){void 0===d&&(d=new THREE.Object3D);d.name=this.name;d.up.copy(this.up);d.position.copy(this.position);d.rotation instanceof THREE.Vector3&&d.rotation.copy(this.rotation);d.eulerOrder=this.eulerOrder;d.scale.copy(this.scale);d.renderDepth=this.renderDepth;d.rotationAutoUpdate=this.rotationAutoUpdate;d.matrix.copy(this.matrix);d.matrixWorld.copy(this.matrixWorld);d.matrixAutoUpdate=this.matrixAutoUpdate;d.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;d.quaternion.copy(this.quaternion);d.useQuaternion=this.useQuaternion;d.visible=this.visible;d.castShadow=this.castShadow;d.receiveShadow=this.receiveShadow;d.frustumCulled=this.frustumCulled;d.userData=JSON.parse(JSON.stringify(this.userData));for(var c=0;c<this.children.length;c++){d.add(this.children[c].clone())}return d}};THREE.Object3D.defaultEulerOrder="XYZ";THREE.Object3DIdCount=0;THREE.Projector=function(){function aD(){if(ay===aw){var b=new THREE.RenderableObject;ax.push(b);aw++;ay++;return b}return ax[ay++]}function aC(){if(au===ao){var b=new THREE.RenderableVertex;ar.push(b);ao++;au++;return b}return ar[au++]}function aB(d,c){return c.z-d.z}function aA(j,i){var r=0,q=1,p=j.z+j.w,n=i.z+i.w,m=-j.z+j.w,l=-i.z+i.w;if(0<=p&&0<=n&&0<=m&&0<=l){return !0}if(0>p&&0>n||0>m&&0>l){return !1}0>p?r=Math.max(r,p/(p-n)):0>n&&(q=Math.min(q,p/(p-n)));0>m?r=Math.max(r,m/(m-l)):0>l&&(q=Math.min(q,m/(m-l)));if(q<r){return !1}j.lerp(i,r);i.lerp(j,1-q);return !0}var az,ay,ax=[],aw=0,av,au,ar=[],ao=0,at,am,al=[],ap=0,an,ah=[],aj=0,ai,ak,Z=[],T=0,Y,ag,W=[],S=0,X={objects:[],sprites:[],lights:[],elements:[]},Q=new THREE.Vector3,ab=new THREE.Vector4,v=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),aa=new THREE.Box3,U=Array(3),P=Array(4),w=new THREE.Matrix4,k=new THREE.Matrix4,D,aq=new THREE.Matrix4,ac=new THREE.Matrix3,ae=new THREE.Matrix3,ad=new THREE.Vector3,o=new THREE.Frustum,O=new THREE.Vector4,af=new THREE.Vector4;this.projectVector=function(d,c){c.matrixWorldInverse.getInverse(c.matrixWorld);k.multiplyMatrices(c.projectionMatrix,c.matrixWorldInverse);return d.applyProjection(k)};this.unprojectVector=function(d,c){c.projectionMatrixInverse.getInverse(c.projectionMatrix);k.multiplyMatrices(c.matrixWorld,c.projectionMatrixInverse);return d.applyProjection(k)};this.pickingRay=function(e,d){e.z=-1;var f=new THREE.Vector3(e.x,e.y,1);this.unprojectVector(e,d);this.unprojectVector(f,d);f.sub(e).normalize();return new THREE.Raycaster(e,f)};this.projectScene=function(x,u,q,m){var l=!1,c,d,B,e,A,s,i,r,n,j,t,z,y;ag=ak=an=am=0;X.elements.length=0;!0===x.autoUpdate&&x.updateMatrixWorld();void 0===u.parent&&u.updateMatrixWorld();w.copy(u.matrixWorldInverse.getInverse(u.matrixWorld));k.multiplyMatrices(u.projectionMatrix,w);ae.getNormalMatrix(w);o.setFromMatrix(k);ay=0;X.objects.length=0;X.sprites.length=0;X.lights.length=0;var b=function(g){for(var C=0,p=g.children.length;C<p;C++){var h=g.children[C];if(!1!==h.visible){if(h instanceof THREE.Light){X.lights.push(h)}else{if(h instanceof THREE.Mesh||h instanceof THREE.Line){if(!1===h.frustumCulled||!0===o.intersectsObject(h)){az=aD(),az.object=h,null!==h.renderDepth?az.z=h.renderDepth:(Q.getPositionFromMatrix(h.matrixWorld),Q.applyProjection(k),az.z=Q.z),X.objects.push(az)}}else{h instanceof THREE.Sprite||h instanceof THREE.Particle?(az=aD(),az.object=h,null!==h.renderDepth?az.z=h.renderDepth:(Q.getPositionFromMatrix(h.matrixWorld),Q.applyProjection(k),az.z=Q.z),X.sprites.push(az)):(az=aD(),az.object=h,null!==h.renderDepth?az.z=h.renderDepth:(Q.getPositionFromMatrix(h.matrixWorld),Q.applyProjection(k),az.z=Q.z),X.objects.push(az))}}b(h)}}};b(x);!0===q&&X.objects.sort(aB);x=0;for(q=X.objects.length;x<q;x++){if(r=X.objects[x].object,D=r.matrixWorld,au=0,r instanceof THREE.Mesh){n=r.geometry;B=n.vertices;j=n.faces;n=n.faceVertexUvs;ac.getNormalMatrix(D);z=r.material instanceof THREE.MeshFaceMaterial;y=!0===z?r.material:null;c=0;for(d=B.length;c<d;c++){av=aC(),av.positionWorld.copy(B[c]).applyMatrix4(D),av.positionScreen.copy(av.positionWorld).applyMatrix4(k),av.positionScreen.x/=av.positionScreen.w,av.positionScreen.y/=av.positionScreen.w,av.positionScreen.z/=av.positionScreen.w,av.visible=!(-1>av.positionScreen.x||1<av.positionScreen.x||-1>av.positionScreen.y||1<av.positionScreen.y||-1>av.positionScreen.z||1<av.positionScreen.z)}B=0;for(c=j.length;B<c;B++){d=j[B];var f=!0===z?y.materials[d.materialIndex]:r.material;if(void 0!==f){s=f.side;if(d instanceof THREE.Face3){if(e=ar[d.a],A=ar[d.b],i=ar[d.c],U[0]=e.positionScreen,U[1]=A.positionScreen,U[2]=i.positionScreen,!0===e.visible||!0===A.visible||!0===i.visible||v.isIntersectionBox(aa.setFromPoints(U))){if(l=0>(i.positionScreen.x-e.positionScreen.x)*(A.positionScreen.y-e.positionScreen.y)-(i.positionScreen.y-e.positionScreen.y)*(A.positionScreen.x-e.positionScreen.x),s===THREE.DoubleSide||l===(s===THREE.FrontSide)){am===ap?(t=new THREE.RenderableFace3,al.push(t),ap++,am++,at=t):at=al[am++],at.v1.copy(e),at.v2.copy(A),at.v3.copy(i)}else{continue}}else{continue}}else{if(d instanceof THREE.Face4){if(e=ar[d.a],A=ar[d.b],i=ar[d.c],t=ar[d.d],P[0]=e.positionScreen,P[1]=A.positionScreen,P[2]=i.positionScreen,P[3]=t.positionScreen,!0===e.visible||!0===A.visible||!0===i.visible||!0===t.visible||v.isIntersectionBox(aa.setFromPoints(P))){if(l=0>(t.positionScreen.x-e.positionScreen.x)*(A.positionScreen.y-e.positionScreen.y)-(t.positionScreen.y-e.positionScreen.y)*(A.positionScreen.x-e.positionScreen.x)||0>(A.positionScreen.x-i.positionScreen.x)*(t.positionScreen.y-i.positionScreen.y)-(A.positionScreen.y-i.positionScreen.y)*(t.positionScreen.x-i.positionScreen.x),s===THREE.DoubleSide||l===(s===THREE.FrontSide)){if(an===aj){var a=new THREE.RenderableFace4;ah.push(a);aj++;an++;at=a}else{at=ah[an++]}at.v1.copy(e);at.v2.copy(A);at.v3.copy(i);at.v4.copy(t)}else{continue}}else{continue}}}at.normalModel.copy(d.normal);!1===l&&(s===THREE.BackSide||s===THREE.DoubleSide)&&at.normalModel.negate();at.normalModel.applyMatrix3(ac).normalize();at.normalModelView.copy(at.normalModel).applyMatrix3(ae);at.centroidModel.copy(d.centroid).applyMatrix4(D);i=d.vertexNormals;e=0;for(A=i.length;e<A;e++){t=at.vertexNormalsModel[e],t.copy(i[e]),!1===l&&(s===THREE.BackSide||s===THREE.DoubleSide)&&t.negate(),t.applyMatrix3(ac).normalize(),at.vertexNormalsModelView[e].copy(t).applyMatrix3(ae)}at.vertexNormalsLength=i.length;e=0;for(A=n.length;e<A;e++){if(t=n[e][B],void 0!==t){s=0;for(i=t.length;s<i;s++){at.uvs[e][s]=t[s]}}}at.color=d.color;at.material=f;ad.copy(at.centroidModel).applyProjection(k);at.z=ad.z;X.elements.push(at)}}}else{if(r instanceof THREE.Line){aq.multiplyMatrices(k,D);B=r.geometry.vertices;e=aC();e.positionScreen.copy(B[0]).applyMatrix4(aq);j=r.type===THREE.LinePieces?2:1;c=1;for(d=B.length;c<d;c++){e=aC(),e.positionScreen.copy(B[c]).applyMatrix4(aq),0<(c+1)%j||(A=ar[au-2],O.copy(e.positionScreen),af.copy(A.positionScreen),!0===aA(O,af)&&(O.multiplyScalar(1/O.w),af.multiplyScalar(1/af.w),ak===T?(n=new THREE.RenderableLine,Z.push(n),T++,ak++,ai=n):ai=Z[ak++],ai.v1.positionScreen.copy(O),ai.v2.positionScreen.copy(af),ai.z=Math.max(O.z,af.z),ai.material=r.material,r.material.vertexColors===THREE.VertexColors&&(ai.vertexColors[0].copy(r.geometry.colors[c]),ai.vertexColors[1].copy(r.geometry.colors[c-1])),X.elements.push(ai)))}}}}x=0;for(q=X.sprites.length;x<q;x++){r=X.sprites[x].object,D=r.matrixWorld,r instanceof THREE.Particle&&(ab.set(D.elements[12],D.elements[13],D.elements[14],1),ab.applyMatrix4(k),ab.z/=ab.w,0<ab.z&&1>ab.z&&(ag===S?(l=new THREE.RenderableParticle,W.push(l),S++,ag++,Y=l):Y=W[ag++],Y.object=r,Y.x=ab.x/ab.w,Y.y=ab.y/ab.w,Y.z=ab.z,Y.rotation=r.rotation.z,Y.scale.x=r.scale.x*Math.abs(Y.x-(ab.x+u.projectionMatrix.elements[0])/(ab.w+u.projectionMatrix.elements[12])),Y.scale.y=r.scale.y*Math.abs(Y.y-(ab.y+u.projectionMatrix.elements[5])/(ab.w+u.projectionMatrix.elements[13])),Y.material=r.material,X.elements.push(Y)))}!0===m&&X.elements.sort(aB);return X}};THREE.Face3=function(h,g,l,k,j,i){this.a=h;this.b=g;this.c=l;this.normal=k instanceof THREE.Vector3?k:new THREE.Vector3;this.vertexNormals=k instanceof Array?k:[];this.color=j instanceof THREE.Color?j:new THREE.Color;this.vertexColors=j instanceof Array?j:[];this.vertexTangents=[];this.materialIndex=void 0!==i?i:0;this.centroid=new THREE.Vector3};THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var e=new THREE.Face3(this.a,this.b,this.c);e.normal.copy(this.normal);e.color.copy(this.color);e.centroid.copy(this.centroid);e.materialIndex=this.materialIndex;var d,f;d=0;for(f=this.vertexNormals.length;d<f;d++){e.vertexNormals[d]=this.vertexNormals[d].clone()}d=0;for(f=this.vertexColors.length;d<f;d++){e.vertexColors[d]=this.vertexColors[d].clone()}d=0;for(f=this.vertexTangents.length;d<f;d++){e.vertexTangents[d]=this.vertexTangents[d].clone()}return e}};THREE.Face4=function(i,h,n,m,l,k,j){this.a=i;this.b=h;this.c=n;this.d=m;this.normal=l instanceof THREE.Vector3?l:new THREE.Vector3;this.vertexNormals=l instanceof Array?l:[];this.color=k instanceof THREE.Color?k:new THREE.Color;this.vertexColors=k instanceof Array?k:[];this.vertexTangents=[];this.materialIndex=void 0!==j?j:0;this.centroid=new THREE.Vector3};THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var e=new THREE.Face4(this.a,this.b,this.c,this.d);e.normal.copy(this.normal);e.color.copy(this.color);e.centroid.copy(this.centroid);e.materialIndex=this.materialIndex;var d,f;d=0;for(f=this.vertexNormals.length;d<f;d++){e.vertexNormals[d]=this.vertexNormals[d].clone()}d=0;for(f=this.vertexColors.length;d<f;d++){e.vertexColors[d]=this.vertexColors[d].clone()}d=0;for(f=this.vertexTangents.length;d<f;d++){e.vertexTangents[d]=this.vertexTangents[d].clone()}return e}};THREE.Geometry=function(){this.id=THREE.GeometryIdCount++;this.name="";this.vertices=[];this.colors=[];this.normals=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0;this.buffersNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1};THREE.Geometry.prototype={constructor:THREE.Geometry,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent,applyMatrix:function(i){for(var h=(new THREE.Matrix3).getNormalMatrix(i),n=0,m=this.vertices.length;n<m;n++){this.vertices[n].applyMatrix4(i)}n=0;for(m=this.faces.length;n<m;n++){var l=this.faces[n];l.normal.applyMatrix3(h).normalize();for(var k=0,j=l.vertexNormals.length;k<j;k++){l.vertexNormals[k].applyMatrix3(h).normalize()}l.centroid.applyMatrix4(i)}},computeCentroids:function(){var e,d,f;e=0;for(d=this.faces.length;e<d;e++){f=this.faces[e],f.centroid.set(0,0,0),f instanceof THREE.Face3?(f.centroid.add(this.vertices[f.a]),f.centroid.add(this.vertices[f.b]),f.centroid.add(this.vertices[f.c]),f.centroid.divideScalar(3)):f instanceof THREE.Face4&&(f.centroid.add(this.vertices[f.a]),f.centroid.add(this.vertices[f.b]),f.centroid.add(this.vertices[f.c]),f.centroid.add(this.vertices[f.d]),f.centroid.divideScalar(4))}},computeFaceNormals:function(){for(var i=new THREE.Vector3,h=new THREE.Vector3,n=0,m=this.faces.length;n<m;n++){var l=this.faces[n],k=this.vertices[l.a],j=this.vertices[l.b];i.subVectors(this.vertices[l.c],j);h.subVectors(k,j);i.cross(h);i.normalize();l.normal.copy(i)}},computeVertexNormals:function(z){var y,x,w,v;if(void 0===this.__tmpVertices){v=this.__tmpVertices=Array(this.vertices.length);y=0;for(x=this.vertices.length;y<x;y++){v[y]=new THREE.Vector3}y=0;for(x=this.faces.length;y<x;y++){w=this.faces[y],w instanceof THREE.Face3?w.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]:w instanceof THREE.Face4&&(w.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}}else{v=this.__tmpVertices;y=0;for(x=this.vertices.length;y<x;y++){v[y].set(0,0,0)}}if(z){var u,t,s,r=new THREE.Vector3,q=new THREE.Vector3,n=new THREE.Vector3,k=new THREE.Vector3,o=new THREE.Vector3;y=0;for(x=this.faces.length;y<x;y++){w=this.faces[y],w instanceof THREE.Face3?(z=this.vertices[w.a],u=this.vertices[w.b],t=this.vertices[w.c],r.subVectors(t,u),q.subVectors(z,u),r.cross(q),v[w.a].add(r),v[w.b].add(r),v[w.c].add(r)):w instanceof THREE.Face4&&(z=this.vertices[w.a],u=this.vertices[w.b],t=this.vertices[w.c],s=this.vertices[w.d],n.subVectors(s,u),q.subVectors(z,u),n.cross(q),v[w.a].add(n),v[w.b].add(n),v[w.d].add(n),k.subVectors(s,t),o.subVectors(u,t),k.cross(o),v[w.b].add(k),v[w.c].add(k),v[w.d].add(k))}}else{y=0;for(x=this.faces.length;y<x;y++){w=this.faces[y],w instanceof THREE.Face3?(v[w.a].add(w.normal),v[w.b].add(w.normal),v[w.c].add(w.normal)):w instanceof THREE.Face4&&(v[w.a].add(w.normal),v[w.b].add(w.normal),v[w.c].add(w.normal),v[w.d].add(w.normal))}}y=0;for(x=this.vertices.length;y<x;y++){v[y].normalize()}y=0;for(x=this.faces.length;y<x;y++){w=this.faces[y],w instanceof THREE.Face3?(w.vertexNormals[0].copy(v[w.a]),w.vertexNormals[1].copy(v[w.b]),w.vertexNormals[2].copy(v[w.c])):w instanceof THREE.Face4&&(w.vertexNormals[0].copy(v[w.a]),w.vertexNormals[1].copy(v[w.b]),w.vertexNormals[2].copy(v[w.c]),w.vertexNormals[3].copy(v[w.d]))}},computeMorphNormals:function(){var t,s,r,q,p;r=0;for(q=this.faces.length;r<q;r++){p=this.faces[r];p.__originalFaceNormal?p.__originalFaceNormal.copy(p.normal):p.__originalFaceNormal=p.normal.clone();p.__originalVertexNormals||(p.__originalVertexNormals=[]);t=0;for(s=p.vertexNormals.length;t<s;t++){p.__originalVertexNormals[t]?p.__originalVertexNormals[t].copy(p.vertexNormals[t]):p.__originalVertexNormals[t]=p.vertexNormals[t].clone()}}var o=new THREE.Geometry;o.faces=this.faces;t=0;for(s=this.morphTargets.length;t<s;t++){if(!this.morphNormals[t]){this.morphNormals[t]={};this.morphNormals[t].faceNormals=[];this.morphNormals[t].vertexNormals=[];var n=this.morphNormals[t].faceNormals,m=this.morphNormals[t].vertexNormals,l,k;r=0;for(q=this.faces.length;r<q;r++){p=this.faces[r],l=new THREE.Vector3,k=p instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},n.push(l),m.push(k)}}n=this.morphNormals[t];o.vertices=this.morphTargets[t].vertices;o.computeFaceNormals();o.computeVertexNormals();r=0;for(q=this.faces.length;r<q;r++){p=this.faces[r],l=n.faceNormals[r],k=n.vertexNormals[r],l.copy(p.normal),p instanceof THREE.Face3?(k.a.copy(p.vertexNormals[0]),k.b.copy(p.vertexNormals[1]),k.c.copy(p.vertexNormals[2])):(k.a.copy(p.vertexNormals[0]),k.b.copy(p.vertexNormals[1]),k.c.copy(p.vertexNormals[2]),k.d.copy(p.vertexNormals[3]))}}r=0;for(q=this.faces.length;r<q;r++){p=this.faces[r],p.normal=p.__originalFaceNormal,p.vertexNormals=p.__originalVertexNormals}},computeTangents:function(){function an(h,g,n,m,j,i,l){ag=h.vertices[g];af=h.vertices[n];ae=h.vertices[m];ac=ah[j];aa=ah[i];ad=ah[l];X=af.x-ag.x;U=ae.x-ag.x;ab=af.y-ag.y;Z=ae.y-ag.y;D=af.z-ag.z;R=ae.z-ag.z;N=aa.x-ac.x;T=ad.x-ac.x;S=aa.y-ac.y;A=ad.y-ac.y;Q=1/(N*A-T*S);P.set((A*X-S*U)*Q,(A*ab-S*Z)*Q,(A*D-S*R)*Q);o.set((N*U-T*X)*Q,(N*Z-T*ab)*Q,(N*R-T*D)*Q);O[g].add(P);O[n].add(P);O[m].add(P);v[g].add(o);v[n].add(o);v[m].add(o)}var am,al,ak,aj,ai,ah,ag,af,ae,ac,aa,ad,X,U,ab,Z,D,R,N,T,S,A,Q,w,O=[],v=[],P=new THREE.Vector3,o=new THREE.Vector3,Y=new THREE.Vector3,k=new THREE.Vector3,W=new THREE.Vector3;am=0;for(al=this.vertices.length;am<al;am++){O[am]=new THREE.Vector3,v[am]=new THREE.Vector3}am=0;for(al=this.faces.length;am<al;am++){ai=this.faces[am],ah=this.faceVertexUvs[0][am],ai instanceof THREE.Face3?an(this,ai.a,ai.b,ai.c,0,1,2):ai instanceof THREE.Face4&&(an(this,ai.a,ai.b,ai.d,0,1,3),an(this,ai.b,ai.c,ai.d,1,2,3))}var M=["a","b","c","d"];am=0;for(al=this.faces.length;am<al;am++){ai=this.faces[am];for(ak=0;ak<ai.vertexNormals.length;ak++){W.copy(ai.vertexNormals[ak]),aj=ai[M[ak]],w=O[aj],Y.copy(w),Y.sub(W.multiplyScalar(W.dot(w))).normalize(),k.crossVectors(ai.vertexNormals[ak],w),aj=k.dot(v[aj]),aj=0>aj?-1:1,ai.vertexTangents[ak]=new THREE.Vector4(Y.x,Y.y,Y.z,aj)}}this.hasTangents=!0},computeLineDistances:function(){for(var f=0,e=this.vertices,h=0,g=e.length;h<g;h++){0<h&&(f+=e[h].distanceTo(e[h-1])),this.lineDistances[h]=f}},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);this.boundingSphere.setFromCenterAndPoints(this.boundingSphere.center,this.vertices)},mergeVertices:function(){var v={},u=[],t=[],s,r=Math.pow(10,4),q,p,o,n,l;this.__tmpVertices=void 0;q=0;for(p=this.vertices.length;q<p;q++){s=this.vertices[q],s=[Math.round(s.x*r),Math.round(s.y*r),Math.round(s.z*r)].join("_"),void 0===v[s]?(v[s]=q,u.push(this.vertices[q]),t[q]=u.length-1):t[q]=t[v[s]]}r=[];q=0;for(p=this.faces.length;q<p;q++){if(v=this.faces[q],v instanceof THREE.Face3){v.a=t[v.a];v.b=t[v.b];v.c=t[v.c];o=[v.a,v.b,v.c];s=-1;for(n=0;3>n;n++){if(o[n]==o[(n+1)%3]){r.push(q);break}}}else{if(v instanceof THREE.Face4){v.a=t[v.a];v.b=t[v.b];v.c=t[v.c];v.d=t[v.d];o=[v.a,v.b,v.c,v.d];s=-1;for(n=0;4>n;n++){o[n]==o[(n+1)%4]&&(0<=s&&r.push(q),s=n)}if(0<=s){o.splice(s,1);var k=new THREE.Face3(o[0],o[1],o[2],v.normal,v.color,v.materialIndex);o=0;for(n=this.faceVertexUvs.length;o<n;o++){(l=this.faceVertexUvs[o][q])&&l.splice(s,1)}v.vertexNormals&&0<v.vertexNormals.length&&(k.vertexNormals=v.vertexNormals,k.vertexNormals.splice(s,1));v.vertexColors&&0<v.vertexColors.length&&(k.vertexColors=v.vertexColors,k.vertexColors.splice(s,1));this.faces[q]=k}}}}for(q=r.length-1;0<=q;q--){this.faces.splice(q,1);o=0;for(n=this.faceVertexUvs.length;o<n;o++){this.faceVertexUvs[o].splice(q,1)}}t=this.vertices.length-u.length;this.vertices=u;return t},clone:function(){for(var j=new THREE.Geometry,i=this.vertices,p=0,o=i.length;p<o;p++){j.vertices.push(i[p].clone())}i=this.faces;p=0;for(o=i.length;p<o;p++){j.faces.push(i[p].clone())}i=this.faceVertexUvs[0];p=0;for(o=i.length;p<o;p++){for(var n=i[p],m=[],l=0,k=n.length;l<k;l++){m.push(new THREE.Vector2(n[l].x,n[l].y))}j.faceVertexUvs[0].push(m)}return j},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.GeometryIdCount=0;THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++;this.attributes={};this.dynamic=!1;this.offsets=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.morphTargets=[]};THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent,applyMatrix:function(e){var d,f;this.attributes.position&&(d=this.attributes.position.array);this.attributes.normal&&(f=this.attributes.normal.array);void 0!==d&&(e.multiplyVector3Array(d),this.verticesNeedUpdate=!0);void 0!==f&&((new THREE.Matrix3).getNormalMatrix(e).multiplyVector3Array(f),this.normalizeNormals(),this.normalsNeedUpdate=!0)},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var i=this.attributes.position.array;if(i){var h=this.boundingBox,n,m,l;3<=i.length&&(h.min.x=h.max.x=i[0],h.min.y=h.max.y=i[1],h.min.z=h.max.z=i[2]);for(var k=3,j=i.length;k<j;k+=3){n=i[k],m=i[k+1],l=i[k+2],n<h.min.x?h.min.x=n:n>h.max.x&&(h.max.x=n),m<h.min.y?h.min.y=m:m>h.max.y&&(h.max.y=m),l<h.min.z?h.min.z=l:l>h.max.z&&(h.max.z=l)}}if(void 0===i||0===i.length){this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)}},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var i=this.attributes.position.array;if(i){for(var h,n=0,m,l,k=0,j=i.length;k<j;k+=3){h=i[k],m=i[k+1],l=i[k+2],h=h*h+m*m+l*l,h>n&&(n=h)}this.boundingSphere.radius=Math.sqrt(n)}},computeVertexNormals:function(){if(this.attributes.position){var N,M,L,K;N=this.attributes.position.array.length;if(void 0===this.attributes.normal){this.attributes.normal={itemSize:3,array:new Float32Array(N),numItems:N}}else{N=0;for(M=this.attributes.normal.array.length;N<M;N++){this.attributes.normal.array[N]=0}}var J=this.attributes.position.array,I=this.attributes.normal.array,H,G,F,E,C,A,D=new THREE.Vector3,w=new THREE.Vector3,v=new THREE.Vector3,B=new THREE.Vector3,z=new THREE.Vector3;if(this.attributes.index){var k=this.attributes.index.array,t=this.offsets;L=0;for(K=t.length;L<K;++L){M=t[L].start;H=t[L].count;var o=t[L].index;N=M;for(M+=H;N<M;N+=3){H=o+k[N],G=o+k[N+1],F=o+k[N+2],E=J[3*H],C=J[3*H+1],A=J[3*H+2],D.set(E,C,A),E=J[3*G],C=J[3*G+1],A=J[3*G+2],w.set(E,C,A),E=J[3*F],C=J[3*F+1],A=J[3*F+2],v.set(E,C,A),B.subVectors(v,w),z.subVectors(D,w),B.cross(z),I[3*H]+=B.x,I[3*H+1]+=B.y,I[3*H+2]+=B.z,I[3*G]+=B.x,I[3*G+1]+=B.y,I[3*G+2]+=B.z,I[3*F]+=B.x,I[3*F+1]+=B.y,I[3*F+2]+=B.z}}}else{N=0;for(M=J.length;N<M;N+=9){E=J[N],C=J[N+1],A=J[N+2],D.set(E,C,A),E=J[N+3],C=J[N+4],A=J[N+5],w.set(E,C,A),E=J[N+6],C=J[N+7],A=J[N+8],v.set(E,C,A),B.subVectors(v,w),z.subVectors(D,w),B.cross(z),I[N]=B.x,I[N+1]=B.y,I[N+2]=B.z,I[N+3]=B.x,I[N+4]=B.y,I[N+5]=B.z,I[N+6]=B.x,I[N+7]=B.y,I[N+8]=B.z}}this.normalizeNormals();this.normalsNeedUpdate=!0}},normalizeNormals:function(){for(var h=this.attributes.normal.array,g,l,k,j=0,i=h.length;j<i;j+=3){g=h[j],l=h[j+1],k=h[j+2],g=1/Math.sqrt(g*g+l*l+k*k),h[j]*=g,h[j+1]*=g,h[j+2]*=g}},computeTangents:function(){function az(b){w.x=aw[3*b];w.y=aw[3*b+1];w.z=aw[3*b+2];am.copy(w);ab=aq[b];v.copy(ab);v.sub(w.multiplyScalar(w.dot(ab))).normalize();k.crossVectors(am,ab);aa=k.dot(ap[b]);Z=0>aa?-1:1;ar[4*b]=v.x;ar[4*b+1]=v.y;ar[4*b+2]=v.z;ar[4*b+3]=Z}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv){console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()")}else{var ay=this.attributes.index.array,ax=this.attributes.position.array,aw=this.attributes.normal.array,av=this.attributes.uv.array,au=ax.length/3;if(void 0===this.attributes.tangent){var at=4*au;this.attributes.tangent={itemSize:4,array:new Float32Array(at),numItems:at}}for(var ar=this.attributes.tangent.array,aq=[],ap=[],at=0;at<au;at++){aq[at]=new THREE.Vector3,ap[at]=new THREE.Vector3}var an,ak,ao,ai,ah,al,aj,ad,af,ae,ag,W,P,U,ac,au=new THREE.Vector3,at=new THREE.Vector3,S,O,T,N,Y,o,X,Q=this.offsets;T=0;for(N=Q.length;T<N;++T){O=Q[T].start;Y=Q[T].count;var D=Q[T].index;S=O;for(O+=Y;S<O;S+=3){Y=D+ay[S],o=D+ay[S+1],X=D+ay[S+2],an=ax[3*Y],ak=ax[3*Y+1],ao=ax[3*Y+2],ai=ax[3*o],ah=ax[3*o+1],al=ax[3*o+2],aj=ax[3*X],ad=ax[3*X+1],af=ax[3*X+2],ae=av[2*Y],ag=av[2*Y+1],W=av[2*o],P=av[2*o+1],U=av[2*X],ac=av[2*X+1],ai-=an,an=aj-an,ah-=ak,ak=ad-ak,al-=ao,ao=af-ao,W-=ae,ae=U-ae,P-=ag,ag=ac-ag,ac=1/(W*ag-ae*P),au.set((ag*ai-P*an)*ac,(ag*ah-P*ak)*ac,(ag*al-P*ao)*ac),at.set((W*an-ae*ai)*ac,(W*ak-ae*ah)*ac,(W*ao-ae*al)*ac),aq[Y].add(au),aq[o].add(au),aq[X].add(au),ap[Y].add(at),ap[o].add(at),ap[X].add(at)}}var v=new THREE.Vector3,k=new THREE.Vector3,w=new THREE.Vector3,am=new THREE.Vector3,Z,ab,aa;T=0;for(N=Q.length;T<N;++T){O=Q[T].start;Y=Q[T].count;D=Q[T].index;S=O;for(O+=Y;S<O;S+=3){Y=D+ay[S],o=D+ay[S+1],X=D+ay[S+2],az(Y),az(o),az(X)}}this.tangentsNeedUpdate=this.hasTangents=!0}},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(){var b=new THREE.Matrix4;return function(a){b.lookAt(this.position,a,this.up);!0===this.useQuaternion?this.quaternion.setFromRotationMatrix(b):this.rotation.setEulerFromRotationMatrix(b,this.eulerOrder)}}();THREE.OrthographicCamera=function(h,g,l,k,j,i){THREE.Camera.call(this);this.left=h;this.right=g;this.top=l;this.bottom=k;this.near=void 0!==j?j:0.1;this.far=void 0!==i?i:2000;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};THREE.PerspectiveCamera=function(f,e,h,g){THREE.Camera.call(this);this.fov=void 0!==f?f:50;this.aspect=void 0!==e?e:1;this.near=void 0!==h?h:0.1;this.far=void 0!==g?g:2000;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(d,c){void 0===c&&(c=24);this.fov=2*THREE.Math.radToDeg(Math.atan(c/(2*d)));this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.setViewOffset=function(h,g,l,k,j,i){this.fullWidth=h;this.fullHeight=g;this.x=l;this.y=k;this.width=j;this.height=i;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var f=this.fullWidth/this.fullHeight,e=Math.tan(THREE.Math.degToRad(0.5*this.fov))*this.near,h=-e,g=f*h,f=Math.abs(f*e-g),h=Math.abs(e-h);this.projectionMatrix.makeFrustum(g+this.x*f/this.fullWidth,g+(this.x+this.width)*f/this.fullWidth,e-(this.y+this.height)*h/this.fullHeight,e-this.y*h/this.fullHeight,this.near,this.far)}else{this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)}};THREE.Light=function(b){THREE.Object3D.call(this);this.color=new THREE.Color(b)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.Light.prototype.clone=function(b){void 0===b&&(b=new THREE.Light);THREE.Object3D.prototype.clone.call(this,b);b.color.copy(this.color);return b};THREE.AmbientLight=function(b){THREE.Light.call(this,b)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.AmbientLight.prototype.clone=function(){var b=new THREE.AmbientLight;THREE.Light.prototype.clone.call(this,b);return b};THREE.AreaLight=function(d,c){THREE.Light.call(this,d);this.normal=new THREE.Vector3(0,-1,0);this.right=new THREE.Vector3(1,0,0);this.intensity=void 0!==c?c:1;this.height=this.width=1;this.constantAttenuation=1.5;this.linearAttenuation=0.5;this.quadraticAttenuation=0.1};THREE.AreaLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight=function(d,c){THREE.Light.call(this,d);this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==c?c:1;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5000;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=!1;this.shadowCascadeOffset=new THREE.Vector3(0,0,-1000);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,0.99,0.998];this.shadowCascadeFarZ=[0.99,0.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight.prototype.clone=function(){var b=new THREE.DirectionalLight;THREE.Light.prototype.clone.call(this,b);b.target=this.target.clone();b.intensity=this.intensity;b.castShadow=this.castShadow;b.onlyShadow=this.onlyShadow;return b};THREE.HemisphereLight=function(e,d,f){THREE.Light.call(this,e);this.position.set(0,100,0);this.groundColor=new THREE.Color(d);this.intensity=void 0!==f?f:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.HemisphereLight.prototype.clone=function(){var b=new THREE.PointLight;THREE.Light.prototype.clone.call(this,b);b.groundColor.copy(this.groundColor);b.intensity=this.intensity;return b};THREE.PointLight=function(e,d,f){THREE.Light.call(this,e);this.intensity=void 0!==d?d:1;this.distance=void 0!==f?f:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight.prototype.clone=function(){var b=new THREE.PointLight;THREE.Light.prototype.clone.call(this,b);b.intensity=this.intensity;b.distance=this.distance;return b};THREE.SpotLight=function(g,f,j,i,h){THREE.Light.call(this,g);this.position.set(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==f?f:1;this.distance=void 0!==j?j:0;this.angle=void 0!==i?i:Math.PI/3;this.exponent=void 0!==h?h:10;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5000;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.SpotLight.prototype.clone=function(){var b=new THREE.SpotLight;THREE.Light.prototype.clone.call(this,b);b.target=this.target.clone();b.intensity=this.intensity;b.distance=this.distance;b.angle=this.angle;b.exponent=this.exponent;b.castShadow=this.castShadow;b.onlyShadow=this.onlyShadow;return b};THREE.Loader=function(b){this.statusDomElement=(this.showStatus=b)?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var b=document.createElement("div");b.style.position="absolute";b.style.right="0px";b.style.top="0px";b.style.fontSize="0.8em";b.style.textAlign="left";b.style.background="rgba(0,0,0,0.25)";b.style.color="#fff";b.style.width="120px";b.style.padding="0.5em 0.5em 0.5em 0.5em";b.style.zIndex=1000;b.innerHTML="Loading ...";return b},updateProgress:function(d){var c="Loaded ",c=d.total?c+((100*d.loaded/d.total).toFixed(0)+"%"):c+((d.loaded/1000).toFixed(2)+" KB");this.statusDomElement.innerHTML=c},extractUrlBase:function(b){b=b.split("/");b.pop();return(1>b.length?".":b.join("/"))+"/"},initMaterials:function(f,e){for(var h=[],g=0;g<f.length;++g){h[g]=THREE.Loader.prototype.createMaterial(f[g],e)}return h},needsTangents:function(e){for(var d=0,f=e.length;d<f;d++){if(e[d] instanceof THREE.ShaderMaterial){return !0}}return !1},createMaterial:function(t,s){function r(b){b=Math.log(b)/Math.LN2;return Math.floor(b)==b}function q(b){b=Math.log(b)/Math.LN2;return Math.pow(2,Math.round(b))}function p(B,w,v,g,d,c,b){var z=/\.dds$/i.test(v),C=s+"/"+v;if(z){var A=THREE.ImageUtils.loadCompressedTexture(C);B[w]=A}else{A=document.createElement("canvas"),B[w]=new THREE.Texture(A)}B[w].sourceFile=v;g&&(B[w].repeat.set(g[0],g[1]),1!==g[0]&&(B[w].wrapS=THREE.RepeatWrapping),1!==g[1]&&(B[w].wrapT=THREE.RepeatWrapping));d&&B[w].offset.set(d[0],d[1]);c&&(v={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==v[c[0]]&&(B[w].wrapS=v[c[0]]),void 0!==v[c[1]]&&(B[w].wrapT=v[c[1]]));b&&(B[w].anisotropy=b);if(!z){var D=B[w],B=new Image;B.onload=function(){if(!r(this.width)||!r(this.height)){var f=q(this.width),e=q(this.height);D.image.width=f;D.image.height=e;D.image.getContext("2d").drawImage(this,0,0,f,e)}else{D.image=this}D.needsUpdate=!0};B.crossOrigin=n.crossOrigin;B.src=C}}function o(b){return(255*b[0]<<16)+(255*b[1]<<8)+255*b[2]}var n=this,m="MeshLambertMaterial",l={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(t.shading){var k=t.shading.toLowerCase();"phong"===k?m="MeshPhongMaterial":"basic"===k&&(m="MeshBasicMaterial")}void 0!==t.blending&&void 0!==THREE[t.blending]&&(l.blending=THREE[t.blending]);if(void 0!==t.transparent||1>t.opacity){l.transparent=t.transparent}void 0!==t.depthTest&&(l.depthTest=t.depthTest);void 0!==t.depthWrite&&(l.depthWrite=t.depthWrite);void 0!==t.visible&&(l.visible=t.visible);void 0!==t.flipSided&&(l.side=THREE.BackSide);void 0!==t.doubleSided&&(l.side=THREE.DoubleSide);void 0!==t.wireframe&&(l.wireframe=t.wireframe);void 0!==t.vertexColors&&("face"===t.vertexColors?l.vertexColors=THREE.FaceColors:t.vertexColors&&(l.vertexColors=THREE.VertexColors));t.colorDiffuse?l.color=o(t.colorDiffuse):t.DbgColor&&(l.color=t.DbgColor);t.colorSpecular&&(l.specular=o(t.colorSpecular));t.colorAmbient&&(l.ambient=o(t.colorAmbient));t.transparency&&(l.opacity=t.transparency);t.specularCoef&&(l.shininess=t.specularCoef);t.mapDiffuse&&s&&p(l,"map",t.mapDiffuse,t.mapDiffuseRepeat,t.mapDiffuseOffset,t.mapDiffuseWrap,t.mapDiffuseAnisotropy);t.mapLight&&s&&p(l,"lightMap",t.mapLight,t.mapLightRepeat,t.mapLightOffset,t.mapLightWrap,t.mapLightAnisotropy);t.mapBump&&s&&p(l,"bumpMap",t.mapBump,t.mapBumpRepeat,t.mapBumpOffset,t.mapBumpWrap,t.mapBumpAnisotropy);t.mapNormal&&s&&p(l,"normalMap",t.mapNormal,t.mapNormalRepeat,t.mapNormalOffset,t.mapNormalWrap,t.mapNormalAnisotropy);t.mapSpecular&&s&&p(l,"specularMap",t.mapSpecular,t.mapSpecularRepeat,t.mapSpecularOffset,t.mapSpecularWrap,t.mapSpecularAnisotropy);t.mapBumpScale&&(l.bumpScale=t.mapBumpScale);t.mapNormal?(m=THREE.ShaderLib.normalmap,k=THREE.UniformsUtils.clone(m.uniforms),k.tNormal.value=l.normalMap,t.mapNormalFactor&&k.uNormalScale.value.set(t.mapNormalFactor,t.mapNormalFactor),l.map&&(k.tDiffuse.value=l.map,k.enableDiffuse.value=!0),l.specularMap&&(k.tSpecular.value=l.specularMap,k.enableSpecular.value=!0),l.lightMap&&(k.tAO.value=l.lightMap,k.enableAO.value=!0),k.uDiffuseColor.value.setHex(l.color),k.uSpecularColor.value.setHex(l.specular),k.uAmbientColor.value.setHex(l.ambient),k.uShininess.value=l.shininess,void 0!==l.opacity&&(k.uOpacity.value=l.opacity),m=new THREE.ShaderMaterial({fragmentShader:m.fragmentShader,vertexShader:m.vertexShader,uniforms:k,lights:!0,fog:!0}),l.transparent&&(m.transparent=!0)):m=new THREE[m](l);void 0!==t.DbgName&&(m.name=t.DbgName);return m}};THREE.ImageLoader=function(){this.crossOrigin=null};THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent,load:function(e,d){var f=this;void 0===d&&(d=new Image);d.addEventListener("load",function(){f.dispatchEvent({type:"load",content:d})},!1);d.addEventListener("error",function(){f.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1);f.crossOrigin&&(d.crossOrigin=f.crossOrigin);d.src=e}};THREE.JSONLoader=function(b){THREE.Loader.call(this,b);this.withCredentials=!1};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);THREE.JSONLoader.prototype.load=function(e,d,f){f=f&&"string"===typeof f?f:this.extractUrlBase(e);this.onLoadStart();this.loadAjaxJSON(this,e,d,f)};THREE.JSONLoader.prototype.loadAjaxJSON=function(i,h,n,m,l){var k=new XMLHttpRequest,j=0;k.onreadystatechange=function(){if(k.readyState===k.DONE){if(200===k.status||0===k.status){if(k.responseText){var a=JSON.parse(k.responseText),a=i.parse(a,m);n(a.geometry,a.materials)}else{console.warn("THREE.JSONLoader: ["+h+"] seems to be unreachable or file there is empty")}i.onLoadComplete()}else{console.error("THREE.JSONLoader: Couldn't load ["+h+"] ["+k.status+"]")}}else{k.readyState===k.LOADING?l&&(0===j&&(j=k.getResponseHeader("Content-Length")),l({total:j,loaded:k.responseText.length})):k.readyState===k.HEADERS_RECEIVED&&void 0!==l&&(j=k.getResponseHeader("Content-Length"))}};k.open("GET",h,!0);k.withCredentials=this.withCredentials;k.send(null)};THREE.JSONLoader.prototype.parse=function(T,S){var R=new THREE.Geometry,Q=void 0!==T.scale?1/T.scale:1,P,O,N,M,L,K,H,F,I,C,B,G,D,o,w,v=T.faces;C=T.vertices;var A=T.normals,z=T.colors,k=0;for(P=0;P<T.uvs.length;P++){T.uvs[P].length&&k++}for(P=0;P<k;P++){R.faceUvs[P]=[],R.faceVertexUvs[P]=[]}M=0;for(L=C.length;M<L;){K=new THREE.Vector3,K.x=C[M++]*Q,K.y=C[M++]*Q,K.z=C[M++]*Q,R.vertices.push(K)}M=0;for(L=v.length;M<L;){C=v[M++];K=C&1;N=C&2;P=C&4;O=C&8;F=C&16;H=C&32;B=C&64;C&=128;K?(G=new THREE.Face4,G.a=v[M++],G.b=v[M++],G.c=v[M++],G.d=v[M++],K=4):(G=new THREE.Face3,G.a=v[M++],G.b=v[M++],G.c=v[M++],K=3);N&&(N=v[M++],G.materialIndex=N);N=R.faces.length;if(P){for(P=0;P<k;P++){D=T.uvs[P],I=v[M++],w=D[2*I],I=D[2*I+1],R.faceUvs[P][N]=new THREE.Vector2(w,I)}}if(O){for(P=0;P<k;P++){D=T.uvs[P];o=[];for(O=0;O<K;O++){I=v[M++],w=D[2*I],I=D[2*I+1],o[O]=new THREE.Vector2(w,I)}R.faceVertexUvs[P][N]=o}}F&&(F=3*v[M++],O=new THREE.Vector3,O.x=A[F++],O.y=A[F++],O.z=A[F],G.normal=O);if(H){for(P=0;P<K;P++){F=3*v[M++],O=new THREE.Vector3,O.x=A[F++],O.y=A[F++],O.z=A[F],G.vertexNormals.push(O)}}B&&(H=v[M++],H=new THREE.Color(z[H]),G.color=H);if(C){for(P=0;P<K;P++){H=v[M++],H=new THREE.Color(z[H]),G.vertexColors.push(H)}}R.faces.push(G)}if(T.skinWeights){M=0;for(L=T.skinWeights.length;M<L;M+=2){v=T.skinWeights[M],A=T.skinWeights[M+1],R.skinWeights.push(new THREE.Vector4(v,A,0,0))}}if(T.skinIndices){M=0;for(L=T.skinIndices.length;M<L;M+=2){v=T.skinIndices[M],A=T.skinIndices[M+1],R.skinIndices.push(new THREE.Vector4(v,A,0,0))}}R.bones=T.bones;R.animation=T.animation;if(void 0!==T.morphTargets){M=0;for(L=T.morphTargets.length;M<L;M++){R.morphTargets[M]={};R.morphTargets[M].name=T.morphTargets[M].name;R.morphTargets[M].vertices=[];z=R.morphTargets[M].vertices;k=T.morphTargets[M].vertices;v=0;for(A=k.length;v<A;v+=3){C=new THREE.Vector3,C.x=k[v]*Q,C.y=k[v+1]*Q,C.z=k[v+2]*Q,z.push(C)}}}if(void 0!==T.morphColors){M=0;for(L=T.morphColors.length;M<L;M++){R.morphColors[M]={};R.morphColors[M].name=T.morphColors[M].name;R.morphColors[M].colors=[];A=R.morphColors[M].colors;z=T.morphColors[M].colors;Q=0;for(v=z.length;Q<v;Q+=3){k=new THREE.Color(16755200),k.setRGB(z[Q],z[Q+1],z[Q+2]),A.push(k)}}}R.computeCentroids();R.computeFaceNormals();if(void 0===T.materials){return{geometry:R}}Q=this.initMaterials(T.materials,S);this.needsTangents(Q)&&R.computeTangents();return{geometry:R,materials:Q}};THREE.LoadingMonitor=function(){var f=this,e=0,h=0,g=function(){e++;f.dispatchEvent({type:"progress",loaded:e,total:h});e===h&&f.dispatchEvent({type:"load"})};this.add=function(b){h++;b.addEventListener("load",g,!1)}};THREE.LoadingMonitor.prototype={constructor:THREE.LoadingMonitor,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent};THREE.GeometryLoader=function(){};THREE.GeometryLoader.prototype={constructor:THREE.GeometryLoader,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent,load:function(e){var d=this,f=new XMLHttpRequest;f.addEventListener("load",function(b){b=d.parse(JSON.parse(b.target.responseText));d.dispatchEvent({type:"load",content:b})},!1);f.addEventListener("progress",function(b){d.dispatchEvent({type:"progress",loaded:b.loaded,total:b.total})},!1);f.addEventListener("error",function(){d.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1);f.open("GET",e,!0);f.send(null)},parse:function(){}};THREE.MaterialLoader=function(){};THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent,load:function(e){var d=this,f=new XMLHttpRequest;f.addEventListener("load",function(b){b=d.parse(JSON.parse(b.target.responseText));d.dispatchEvent({type:"load",content:b})},!1);f.addEventListener("progress",function(b){d.dispatchEvent({type:"progress",loaded:b.loaded,total:b.total})},!1);f.addEventListener("error",function(){d.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1);f.open("GET",e,!0);f.send(null)},parse:function(d){var c;switch(d.type){case"MeshBasicMaterial":c=new THREE.MeshBasicMaterial({color:d.color,opacity:d.opacity,transparent:d.transparent,wireframe:d.wireframe});break;case"MeshLambertMaterial":c=new THREE.MeshLambertMaterial({color:d.color,ambient:d.ambient,emissive:d.emissive,opacity:d.opacity,transparent:d.transparent,wireframe:d.wireframe});break;case"MeshPhongMaterial":c=new THREE.MeshPhongMaterial({color:d.color,ambient:d.ambient,emissive:d.emissive,specular:d.specular,shininess:d.shininess,opacity:d.opacity,transparent:d.transparent,wireframe:d.wireframe});break;case"MeshNormalMaterial":c=new THREE.MeshNormalMaterial({opacity:d.opacity,transparent:d.transparent,wireframe:d.wireframe});break;case"MeshDepthMaterial":c=new THREE.MeshDepthMaterial({opacity:d.opacity,transparent:d.transparent,wireframe:d.wireframe})}return c}};THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){};this.geometryHandlerMap={};this.hierarchyHandlerMap={};this.addGeometryHandler("ascii",THREE.JSONLoader)};THREE.SceneLoader.prototype.constructor=THREE.SceneLoader;THREE.SceneLoader.prototype.load=function(f,e){var h=this,g=new XMLHttpRequest;g.onreadystatechange=function(){if(4===g.readyState){if(200===g.status||0===g.status){var a=JSON.parse(g.responseText);h.parse(a,e,f)}else{console.error("THREE.SceneLoader: Couldn't load ["+f+"] ["+g.status+"]")}}};g.open("GET",f,!0);g.send(null)};THREE.SceneLoader.prototype.addGeometryHandler=function(d,c){this.geometryHandlerMap[d]={loaderClass:c}};THREE.SceneLoader.prototype.addHierarchyHandler=function(d,c){this.hierarchyHandlerMap[d]={loaderClass:c}};THREE.SceneLoader.prototype.parse=function(ap,ao,an){function am(d,c){return"relativeToHTML"==c?d:ac+"/"+d}function al(){ak(A.scene,w.objects)}function ak(z,y){var x,u,s,r,m,h,l;for(l in y){if(void 0===A.objects[l]){var d=y[l],C=null;if(d.type&&d.type in ae.hierarchyHandlerMap){if(void 0===d.loading){u={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,userData:1,skin:1,morph:1,mirroredLoop:1,duration:1};s={};for(var f in d){f in u||(s[f]=d[f])}Z=A.materials[d.material];d.loading=!0;u=ae.hierarchyHandlerMap[d.type].loaderObject;u.options?u.load(am(d.url,w.urlBaseType),ai(l,z,Z,d)):u.load(am(d.url,w.urlBaseType),ai(l,z,Z,d),s)}}else{if(void 0!==d.geometry){if(af=A.geometries[d.geometry]){C=!1;Z=A.materials[d.material];C=Z instanceof THREE.ShaderMaterial;s=d.position;r=d.rotation;m=d.scale;x=d.matrix;h=d.quaternion;d.material||(Z=new THREE.MeshFaceMaterial(A.face_materials[d.geometry]));Z instanceof THREE.MeshFaceMaterial&&0===Z.materials.length&&(Z=new THREE.MeshFaceMaterial(A.face_materials[d.geometry]));if(Z instanceof THREE.MeshFaceMaterial){for(u=0;u<Z.materials.length;u++){C=C||Z.materials[u] instanceof THREE.ShaderMaterial}}C&&af.computeTangents();d.skin?C=new THREE.SkinnedMesh(af,Z):d.morph?(C=new THREE.MorphAnimMesh(af,Z),void 0!==d.duration&&(C.duration=d.duration),void 0!==d.time&&(C.time=d.time),void 0!==d.mirroredLoop&&(C.mirroredLoop=d.mirroredLoop),Z.morphNormals&&af.computeMorphNormals()):C=new THREE.Mesh(af,Z);C.name=l;x?(C.matrixAutoUpdate=!1,C.matrix.set(x[0],x[1],x[2],x[3],x[4],x[5],x[6],x[7],x[8],x[9],x[10],x[11],x[12],x[13],x[14],x[15])):(C.position.set(s[0],s[1],s[2]),h?(C.quaternion.set(h[0],h[1],h[2],h[3]),C.useQuaternion=!0):C.rotation.set(r[0],r[1],r[2]),C.scale.set(m[0],m[1],m[2]));C.visible=d.visible;C.castShadow=d.castShadow;C.receiveShadow=d.receiveShadow;z.add(C);A.objects[l]=C}}else{"DirectionalLight"===d.type||"PointLight"===d.type||"AmbientLight"===d.type?(T=void 0!==d.color?d.color:16777215,P=void 0!==d.intensity?d.intensity:1,"DirectionalLight"===d.type?(s=d.direction,N=new THREE.DirectionalLight(T,P),N.position.set(s[0],s[1],s[2]),d.target&&(Q.push({object:N,targetName:d.target}),N.target=null)):"PointLight"===d.type?(s=d.position,u=d.distance,N=new THREE.PointLight(T,P,u),N.position.set(s[0],s[1],s[2])):"AmbientLight"===d.type&&(N=new THREE.AmbientLight(T)),z.add(N),N.name=l,A.lights[l]=N,A.objects[l]=N):"PerspectiveCamera"===d.type||"OrthographicCamera"===d.type?(s=d.position,r=d.rotation,h=d.quaternion,"PerspectiveCamera"===d.type?X=new THREE.PerspectiveCamera(d.fov,d.aspect,d.near,d.far):"OrthographicCamera"===d.type&&(X=new THREE.OrthographicCamera(d.left,d.right,d.top,d.bottom,d.near,d.far)),X.name=l,X.position.set(s[0],s[1],s[2]),void 0!==h?(X.quaternion.set(h[0],h[1],h[2],h[3]),X.useQuaternion=!0):void 0!==r&&X.rotation.set(r[0],r[1],r[2]),z.add(X),A.cameras[l]=X,A.objects[l]=X):(s=d.position,r=d.rotation,m=d.scale,h=d.quaternion,C=new THREE.Object3D,C.name=l,C.position.set(s[0],s[1],s[2]),h?(C.quaternion.set(h[0],h[1],h[2],h[3]),C.useQuaternion=!0):C.rotation.set(r[0],r[1],r[2]),C.scale.set(m[0],m[1],m[2]),C.visible=void 0!==d.visible?d.visible:!1,z.add(C),A.objects[l]=C,A.empties[l]=C)}}if(C){if(void 0!==d.userData){for(var F in d.userData){C.userData[F]=d.userData[F]}}if(void 0!==d.groups){for(u=0;u<d.groups.length;u++){s=d.groups[u],void 0===A.groups[s]&&(A.groups[s]=[]),A.groups[s].push(l)}}void 0!==d.children&&ak(C,d.children)}}}}function aj(b){return function(a,d){a.name=b;A.geometries[b]=a;A.face_materials[b]=d;al();W-=1;ae.onLoadComplete();ag()}}function ai(f,e,h,g){return function(j){var j=j.content?j.content:j.dae?j.scene:j,d=g.position,c=g.rotation,b=g.quaternion,a=g.scale;j.position.set(d[0],d[1],d[2]);b?(j.quaternion.set(b[0],b[1],b[2],b[3]),j.useQuaternion=!0):j.rotation.set(c[0],c[1],c[2]);j.scale.set(a[0],a[1],a[2]);h&&j.traverse(function(i){i.material=h});var m=void 0!==g.visible?g.visible:!0;j.traverse(function(i){i.visible=m});e.add(j);j.name=f;A.objects[f]=j;al();W-=1;ae.onLoadComplete();ag()}}function ah(b){return function(a,d){a.name=b;A.geometries[b]=a;A.face_materials[b]=d}}function ag(){ae.callbackProgress({totalModels:D,totalTextures:S,loadedModels:D-W,loadedTextures:S-U},A);ae.onLoadProgress();if(0===W&&0===U){for(var b=0;b<Q.length;b++){var f=Q[b],e=A.objects[f.targetName];e?f.object.target=e:(f.object.target=new THREE.Object3D,A.scene.add(f.object.target));f.object.target.userData.targetInverse=f.object}ao(A)}}var ae=this,ac=THREE.Loader.prototype.extractUrlBase(an),af,Z,X,ad,ab,N,T,P,W,U,D,S,A,Q=[],w=ap,R;for(R in this.geometryHandlerMap){ap=this.geometryHandlerMap[R].loaderClass,this.geometryHandlerMap[R].loaderObject=new ap}for(R in this.hierarchyHandlerMap){ap=this.hierarchyHandlerMap[R].loaderClass,this.hierarchyHandlerMap[R].loaderObject=new ap}U=W=0;A={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}};if(w.transform&&(R=w.transform.position,ap=w.transform.rotation,an=w.transform.scale,R&&A.scene.position.set(R[0],R[1],R[2]),ap&&A.scene.rotation.set(ap[0],ap[1],ap[2]),an&&A.scene.scale.set(an[0],an[1],an[2]),R||ap||an)){A.scene.updateMatrix(),A.scene.updateMatrixWorld()}R=function(b){return function(){U-=b;ag();ae.onLoadComplete()}};for(var v in w.fogs){ap=w.fogs[v],"linear"===ap.type?ad=new THREE.Fog(0,ap.near,ap.far):"exp2"===ap.type&&(ad=new THREE.FogExp2(0,ap.density)),ap=ap.color,ad.color.setRGB(ap[0],ap[1],ap[2]),A.fogs[v]=ad}for(var aa in w.geometries){ad=w.geometries[aa],ad.type in this.geometryHandlerMap&&(W+=1,ae.onLoadStart())}for(var k in w.objects){ad=w.objects[k],ad.type&&ad.type in this.hierarchyHandlerMap&&(W+=1,ae.onLoadStart())}D=W;for(aa in w.geometries){if(ad=w.geometries[aa],"cube"===ad.type){af=new THREE.CubeGeometry(ad.width,ad.height,ad.depth,ad.widthSegments,ad.heightSegments,ad.depthSegments),af.name=aa,A.geometries[aa]=af}else{if("plane"===ad.type){af=new THREE.PlaneGeometry(ad.width,ad.height,ad.widthSegments,ad.heightSegments),af.name=aa,A.geometries[aa]=af}else{if("sphere"===ad.type){af=new THREE.SphereGeometry(ad.radius,ad.widthSegments,ad.heightSegments),af.name=aa,A.geometries[aa]=af}else{if("cylinder"===ad.type){af=new THREE.CylinderGeometry(ad.topRad,ad.botRad,ad.height,ad.radSegs,ad.heightSegs),af.name=aa,A.geometries[aa]=af}else{if("torus"===ad.type){af=new THREE.TorusGeometry(ad.radius,ad.tube,ad.segmentsR,ad.segmentsT),af.name=aa,A.geometries[aa]=af}else{if("icosahedron"===ad.type){af=new THREE.IcosahedronGeometry(ad.radius,ad.subdivisions),af.name=aa,A.geometries[aa]=af}else{if(ad.type in this.geometryHandlerMap){k={};for(ab in ad){"type"!==ab&&"url"!==ab&&(k[ab]=ad[ab])}this.geometryHandlerMap[ad.type].loaderObject.load(am(ad.url,w.urlBaseType),aj(aa),k)}else{"embedded"===ad.type&&(k=w.embeds[ad.id],k.metadata=w.metadata,k&&(k=this.geometryHandlerMap.ascii.loaderObject.parse(k,""),ah(aa)(k.geometry,k.materials)))}}}}}}}}for(var Y in w.textures){if(aa=w.textures[Y],aa.url instanceof Array){U+=aa.url.length;for(ab=0;ab<aa.url.length;ab++){ae.onLoadStart()}}else{U+=1,ae.onLoadStart()}}S=U;for(Y in w.textures){aa=w.textures[Y];void 0!==aa.mapping&&void 0!==THREE[aa.mapping]&&(aa.mapping=new THREE[aa.mapping]);if(aa.url instanceof Array){k=aa.url.length;ad=[];for(ab=0;ab<k;ab++){ad[ab]=am(aa.url[ab],w.urlBaseType)}ab=(ab=/\.dds$/i.test(ad[0]))?THREE.ImageUtils.loadCompressedTextureCube(ad,aa.mapping,R(k)):THREE.ImageUtils.loadTextureCube(ad,aa.mapping,R(k))}else{ab=/\.dds$/i.test(aa.url),k=am(aa.url,w.urlBaseType),ad=R(1),ab=ab?THREE.ImageUtils.loadCompressedTexture(k,aa.mapping,ad):THREE.ImageUtils.loadTexture(k,aa.mapping,ad),void 0!==THREE[aa.minFilter]&&(ab.minFilter=THREE[aa.minFilter]),void 0!==THREE[aa.magFilter]&&(ab.magFilter=THREE[aa.magFilter]),aa.anisotropy&&(ab.anisotropy=aa.anisotropy),aa.repeat&&(ab.repeat.set(aa.repeat[0],aa.repeat[1]),1!==aa.repeat[0]&&(ab.wrapS=THREE.RepeatWrapping),1!==aa.repeat[1]&&(ab.wrapT=THREE.RepeatWrapping)),aa.offset&&ab.offset.set(aa.offset[0],aa.offset[1]),aa.wrap&&(k={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==k[aa.wrap[0]]&&(ab.wrapS=k[aa.wrap[0]]),void 0!==k[aa.wrap[1]]&&(ab.wrapT=k[aa.wrap[1]]))}A.textures[Y]=ab}var O,o;for(O in w.materials){Y=w.materials[O];for(o in Y.parameters){"envMap"===o||"map"===o||"lightMap"===o||"bumpMap"===o?Y.parameters[o]=A.textures[Y.parameters[o]]:"shading"===o?Y.parameters[o]="flat"===Y.parameters[o]?THREE.FlatShading:THREE.SmoothShading:"side"===o?Y.parameters[o]="double"==Y.parameters[o]?THREE.DoubleSide:"back"==Y.parameters[o]?THREE.BackSide:THREE.FrontSide:"blending"===o?Y.parameters[o]=Y.parameters[o] in THREE?THREE[Y.parameters[o]]:THREE.NormalBlending:"combine"===o?Y.parameters[o]=Y.parameters[o] in THREE?THREE[Y.parameters[o]]:THREE.MultiplyOperation:"vertexColors"===o?"face"==Y.parameters[o]?Y.parameters[o]=THREE.FaceColors:Y.parameters[o]&&(Y.parameters[o]=THREE.VertexColors):"wrapRGB"===o&&(R=Y.parameters[o],Y.parameters[o]=new THREE.Vector3(R[0],R[1],R[2]))}void 0!==Y.parameters.opacity&&1>Y.parameters.opacity&&(Y.parameters.transparent=!0);Y.parameters.normalMap?(R=THREE.ShaderLib.normalmap,aa=THREE.UniformsUtils.clone(R.uniforms),ab=Y.parameters.color,k=Y.parameters.specular,ad=Y.parameters.ambient,v=Y.parameters.shininess,aa.tNormal.value=A.textures[Y.parameters.normalMap],Y.parameters.normalScale&&aa.uNormalScale.value.set(Y.parameters.normalScale[0],Y.parameters.normalScale[1]),Y.parameters.map&&(aa.tDiffuse.value=Y.parameters.map,aa.enableDiffuse.value=!0),Y.parameters.envMap&&(aa.tCube.value=Y.parameters.envMap,aa.enableReflection.value=!0,aa.uReflectivity.value=Y.parameters.reflectivity),Y.parameters.lightMap&&(aa.tAO.value=Y.parameters.lightMap,aa.enableAO.value=!0),Y.parameters.specularMap&&(aa.tSpecular.value=A.textures[Y.parameters.specularMap],aa.enableSpecular.value=!0),Y.parameters.displacementMap&&(aa.tDisplacement.value=A.textures[Y.parameters.displacementMap],aa.enableDisplacement.value=!0,aa.uDisplacementBias.value=Y.parameters.displacementBias,aa.uDisplacementScale.value=Y.parameters.displacementScale),aa.uDiffuseColor.value.setHex(ab),aa.uSpecularColor.value.setHex(k),aa.uAmbientColor.value.setHex(ad),aa.uShininess.value=v,Y.parameters.opacity&&(aa.uOpacity.value=Y.parameters.opacity),Z=new THREE.ShaderMaterial({fragmentShader:R.fragmentShader,vertexShader:R.vertexShader,uniforms:aa,lights:!0,fog:!0})):Z=new THREE[Y.type](Y.parameters);Z.name=O;A.materials[O]=Z}for(O in w.materials){if(Y=w.materials[O],Y.parameters.materials){o=[];for(ab=0;ab<Y.parameters.materials.length;ab++){o.push(A.materials[Y.parameters.materials[ab]])}A.materials[O].materials=o}}al();A.cameras&&w.defaults.camera&&(A.currentCamera=A.cameras[w.defaults.camera]);A.fogs&&w.defaults.fog&&(A.scene.fog=A.fogs[w.defaults.fog]);ae.callbackSync(A);ag()};THREE.TextureLoader=function(){this.crossOrigin=null};THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent,load:function(e){var d=this,f=new Image;f.addEventListener("load",function(){var b=new THREE.Texture(f);b.needsUpdate=!0;d.dispatchEvent({type:"load",content:b})},!1);f.addEventListener("error",function(){d.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1);d.crossOrigin&&(f.crossOrigin=d.crossOrigin);f.src=e}};THREE.Material=function(){this.id=THREE.MaterialIdCount++;this.name="";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=!0;this.polygonOffset=!1;this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.overdraw=!1;this.needsUpdate=this.visible=!0};THREE.Material.prototype={constructor:THREE.Material,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent,setValues:function(f){if(void 0!==f){for(var e in f){var h=f[e];if(void 0===h){console.warn("THREE.Material: '"+e+"' parameter is undefined.")}else{if(e in this){var g=this[e];g instanceof THREE.Color?g.set(h):g instanceof THREE.Vector3&&h instanceof THREE.Vector3?g.copy(h):this[e]=h}}}}},clone:function(b){void 0===b&&(b=new THREE.Material);b.name=this.name;b.side=this.side;b.opacity=this.opacity;b.transparent=this.transparent;b.blending=this.blending;b.blendSrc=this.blendSrc;b.blendDst=this.blendDst;b.blendEquation=this.blendEquation;b.depthTest=this.depthTest;b.depthWrite=this.depthWrite;b.polygonOffset=this.polygonOffset;b.polygonOffsetFactor=this.polygonOffsetFactor;b.polygonOffsetUnits=this.polygonOffsetUnits;b.alphaTest=this.alphaTest;b.overdraw=this.overdraw;b.visible=this.visible;return b},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.MaterialIdCount=0;THREE.LineBasicMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=!1;this.fog=!0;this.setValues(b)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineBasicMaterial.prototype.clone=function(){var b=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.linewidth=this.linewidth;b.linecap=this.linecap;b.linejoin=this.linejoin;b.vertexColors=this.vertexColors;b.fog=this.fog;return b};THREE.LineDashedMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.scale=this.linewidth=1;this.dashSize=3;this.gapSize=1;this.vertexColors=!1;this.fog=!0;this.setValues(b)};THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineDashedMaterial.prototype.clone=function(){var b=new THREE.LineDashedMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.linewidth=this.linewidth;b.scale=this.scale;b.dashSize=this.dashSize;b.gapSize=this.gapSize;b.vertexColors=this.vertexColors;b.fog=this.fog;return b};THREE.MeshBasicMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(b)};THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshBasicMaterial.prototype.clone=function(){var b=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.map=this.map;b.lightMap=this.lightMap;b.specularMap=this.specularMap;b.envMap=this.envMap;b.combine=this.combine;b.reflectivity=this.reflectivity;b.refractionRatio=this.refractionRatio;b.fog=this.fog;b.shading=this.shading;b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;b.wireframeLinecap=this.wireframeLinecap;b.wireframeLinejoin=this.wireframeLinejoin;b.vertexColors=this.vertexColors;b.skinning=this.skinning;b.morphTargets=this.morphTargets;return b};THREE.MeshLambertMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(b)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshLambertMaterial.prototype.clone=function(){var b=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.ambient.copy(this.ambient);b.emissive.copy(this.emissive);b.wrapAround=this.wrapAround;b.wrapRGB.copy(this.wrapRGB);b.map=this.map;b.lightMap=this.lightMap;b.specularMap=this.specularMap;b.envMap=this.envMap;b.combine=this.combine;b.reflectivity=this.reflectivity;b.refractionRatio=this.refractionRatio;b.fog=this.fog;b.shading=this.shading;b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;b.wireframeLinecap=this.wireframeLinecap;b.wireframeLinejoin=this.wireframeLinejoin;b.vertexColors=this.vertexColors;b.skinning=this.skinning;b.morphTargets=this.morphTargets;b.morphNormals=this.morphNormals;return b};THREE.MeshPhongMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.metal=!1;this.perPixel=!0;this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(b)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshPhongMaterial.prototype.clone=function(){var b=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.ambient.copy(this.ambient);b.emissive.copy(this.emissive);b.specular.copy(this.specular);b.shininess=this.shininess;b.metal=this.metal;b.perPixel=this.perPixel;b.wrapAround=this.wrapAround;b.wrapRGB.copy(this.wrapRGB);b.map=this.map;b.lightMap=this.lightMap;b.bumpMap=this.bumpMap;b.bumpScale=this.bumpScale;b.normalMap=this.normalMap;b.normalScale.copy(this.normalScale);b.specularMap=this.specularMap;b.envMap=this.envMap;b.combine=this.combine;b.reflectivity=this.reflectivity;b.refractionRatio=this.refractionRatio;b.fog=this.fog;b.shading=this.shading;b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;b.wireframeLinecap=this.wireframeLinecap;b.wireframeLinejoin=this.wireframeLinejoin;b.vertexColors=this.vertexColors;b.skinning=this.skinning;b.morphTargets=this.morphTargets;b.morphNormals=this.morphNormals;return b};THREE.MeshDepthMaterial=function(b){THREE.Material.call(this);this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(b)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var b=new THREE.MeshDepthMaterial;THREE.Material.prototype.clone.call(this,b);b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;return b};THREE.MeshNormalMaterial=function(b){THREE.Material.call(this,b);this.shading=THREE.FlatShading;this.wireframe=!1;this.wireframeLinewidth=1;this.morphTargets=!1;this.setValues(b)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var b=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,b);b.shading=this.shading;b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;return b};THREE.MeshFaceMaterial=function(b){this.materials=b instanceof Array?b:[]};THREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial(this.materials.slice(0))};THREE.ParticleBasicMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=!1;this.fog=!0;this.setValues(b)};THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ParticleBasicMaterial.prototype.clone=function(){var b=new THREE.ParticleBasicMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.map=this.map;b.size=this.size;b.sizeAttenuation=this.sizeAttenuation;b.vertexColors=this.vertexColors;b.fog=this.fog;return b};THREE.ParticleCanvasMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.program=function(){};this.setValues(b)};THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ParticleCanvasMaterial.prototype.clone=function(){var b=new THREE.ParticleCanvasMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.program=this.program;return b};THREE.ShaderMaterial=function(b){THREE.Material.call(this);this.vertexShader=this.fragmentShader="void main() {}";this.uniforms={};this.defines={};this.attributes=null;this.shading=THREE.SmoothShading;this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(b)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ShaderMaterial.prototype.clone=function(){var b=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,b);b.fragmentShader=this.fragmentShader;b.vertexShader=this.vertexShader;b.uniforms=THREE.UniformsUtils.clone(this.uniforms);b.attributes=this.attributes;b.defines=this.defines;b.shading=this.shading;b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;b.fog=this.fog;b.lights=this.lights;b.vertexColors=this.vertexColors;b.skinning=this.skinning;b.morphTargets=this.morphTargets;b.morphNormals=this.morphNormals;return b};THREE.SpriteMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=new THREE.Texture;this.useScreenCoordinates=!0;this.depthTest=!this.useScreenCoordinates;this.sizeAttenuation=!this.useScreenCoordinates;this.scaleByViewport=!this.sizeAttenuation;this.alignment=THREE.SpriteAlignment.center.clone();this.fog=!1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=new THREE.Vector2(1,1);this.setValues(b);b=b||{};void 0===b.depthTest&&(this.depthTest=!this.useScreenCoordinates);void 0===b.sizeAttenuation&&(this.sizeAttenuation=!this.useScreenCoordinates);void 0===b.scaleByViewport&&(this.scaleByViewport=!this.sizeAttenuation)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteMaterial.prototype.clone=function(){var b=new THREE.SpriteMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.map=this.map;b.useScreenCoordinates=this.useScreenCoordinates;b.sizeAttenuation=this.sizeAttenuation;b.scaleByViewport=this.scaleByViewport;b.alignment.copy(this.alignment);b.uvOffset.copy(this.uvOffset);b.uvScale.copy(this.uvScale);b.fog=this.fog;return b};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);THREE.Texture=function(r,q,p,o,n,m,l,k,j){this.id=THREE.TextureIdCount++;this.name="";this.image=r;this.mipmaps=[];this.mapping=void 0!==q?q:new THREE.UVMapping;this.wrapS=void 0!==p?p:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==o?o:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==n?n:THREE.LinearFilter;this.minFilter=void 0!==m?m:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==j?j:1;this.format=void 0!==l?l:THREE.RGBAFormat;this.type=void 0!==k?k:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this.needsUpdate=!1;this.onUpdate=null};THREE.Texture.prototype={constructor:THREE.Texture,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent,clone:function(b){void 0===b&&(b=new THREE.Texture);b.image=this.image;b.mipmaps=this.mipmaps.slice(0);b.mapping=this.mapping;b.wrapS=this.wrapS;b.wrapT=this.wrapT;b.magFilter=this.magFilter;b.minFilter=this.minFilter;b.anisotropy=this.anisotropy;b.format=this.format;b.type=this.type;b.offset.copy(this.offset);b.repeat.copy(this.repeat);b.generateMipmaps=this.generateMipmaps;b.premultiplyAlpha=this.premultiplyAlpha;b.flipY=this.flipY;b.unpackAlignment=this.unpackAlignment;return b},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.TextureIdCount=0;THREE.CompressedTexture=function(v,u,t,s,r,q,p,o,n,l,k){THREE.Texture.call(this,null,q,p,o,n,l,s,r,k);this.image={width:u,height:t};this.mipmaps=v;this.generateMipmaps=!1};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CompressedTexture.prototype.clone=function(){var b=new THREE.CompressedTexture;THREE.Texture.prototype.clone.call(this,b);return b};THREE.DataTexture=function(v,u,t,s,r,q,p,o,n,l,k){THREE.Texture.call(this,null,q,p,o,n,l,s,r,k);this.image={data:v,width:u,height:t}};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var b=new THREE.DataTexture;THREE.Texture.prototype.clone.call(this,b);return b};THREE.Particle=function(b){THREE.Object3D.call(this);this.material=b};THREE.Particle.prototype=Object.create(THREE.Object3D.prototype);THREE.Particle.prototype.clone=function(b){void 0===b&&(b=new THREE.Particle(this.material));THREE.Object3D.prototype.clone.call(this,b);return b};THREE.ParticleSystem=function(d,c){THREE.Object3D.call(this);this.geometry=d;this.material=void 0!==c?c:new THREE.ParticleBasicMaterial({color:16777215*Math.random()});this.sortParticles=!1;this.geometry&&null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere();this.frustumCulled=!1};THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype);THREE.ParticleSystem.prototype.clone=function(b){void 0===b&&(b=new THREE.ParticleSystem(this.geometry,this.material));b.sortParticles=this.sortParticles;THREE.Object3D.prototype.clone.call(this,b);return b};THREE.Line=function(e,d,f){THREE.Object3D.call(this);this.geometry=e;this.material=void 0!==d?d:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.type=void 0!==f?f:THREE.LineStrip;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);THREE.Line.prototype.clone=function(b){void 0===b&&(b=new THREE.Line(this.geometry,this.material,this.type));THREE.Object3D.prototype.clone.call(this,b);return b};THREE.Mesh=function(d,c){THREE.Object3D.call(this);this.material=this.geometry=null;this.setGeometry(d);this.setMaterial(c)};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);THREE.Mesh.prototype.setGeometry=function(b){void 0!==b&&(this.geometry=b,null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.updateMorphTargets())};THREE.Mesh.prototype.setMaterial=function(b){this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0})};THREE.Mesh.prototype.updateMorphTargets=function(){if(0<this.geometry.morphTargets.length){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var d=0,c=this.geometry.morphTargets.length;d<c;d++){this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[d].name]=d}}};THREE.Mesh.prototype.getMorphTargetIndexByName=function(b){if(void 0!==this.morphTargetDictionary[b]){return this.morphTargetDictionary[b]}console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+b+" does not exist. Returning 0.");return 0};THREE.Mesh.prototype.clone=function(b){void 0===b&&(b=new THREE.Mesh(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,b);return b};THREE.Bone=function(b){THREE.Object3D.call(this);this.skin=b;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);THREE.Bone.prototype.update=function(f,e){this.matrixAutoUpdate&&(e|=this.updateMatrix());if(e||this.matrixWorldNeedsUpdate){f?this.skinMatrix.multiplyMatrices(f,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0}var h,g=this.children.length;for(h=0;h<g;h++){this.children[h].update(this.skinMatrix,e)}};THREE.SkinnedMesh=function(h,g,l){THREE.Mesh.call(this,h,g);this.useVertexTexture=void 0!==l?l:!0;this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var k,j,i;if(this.geometry&&void 0!==this.geometry.bones){for(h=0;h<this.geometry.bones.length;h++){l=this.geometry.bones[h],k=l.pos,j=l.rotq,i=l.scl,g=this.addBone(),g.name=l.name,g.position.set(k[0],k[1],k[2]),g.quaternion.set(j[0],j[1],j[2],j[3]),g.useQuaternion=!0,void 0!==i?g.scale.set(i[0],i[1],i[2]):g.scale.set(1,1,1)}for(h=0;h<this.bones.length;h++){l=this.geometry.bones[h],g=this.bones[h],-1===l.parent?this.add(g):this.bones[l.parent].add(g)}h=this.bones.length;this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=h=256<h?64:64<h?32:16<h?16:8,this.boneMatrices=new Float32Array(4*this.boneTextureWidth*this.boneTextureHeight),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*h);this.pose()}};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.addBone=function(b){void 0===b&&(b=new THREE.Bone(this));this.bones.push(b);return b};THREE.SkinnedMesh.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||e){this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1}for(var e=0,d=this.children.length;e<d;e++){var f=this.children[e];f instanceof THREE.Bone?f.update(this.identityMatrix,!1):f.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=[];e=0;for(d=this.bones.length;e<d;e++){f=new THREE.Matrix4,f.getInverse(this.bones[e].skinMatrix),this.boneInverses.push(f)}}e=0;for(d=this.bones.length;e<d;e++){THREE.SkinnedMesh.offsetMatrix.multiplyMatrices(this.bones[e].skinMatrix,this.boneInverses[e]),THREE.SkinnedMesh.offsetMatrix.flattenToArrayOffset(this.boneMatrices,16*e)}this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)};THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var e=0;e<this.geometry.skinIndices.length;e++){var d=this.geometry.skinWeights[e],f=1/d.lengthManhattan();Infinity!==f?d.multiplyScalar(f):d.set(1)}};THREE.SkinnedMesh.prototype.clone=function(b){void 0===b&&(b=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture));THREE.Mesh.prototype.clone.call(this,b);return b};THREE.SkinnedMesh.offsetMatrix=new THREE.Matrix4;THREE.MorphAnimMesh=function(d,c){THREE.Mesh.call(this,d,c);this.duration=1000;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(d,c){this.startKeyframe=d;this.endKeyframe=c;this.length=this.endKeyframe-this.startKeyframe+1};THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};THREE.MorphAnimMesh.prototype.parseAnimations=function(){var j=this.geometry;j.animations||(j.animations={});for(var i,p=j.animations,o=/([a-z]+)(\d+)/,n=0,m=j.morphTargets.length;n<m;n++){var l=j.morphTargets[n].name.match(o);if(l&&1<l.length){l=l[1];p[l]||(p[l]={start:Infinity,end:-Infinity});var k=p[l];n<k.start&&(k.start=n);n>k.end&&(k.end=n);i||(i=l)}}j.firstAnimation=i};THREE.MorphAnimMesh.prototype.setAnimationLabel=function(e,d,f){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[e]={start:d,end:f}};THREE.MorphAnimMesh.prototype.playAnimation=function(e,d){var f=this.geometry.animations[e];f?(this.setFrameRange(f.start,f.end),this.duration=1000*((f.end-f.start)/d),this.time=0):console.warn("animation["+e+"] undefined")};THREE.MorphAnimMesh.prototype.updateAnimation=function(d){var c=this.duration/this.length;this.time+=this.direction*d;if(this.mirroredLoop){if(this.time>this.duration||0>this.time){this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)}}else{this.time%=this.duration,0>this.time&&(this.time+=this.duration)}d=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/c),0,this.length-1);d!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[d]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=d);c=this.time%c/c;this.directionBackwards&&(c=1-c);this.morphTargetInfluences[this.currentKeyframe]=c;this.morphTargetInfluences[this.lastKeyframe]=1-c};THREE.MorphAnimMesh.prototype.clone=function(b){void 0===b&&(b=new THREE.MorphAnimMesh(this.geometry,this.material));b.duration=this.duration;b.mirroredLoop=this.mirroredLoop;b.time=this.time;b.lastKeyframe=this.lastKeyframe;b.currentKeyframe=this.currentKeyframe;b.direction=this.direction;b.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,b);return b};THREE.Ribbon=function(d,c){THREE.Object3D.call(this);this.geometry=d;this.material=c};THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype);THREE.Ribbon.prototype.clone=function(b){void 0===b&&(b=new THREE.Ribbon(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,b);return b};THREE.LOD=function(){THREE.Object3D.call(this);this.objects=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.addLevel=function(e,d){void 0===d&&(d=0);for(var d=Math.abs(d),f=0;f<this.objects.length&&!(d<this.objects[f].distance);f++){}this.objects.splice(f,0,{distance:d,object:e});this.add(e)};THREE.LOD.prototype.getObjectForDistance=function(e){for(var d=1,f=this.objects.length;d<f&&!(e<this.objects[d].distance);d++){}return this.objects[d-1].object};THREE.LOD.prototype.update=function(){var d=new THREE.Vector3,c=new THREE.Vector3;return function(f){if(1<this.objects.length){d.getPositionFromMatrix(f.matrixWorld);c.getPositionFromMatrix(this.matrixWorld);f=d.distanceTo(c);this.objects[0].object.visible=!0;for(var b=1,a=this.objects.length;b<a;b++){if(f>=this.objects[b].distance){this.objects[b-1].object.visible=!1,this.objects[b].object.visible=!0}else{break}}for(;b<a;b++){this.objects[b].object.visible=!1}}}}();THREE.LOD.prototype.clone=function(){};THREE.Sprite=function(b){THREE.Object3D.call(this);this.material=void 0!==b?b:new THREE.SpriteMaterial;this.rotation3d=this.rotation;this.rotation=0};THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.updateMatrix=function(){this.rotation3d.set(0,0,this.rotation);this.quaternion.setFromEuler(this.rotation3d,this.eulerOrder);this.matrix.makeFromPositionQuaternionScale(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0};THREE.Sprite.prototype.clone=function(b){void 0===b&&(b=new THREE.Sprite(this.material));THREE.Object3D.prototype.clone.call(this,b);return b};THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.autoUpdate=!0;this.matrixAutoUpdate=!1;this.__objects=[];this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);THREE.Scene.prototype.__addObject=function(d){if(d instanceof THREE.Light){-1===this.__lights.indexOf(d)&&this.__lights.push(d),d.target&&void 0===d.target.parent&&this.add(d.target)}else{if(!(d instanceof THREE.Camera||d instanceof THREE.Bone)&&-1===this.__objects.indexOf(d)){this.__objects.push(d);this.__objectsAdded.push(d);var c=this.__objectsRemoved.indexOf(d);-1!==c&&this.__objectsRemoved.splice(c,1)}}for(c=0;c<d.children.length;c++){this.__addObject(d.children[c])}};THREE.Scene.prototype.__removeObject=function(d){if(d instanceof THREE.Light){var c=this.__lights.indexOf(d);-1!==c&&this.__lights.splice(c,1)}else{d instanceof THREE.Camera||(c=this.__objects.indexOf(d),-1!==c&&(this.__objects.splice(c,1),this.__objectsRemoved.push(d),c=this.__objectsAdded.indexOf(d),-1!==c&&this.__objectsAdded.splice(c,1)))}for(c=0;c<d.children.length;c++){this.__removeObject(d.children[c])}};THREE.Fog=function(e,d,f){this.name="";this.color=new THREE.Color(e);this.near=void 0!==d?d:1;this.far=void 0!==f?f:1000};THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(d,c){this.name="";this.color=new THREE.Color(d);this.density=void 0!==c?c:0.00025};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};THREE.CanvasRenderer=function(aE){function aD(b){aW!==b&&(aW=ah.globalAlpha=b)}function aC(b){ac!==b&&(b===THREE.NormalBlending?ah.globalCompositeOperation="source-over":b===THREE.AdditiveBlending?ah.globalCompositeOperation="lighter":b===THREE.SubtractiveBlending&&(ah.globalCompositeOperation="darker"),ac=b)}function az(b){aV!==b&&(aV=ah.lineWidth=b)}function ay(b){aO!==b&&(aO=ah.lineCap=b)}function ax(b){a0!==b&&(a0=ah.lineJoin=b)}function aw(b){aU!==b&&(aU=ah.strokeStyle=b)}function av(b){aP!==b&&(aP=ah.fillStyle=b)}function at(d,c){if(aJ!==d||aZ!==c){ah.setLineDash([d,c]),aJ=d,aZ=c}}console.log("THREE.CanvasRenderer",THREE.REVISION);var ar=THREE.Math.smoothstep,aE=aE||{},ao=this,al,ap,aj,ai=new THREE.Projector,am=void 0!==aE.canvas?aE.canvas:document.createElement("canvas"),ak,ad,ag,ae,ah=am.getContext("2d"),aX=new THREE.Color(0),aR=0,aW=1,ac=0,aU=null,aP=null,aV=null,aO=null,a0=null,aJ=null,aZ=0,aT,aN,aK,v,O=new THREE.RenderableVertex,bm=new THREE.RenderableVertex,a2,an,T,aY,aM,bh,af,a6,bf,Y,D,X,aG=new THREE.Color,a8=new THREE.Color,aI=new THREE.Color,S=new THREE.Color,bk=new THREE.Color,aS=new THREE.Color,au=new THREE.Color,aa=new THREE.Color,w={},aA={},Q,P,bi,o,a9,ba,U,a3,bd,a4,be=new THREE.Box2,aF=new THREE.Box2,aB=new THREE.Box2,a1=new THREE.Color,bc=new THREE.Color,bl=new THREE.Color,aL=new THREE.Vector3,bg,aq,a7,a5,bj,aH,aQ=16;bg=document.createElement("canvas");bg.width=bg.height=2;aq=bg.getContext("2d");aq.fillStyle="rgba(0,0,0,1)";aq.fillRect(0,0,2,2);a7=aq.getImageData(0,0,2,2);a5=a7.data;bj=document.createElement("canvas");bj.width=bj.height=aQ;aH=bj.getContext("2d");aH.translate(-aQ/2,-aQ/2);aH.scale(aQ,aQ);aQ--;void 0===ah.setLineDash&&(ah.setLineDash=void 0!==ah.mozDash?function(b){ah.mozDash=null!==b[0]?b:null}:function(){});this.domElement=am;this.devicePixelRatio=void 0!==aE.devicePixelRatio?aE.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.supportsVertexTextures=function(){};this.setFaceCulling=function(){};this.setSize=function(e,d,f){ak=e*this.devicePixelRatio;ad=d*this.devicePixelRatio;ag=Math.floor(ak/2);ae=Math.floor(ad/2);am.width=ak;am.height=ad;1!==this.devicePixelRatio&&!1!==f&&(am.style.width=e+"px",am.style.height=d+"px");be.set(new THREE.Vector2(-ag,-ae),new THREE.Vector2(ag,ae));aF.set(new THREE.Vector2(-ag,-ae),new THREE.Vector2(ag,ae));aW=1;ac=0;a0=aO=aV=aP=aU=null};this.setClearColor=function(d,c){aX.set(d);aR=void 0!==c?c:1;aF.set(new THREE.Vector2(-ag,-ae),new THREE.Vector2(ag,ae))};this.setClearColorHex=function(d,c){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead.");this.setClearColor(d,c)};this.getMaxAnisotropy=function(){return 0};this.clear=function(){ah.setTransform(1,0,0,-1,ag,ae);!1===aF.empty()&&(aF.intersect(be),aF.expandByScalar(2),1>aR&&ah.clearRect(aF.min.x|0,aF.min.y|0,aF.max.x-aF.min.x|0,aF.max.y-aF.min.y|0),0<aR&&(aC(THREE.NormalBlending),aD(1),av("rgba("+Math.floor(255*aX.r)+","+Math.floor(255*aX.g)+","+Math.floor(255*aX.b)+","+aR+")"),ah.fillRect(aF.min.x|0,aF.min.y|0,aF.max.x-aF.min.x|0,aF.max.y-aF.min.y|0)),aF.makeEmpty())};this.render=function(ab,R){function N(q,n,F){for(var E=0,C=aj.length;E<C;E++){var B=aj[E];aa.copy(B.color);if(B instanceof THREE.DirectionalLight){var z=aL.getPositionFromMatrix(B.matrixWorld).normalize(),y=n.dot(z);0>=y||(y*=B.intensity,F.add(aa.multiplyScalar(y)))}else{B instanceof THREE.PointLight&&(z=aL.getPositionFromMatrix(B.matrixWorld),y=n.dot(aL.subVectors(z,q).normalize()),0>=y||(y*=0==B.distance?1:1-Math.min(q.distanceTo(z)/B.distance,1),0!=y&&(y*=B.intensity,F.add(aa.multiplyScalar(y)))))}}}function p(n,F,E,C,B,z,q,y){ao.info.render.vertices+=3;ao.info.render.faces++;aD(y.opacity);aC(y.blending);a2=n.positionScreen.x;an=n.positionScreen.y;T=F.positionScreen.x;aY=F.positionScreen.y;aM=E.positionScreen.x;bh=E.positionScreen.y;s(a2,an,T,aY,aM,bh);(y instanceof THREE.MeshLambertMaterial||y instanceof THREE.MeshPhongMaterial)&&null===y.map?(aS.copy(y.color),au.copy(y.emissive),y.vertexColors===THREE.FaceColors&&aS.multiply(q.color),!1===y.wireframe&&y.shading==THREE.SmoothShading&&3==q.vertexNormalsLength?(a8.copy(a1),aI.copy(a1),S.copy(a1),N(q.v1.positionWorld,q.vertexNormalsModel[0],a8),N(q.v2.positionWorld,q.vertexNormalsModel[1],aI),N(q.v3.positionWorld,q.vertexNormalsModel[2],S),a8.multiply(aS).add(au),aI.multiply(aS).add(au),S.multiply(aS).add(au),bk.addColors(aI,S).multiplyScalar(0.5),bi=t(a8,aI,S,bk),r(a2,an,T,aY,aM,bh,0,0,1,0,0,1,bi)):(aG.copy(a1),N(q.centroidModel,q.normalModel,aG),aG.multiply(aS).add(au),!0===y.wireframe?A(aG,y.wireframeLinewidth,y.wireframeLinecap,y.wireframeLinejoin):x(aG))):y instanceof THREE.MeshBasicMaterial||y instanceof THREE.MeshLambertMaterial||y instanceof THREE.MeshPhongMaterial?null!==y.map?y.map.mapping instanceof THREE.UVMapping&&(o=q.uvs[0],I(a2,an,T,aY,aM,bh,o[C].x,o[C].y,o[B].x,o[B].y,o[z].x,o[z].y,y.map)):null!==y.envMap?y.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(aL.copy(q.vertexNormalsModelView[C]),a9=0.5*aL.x+0.5,ba=0.5*aL.y+0.5,aL.copy(q.vertexNormalsModelView[B]),U=0.5*aL.x+0.5,a3=0.5*aL.y+0.5,aL.copy(q.vertexNormalsModelView[z]),bd=0.5*aL.x+0.5,a4=0.5*aL.y+0.5,I(a2,an,T,aY,aM,bh,a9,ba,U,a3,bd,a4,y.envMap)):(aG.copy(y.color),y.vertexColors===THREE.FaceColors&&aG.multiply(q.color),!0===y.wireframe?A(aG,y.wireframeLinewidth,y.wireframeLinecap,y.wireframeLinejoin):x(aG)):y instanceof THREE.MeshDepthMaterial?(Q=R.near,P=R.far,a8.r=a8.g=a8.b=1-ar(n.positionScreen.z*n.positionScreen.w,Q,P),aI.r=aI.g=aI.b=1-ar(F.positionScreen.z*F.positionScreen.w,Q,P),S.r=S.g=S.b=1-ar(E.positionScreen.z*E.positionScreen.w,Q,P),bk.addColors(aI,S).multiplyScalar(0.5),bi=t(a8,aI,S,bk),r(a2,an,T,aY,aM,bh,0,0,1,0,0,1,bi)):y instanceof THREE.MeshNormalMaterial&&(y.shading==THREE.FlatShading?(n=q.normalModelView,aG.setRGB(n.x,n.y,n.z).multiplyScalar(0.5).addScalar(0.5),!0===y.wireframe?A(aG,y.wireframeLinewidth,y.wireframeLinecap,y.wireframeLinejoin):x(aG)):y.shading==THREE.SmoothShading&&(n=q.vertexNormalsModelView[C],a8.setRGB(n.x,n.y,n.z).multiplyScalar(0.5).addScalar(0.5),n=q.vertexNormalsModelView[B],aI.setRGB(n.x,n.y,n.z).multiplyScalar(0.5).addScalar(0.5),n=q.vertexNormalsModelView[z],S.setRGB(n.x,n.y,n.z).multiplyScalar(0.5).addScalar(0.5),bk.addColors(aI,S).multiplyScalar(0.5),bi=t(a8,aI,S,bk),r(a2,an,T,aY,aM,bh,0,0,1,0,0,1,bi)))}function s(q,n,C,B,z,y){ah.beginPath();ah.moveTo(q,n);ah.lineTo(C,B);ah.lineTo(z,y);ah.closePath()}function M(q,n,F,E,C,B,z,y){ah.beginPath();ah.moveTo(q,n);ah.lineTo(F,E);ah.lineTo(C,B);ah.lineTo(z,y);ah.closePath()}function A(q,n,z,y){az(n);ay(z);ax(y);aw(q.getStyle());ah.stroke();aB.expandByScalar(2*n)}function x(n){av(n.getStyle());ah.fill()}function I(bp,bo,bn,bb,V,L,K,J,G,y,H,F,B){if(!(B instanceof THREE.DataTexture||void 0===B.image||0==B.image.width)){if(!0===B.needsUpdate){var E=B.wrapS==THREE.RepeatWrapping,bq=B.wrapT==THREE.RepeatWrapping;w[B.id]=ah.createPattern(B.image,!0===E&&!0===bq?"repeat":!0===E&&!1===bq?"repeat-x":!1===E&&!0===bq?"repeat-y":"no-repeat");B.needsUpdate=!1}void 0===w[B.id]?av("rgba(0,0,0,1)"):av(w[B.id]);var E=B.offset.x/B.repeat.x,bq=B.offset.y/B.repeat.y,C=B.image.width*B.repeat.x,z=B.image.height*B.repeat.y,K=(K+E)*C,J=(1-J+bq)*z,bn=bn-bp,bb=bb-bo,V=V-bp,L=L-bo,G=(G+E)*C-K,y=(1-y+bq)*z-J,H=(H+E)*C-K,F=(1-F+bq)*z-J,E=G*F-H*y;0===E?(void 0===aA[B.id]&&(bo=document.createElement("canvas"),bo.width=B.image.width,bo.height=B.image.height,bo=bo.getContext("2d"),bo.drawImage(B.image,0,0),aA[B.id]=bo.getImageData(0,0,B.image.width,B.image.height).data),bo=aA[B.id],K=4*(Math.floor(K)+Math.floor(J)*B.image.width),aG.setRGB(bo[K]/255,bo[K+1]/255,bo[K+2]/255),x(aG)):(E=1/E,B=(F*bn-y*V)*E,y=(F*bb-y*L)*E,bn=(G*V-H*bn)*E,bb=(G*L-H*bb)*E,bp=bp-B*K-bn*J,K=bo-y*K-bb*J,ah.save(),ah.transform(B,y,bn,bb,bp,K),ah.fill(),ah.restore())}}function r(bb,V,L,K,J,H,G,F,E,B,n,C,q){var y,z;y=q.width-1;z=q.height-1;G*=y;F*=z;L-=bb;K-=V;J-=bb;H-=V;E=E*y-G;B=B*z-F;n=n*y-G;C=C*z-F;z=1/(E*C-n*B);y=(C*L-B*J)*z;B=(C*K-B*H)*z;L=(E*J-n*L)*z;K=(E*H-n*K)*z;bb=bb-y*G-L*F;V=V-B*G-K*F;ah.save();ah.transform(y,B,L,K,bb,V);ah.clip();ah.drawImage(q,0,0);ah.restore()}function t(q,n,z,y){a5[0]=255*q.r|0;a5[1]=255*q.g|0;a5[2]=255*q.b|0;a5[4]=255*n.r|0;a5[5]=255*n.g|0;a5[6]=255*n.b|0;a5[8]=255*z.r|0;a5[9]=255*z.g|0;a5[10]=255*z.b|0;a5[12]=255*y.r|0;a5[13]=255*y.g|0;a5[14]=255*y.b|0;aq.putImageData(a7,0,0);aH.drawImage(bg,0,0);return bj}function u(q,n){var B=n.x-q.x,z=n.y-q.y,y=B*B+z*z;0!==y&&(y=1/Math.sqrt(y),B*=y,z*=y,n.x+=B,n.y+=z,q.x-=B,q.y-=z)}if(!1===R instanceof THREE.Camera){console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.")}else{!0===this.autoClear&&this.clear();ah.setTransform(1,0,0,-1,ag,ae);ao.info.render.vertices=0;ao.info.render.faces=0;al=ai.projectScene(ab,R,this.sortObjects,this.sortElements);ap=al.elements;aj=al.lights;a1.setRGB(0,0,0);bc.setRGB(0,0,0);bl.setRGB(0,0,0);for(var m=0,f=aj.length;m<f;m++){var g=aj[m],j=g.color;g instanceof THREE.AmbientLight?a1.add(j):g instanceof THREE.DirectionalLight?bc.add(j):g instanceof THREE.PointLight&&bl.add(j)}m=0;for(f=ap.length;m<f;m++){var l=ap[m],g=l.material;if(!(void 0===g||!1===g.visible)){aB.makeEmpty();if(l instanceof THREE.RenderableParticle){aT=l;aT.x*=ag;aT.y*=ae;j=aT;aD(g.opacity);aC(g.blending);var Z=void 0,b=void 0,h=void 0,c=void 0,e=void 0,W=void 0,d=void 0;g instanceof THREE.ParticleBasicMaterial?null===g.map?(h=l.object.scale.x,c=l.object.scale.y,h*=l.scale.x*ag,c*=l.scale.y*ae,aB.min.set(j.x-h,j.y-c),aB.max.set(j.x+h,j.y+c),!1===be.isIntersectionBox(aB)?aB.makeEmpty():(av(g.color.getStyle()),ah.save(),ah.translate(j.x,j.y),ah.rotate(-l.rotation),ah.scale(h,c),ah.fillRect(-1,-1,2,2),ah.restore())):(e=g.map.image,W=e.width>>1,d=e.height>>1,h=l.scale.x*ag,c=l.scale.y*ae,Z=h*W,b=c*d,aB.min.set(j.x-Z,j.y-b),aB.max.set(j.x+Z,j.y+b),!1===be.isIntersectionBox(aB)?aB.makeEmpty():(ah.save(),ah.translate(j.x,j.y),ah.rotate(-l.rotation),ah.scale(h,-c),ah.translate(-W,-d),ah.drawImage(e,0,0),ah.restore())):g instanceof THREE.ParticleCanvasMaterial&&(Z=l.scale.x*ag,b=l.scale.y*ae,aB.min.set(j.x-Z,j.y-b),aB.max.set(j.x+Z,j.y+b),!1===be.isIntersectionBox(aB)?aB.makeEmpty():(aw(g.color.getStyle()),av(g.color.getStyle()),ah.save(),ah.translate(j.x,j.y),ah.rotate(-l.rotation),ah.scale(Z,b),g.program(ah),ah.restore()))}else{if(l instanceof THREE.RenderableLine){if(aT=l.v1,aN=l.v2,aT.positionScreen.x*=ag,aT.positionScreen.y*=ae,aN.positionScreen.x*=ag,aN.positionScreen.y*=ae,aB.setFromPoints([aT.positionScreen,aN.positionScreen]),!0===be.isIntersectionBox(aB)){if(j=aT,Z=aN,aD(g.opacity),aC(g.blending),ah.beginPath(),ah.moveTo(j.positionScreen.x,j.positionScreen.y),ah.lineTo(Z.positionScreen.x,Z.positionScreen.y),g instanceof THREE.LineBasicMaterial){az(g.linewidth);ay(g.linecap);ax(g.linejoin);if(g.vertexColors!==THREE.VertexColors){aw(g.color.getStyle())}else{if(b=l.vertexColors[0].getStyle(),l=l.vertexColors[1].getStyle(),b===l){aw(b)}else{try{var k=ah.createLinearGradient(j.positionScreen.x,j.positionScreen.y,Z.positionScreen.x,Z.positionScreen.y);k.addColorStop(0,b);k.addColorStop(1,l)}catch(i){k=b}aw(k)}}ah.stroke();aB.expandByScalar(2*g.linewidth)}else{g instanceof THREE.LineDashedMaterial&&(az(g.linewidth),ay(g.linecap),ax(g.linejoin),aw(g.color.getStyle()),at(g.dashSize,g.gapSize),ah.stroke(),aB.expandByScalar(2*g.linewidth),at(null,null))}}}else{if(l instanceof THREE.RenderableFace3){aT=l.v1;aN=l.v2;aK=l.v3;if(-1>aT.positionScreen.z||1<aT.positionScreen.z){continue}if(-1>aN.positionScreen.z||1<aN.positionScreen.z){continue}if(-1>aK.positionScreen.z||1<aK.positionScreen.z){continue}aT.positionScreen.x*=ag;aT.positionScreen.y*=ae;aN.positionScreen.x*=ag;aN.positionScreen.y*=ae;aK.positionScreen.x*=ag;aK.positionScreen.y*=ae;!0===g.overdraw&&(u(aT.positionScreen,aN.positionScreen),u(aN.positionScreen,aK.positionScreen),u(aK.positionScreen,aT.positionScreen));aB.setFromPoints([aT.positionScreen,aN.positionScreen,aK.positionScreen]);!0===be.isIntersectionBox(aB)&&p(aT,aN,aK,0,1,2,l,g)}else{if(l instanceof THREE.RenderableFace4){aT=l.v1;aN=l.v2;aK=l.v3;v=l.v4;if(-1>aT.positionScreen.z||1<aT.positionScreen.z){continue}if(-1>aN.positionScreen.z||1<aN.positionScreen.z){continue}if(-1>aK.positionScreen.z||1<aK.positionScreen.z){continue}if(-1>v.positionScreen.z||1<v.positionScreen.z){continue}aT.positionScreen.x*=ag;aT.positionScreen.y*=ae;aN.positionScreen.x*=ag;aN.positionScreen.y*=ae;aK.positionScreen.x*=ag;aK.positionScreen.y*=ae;v.positionScreen.x*=ag;v.positionScreen.y*=ae;O.positionScreen.copy(aN.positionScreen);bm.positionScreen.copy(v.positionScreen);!0===g.overdraw&&(u(aT.positionScreen,aN.positionScreen),u(aN.positionScreen,v.positionScreen),u(v.positionScreen,aT.positionScreen),u(aK.positionScreen,O.positionScreen),u(aK.positionScreen,bm.positionScreen));aB.setFromPoints([aT.positionScreen,aN.positionScreen,aK.positionScreen,v.positionScreen]);!0===be.isIntersectionBox(aB)&&(j=aT,Z=aN,b=aK,h=v,c=O,e=bm,ao.info.render.vertices+=4,ao.info.render.faces++,aD(g.opacity),aC(g.blending),void 0!==g.map&&null!==g.map||void 0!==g.envMap&&null!==g.envMap?(p(j,Z,h,0,1,3,l,g),p(c,b,e,1,2,3,l,g)):(a2=j.positionScreen.x,an=j.positionScreen.y,T=Z.positionScreen.x,aY=Z.positionScreen.y,aM=b.positionScreen.x,bh=b.positionScreen.y,af=h.positionScreen.x,a6=h.positionScreen.y,bf=c.positionScreen.x,Y=c.positionScreen.y,D=e.positionScreen.x,X=e.positionScreen.y,g instanceof THREE.MeshLambertMaterial||g instanceof THREE.MeshPhongMaterial?(aS.copy(g.color),au.copy(g.emissive),g.vertexColors===THREE.FaceColors&&aS.multiply(l.color),!1===g.wireframe&&g.shading==THREE.SmoothShading&&4==l.vertexNormalsLength?(a8.copy(a1),aI.copy(a1),S.copy(a1),bk.copy(a1),N(l.v1.positionWorld,l.vertexNormalsModel[0],a8),N(l.v2.positionWorld,l.vertexNormalsModel[1],aI),N(l.v4.positionWorld,l.vertexNormalsModel[3],S),N(l.v3.positionWorld,l.vertexNormalsModel[2],bk),a8.multiply(aS).add(au),aI.multiply(aS).add(au),S.multiply(aS).add(au),bk.multiply(aS).add(au),bi=t(a8,aI,S,bk),s(a2,an,T,aY,af,a6),r(a2,an,T,aY,af,a6,0,0,1,0,0,1,bi),s(bf,Y,aM,bh,D,X),r(bf,Y,aM,bh,D,X,1,0,1,1,0,1,bi)):(aG.copy(a1),N(l.centroidModel,l.normalModel,aG),aG.multiply(aS).add(au),M(a2,an,T,aY,aM,bh,af,a6),!0===g.wireframe?A(aG,g.wireframeLinewidth,g.wireframeLinecap,g.wireframeLinejoin):x(aG))):g instanceof THREE.MeshBasicMaterial?(aG.copy(g.color),g.vertexColors===THREE.FaceColors&&aG.multiply(l.color),M(a2,an,T,aY,aM,bh,af,a6),!0===g.wireframe?A(aG,g.wireframeLinewidth,g.wireframeLinecap,g.wireframeLinejoin):x(aG)):g instanceof THREE.MeshNormalMaterial?(j=void 0,g.shading==THREE.FlatShading?(j=l.normalModelView,aG.setRGB(j.x,j.y,j.z).multiplyScalar(0.5).addScalar(0.5),M(a2,an,T,aY,aM,bh,af,a6),!0===g.wireframe?A(aG,g.wireframeLinewidth,g.wireframeLinecap,g.wireframeLinejoin):x(aG)):g.shading==THREE.SmoothShading&&(j=l.vertexNormalsModelView[0],a8.setRGB(j.x,j.y,j.z).multiplyScalar(0.5).addScalar(0.5),j=l.vertexNormalsModelView[1],aI.setRGB(j.x,j.y,j.z).multiplyScalar(0.5).addScalar(0.5),j=l.vertexNormalsModelView[3],S.setRGB(j.x,j.y,j.z).multiplyScalar(0.5).addScalar(0.5),j=l.vertexNormalsModelView[2],bk.setRGB(j.x,j.y,j.z).multiplyScalar(0.5).addScalar(0.5),bi=t(a8,aI,S,bk),s(a2,an,T,aY,af,a6),r(a2,an,T,aY,af,a6,0,0,1,0,0,1,bi),s(bf,Y,aM,bh,D,X),r(bf,Y,aM,bh,D,X,1,0,1,1,0,1,bi))):g instanceof THREE.MeshDepthMaterial&&(Q=R.near,P=R.far,a8.r=a8.g=a8.b=1-ar(j.positionScreen.z*j.positionScreen.w,Q,P),aI.r=aI.g=aI.b=1-ar(Z.positionScreen.z*Z.positionScreen.w,Q,P),S.r=S.g=S.b=1-ar(h.positionScreen.z*h.positionScreen.w,Q,P),bk.r=bk.g=bk.b=1-ar(b.positionScreen.z*b.positionScreen.w,Q,P),bi=t(a8,aI,S,bk),s(a2,an,T,aY,af,a6),r(a2,an,T,aY,af,a6,0,0,1,0,0,1,bi),s(bf,Y,aM,bh,D,X),r(bf,Y,aM,bh,D,X,1,0,1,1,0,1,bi))))}}}}aF.union(aB)}}ah.setTransform(1,0,0,1,0,0)}}};THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nuniform bool useRefract;\nuniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\nvec3 reflectVec;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#else\nreflectVec = vReflect;\n#endif\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else if ( combine == 2 ) {\ngl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n#ifdef USE_SKINNING\nvec4 worldPosition = modelMatrix * skinned;\n#endif\n#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n#endif\n#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n#endif\n#endif",envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\nworldNormal = normalize( worldNormal );\nvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, worldNormal );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\nvec4 texelColor = texture2D( map, vUv );\n#ifdef GAMMA_INPUT\ntexelColor.xyz *= texelColor.xyz;\n#endif\ngl_FragColor = gl_FragColor * texelColor;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;\nuniform float bumpScale;\nvec2 dHdxy_fwd() {\nvec2 dSTdx = dFdx( vUv );\nvec2 dSTdy = dFdy( vUv );\nfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\nfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\nfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\nreturn vec2( dBx, dBy );\n}\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\nvec3 vSigmaX = dFdx( surf_pos );\nvec3 vSigmaY = dFdy( surf_pos );\nvec3 vN = surf_norm;\nvec3 R1 = cross( vSigmaY, vN );\nvec3 R2 = cross( vN, vSigmaX );\nfloat fDet = dot( vSigmaX, R1 );\nvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\nreturn normalize( abs( fDet ) * surf_norm - vGrad );\n}\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;\nuniform vec2 normalScale;\nvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\nvec3 q0 = dFdx( eye_pos.xyz );\nvec3 q1 = dFdy( eye_pos.xyz );\nvec2 st0 = dFdx( vUv.st );\nvec2 st1 = dFdy( vUv.st );\nvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\nvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\nvec3 N = normalize( surf_norm );\nvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\nmapN.xy = normalScale * mapN.xy;\nmat3 tsn = mat3( S, T, N );\nreturn normalize( tsn * mapN );\n}\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n#else\nspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\nvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n#ifdef DOUBLE_SIDED\nvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n#endif\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif",lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvWorldPosition = worldPosition.xyz;\n#endif",lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\nnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n#ifdef BONE_TEXTURE\nuniform sampler2D boneTexture;\nmat4 getBoneMatrix( const in float i ) {\nfloat j = i * 4.0;\nfloat x = mod( j, N_BONE_PIXEL_X );\nfloat y = floor( j / N_BONE_PIXEL_X );\nconst float dx = 1.0 / N_BONE_PIXEL_X;\nconst float dy = 1.0 / N_BONE_PIXEL_Y;\ny = dy * ( y + 0.5 );\nvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\nvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\nvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\nvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\nmat4 bone = mat4( v1, v2, v3, v4 );\nreturn bone;\n}\n#else\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\nmat4 getBoneMatrix( const in float i ) {\nmat4 bone = boneGlobalMatrices[ int(i) ];\nreturn bone;\n}\n#endif\n#endif",skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX = getBoneMatrix( skinIndex.x );\nmat4 boneMatY = getBoneMatrix( skinIndex.y );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n#ifdef USE_MORPHTARGETS\nvec4 skinVertex = vec4( morphed, 1.0 );\n#else\nvec4 skinVertex = vec4( position, 1.0 );\n#endif\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\n#endif",default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\nmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix = skinWeight.x * boneMatX;\nskinMatrix \t+= skinWeight.y * boneMatY;\n#ifdef USE_MORPHNORMALS\nvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n#else\nvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\nobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\nobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\nobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\nobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#if defined( SHADOWMAP_TYPE_PCF )\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\nfloat shadow = 0.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.0 * xPixelOffset;\nfloat dy0 = -1.0 * yPixelOffset;\nfloat dx1 = 1.0 * xPixelOffset;\nfloat dy1 = 1.0 * yPixelOffset;\nmat3 shadowKernel;\nmat3 depthKernel;\ndepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\ndepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\ndepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\ndepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\ndepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\ndepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\ndepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\ndepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\ndepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nvec3 shadowZ = vec3( shadowCoord.z );\nshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\nshadowKernel[0] *= vec3(0.25);\nshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\nshadowKernel[1] *= vec3(0.25);\nshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\nshadowKernel[2] *= vec3(0.25);\nvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\nshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\nshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\nvec4 shadowValues;\nshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\nshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\nshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\nshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\nshadow = dot( shadowValues, vec4( 1.0 ) );\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};THREE.UniformsUtils={merge:function(g){var f,j,i,h={};for(f=0;f<g.length;f++){for(j in i=this.clone(g[f]),i){h[j]=i[j]}}return h},clone:function(g){var f,j,i,h={};for(f in g){for(j in h[f]={},g[f]){i=g[f][j],h[f][j]=i instanceof THREE.Color||i instanceof THREE.Vector2||i instanceof THREE.Vector3||i instanceof THREE.Vector4||i instanceof THREE.Matrix4||i instanceof THREE.Texture?i.clone():i instanceof Array?i.slice():i}}return h}};THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:0.00025},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2000},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:0.00025},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2000},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\nif ( mod( vLineDistance, totalSize ) > dashSize ) {\ndiscard;\n}\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2000},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {\nvNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:0.98},uReflectivity:{type:"f",value:0.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float uRefractionRatio;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\n#ifdef FLIP_SIDED\nfinalNormal = -finalNormal;\n#endif\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\npointVector = normalize( pointVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n#else\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\nfloat spotDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\nspotVector = normalize( spotVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n#endif\nspotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;\nvec3 spotHalfVector = normalize( spotVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += uDiffuseColor * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;\n#endif\nif ( enableReflection ) {\nvec3 vReflect;\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, normal, uRefractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, normal );\n}\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\n}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING\nvNormal = normalize( normalMatrix * skinnedNormal.xyz );\nvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\nvTangent = normalize( normalMatrix * skinnedTangent.xyz );\n#else\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\n#endif\nvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\nvUv = uv * uRepeat + uOffset;\nvec3 displacedPosition;\n#ifdef VERTEX_TEXTURES\nif ( enableDisplacement ) {\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\ndisplacedPosition = position + normalize( normal ) * df;\n} else {\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n}\n#else\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n#endif\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvWorldPosition = worldPosition.xyz;\nvViewPosition = -mvPosition.xyz;\n#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif\n}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vWorldPosition;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvWorldPosition = worldPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\nvoid main() {\ngl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n}"},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};THREE.WebGLRenderer=function(aO){function aN(d){if(d.__webglCustomAttributesList){for(var c in d.__webglCustomAttributesList){az.deleteBuffer(d.__webglCustomAttributesList[c].buffer)}}}function aM(i,h){var n=i.vertices.length,m=h.material;if(m.attributes){void 0===i.__webglCustomAttributesList&&(i.__webglCustomAttributesList=[]);for(var l in m.attributes){var k=m.attributes[l];if(!k.__webglInitialized||k.createUniqueBuffers){k.__webglInitialized=!0;var j=1;"v2"===k.type?j=2:"v3"===k.type?j=3:"v4"===k.type?j=4:"c"===k.type&&(j=3);k.size=j;k.array=new Float32Array(n*j);k.buffer=az.createBuffer();k.buffer.belongsToAttribute=l;k.needsUpdate=!0}i.__webglCustomAttributesList.push(k)}}}function aJ(A,z){var y=z.geometry,x=A.faces3,u=A.faces4,t=3*x.length+4*u.length,s=1*x.length+2*u.length,u=3*x.length+4*u.length,x=aI(z,A),f=aE(x),k=aG(x),r=x.vertexColors?x.vertexColors:!1;A.__vertexArray=new Float32Array(3*t);k&&(A.__normalArray=new Float32Array(3*t));y.hasTangents&&(A.__tangentArray=new Float32Array(4*t));r&&(A.__colorArray=new Float32Array(3*t));if(f){if(0<y.faceUvs.length||0<y.faceVertexUvs.length){A.__uvArray=new Float32Array(2*t)}if(1<y.faceUvs.length||1<y.faceVertexUvs.length){A.__uv2Array=new Float32Array(2*t)}}z.geometry.skinWeights.length&&z.geometry.skinIndices.length&&(A.__skinIndexArray=new Float32Array(4*t),A.__skinWeightArray=new Float32Array(4*t));A.__faceArray=new Uint16Array(3*s);A.__lineArray=new Uint16Array(2*u);if(A.numMorphTargets){A.__morphTargetsArrays=[];y=0;for(f=A.numMorphTargets;y<f;y++){A.__morphTargetsArrays.push(new Float32Array(3*t))}}if(A.numMorphNormals){A.__morphNormalsArrays=[];y=0;for(f=A.numMorphNormals;y<f;y++){A.__morphNormalsArrays.push(new Float32Array(3*t))}}A.__webglFaceCount=3*s;A.__webglLineCount=2*u;if(x.attributes){void 0===A.__webglCustomAttributesList&&(A.__webglCustomAttributesList=[]);for(var g in x.attributes){var s=x.attributes[g],y={},e;for(e in s){y[e]=s[e]}if(!y.__webglInitialized||y.createUniqueBuffers){y.__webglInitialized=!0,u=1,"v2"===y.type?u=2:"v3"===y.type?u=3:"v4"===y.type?u=4:"c"===y.type&&(u=3),y.size=u,y.array=new Float32Array(t*u),y.buffer=az.createBuffer(),y.buffer.belongsToAttribute=g,s.needsUpdate=!0,y.__original=s}A.__webglCustomAttributesList.push(y)}}A.__inittedArrays=!0}function aI(d,c){return d.material instanceof THREE.MeshFaceMaterial?d.material.materials[c.materialIndex]:d.material}function aG(b){return b instanceof THREE.MeshBasicMaterial&&!b.envMap||b instanceof THREE.MeshDepthMaterial?!1:b&&void 0!==b.shading&&b.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function aE(b){return b.map||b.lightMap||b.bumpMap||b.normalMap||b.specularMap||b instanceof THREE.ShaderMaterial?!0:!1}function aD(b){bv[b]||(az.enableVertexAttribArray(b),bv[b]=!0)}function aB(){for(var b in bv){bv[b]&&(az.disableVertexAttribArray(b),bv[b]=!1)}}function aA(d,c){return d.z!==c.z?c.z-d.z:d.id-c.id}function ax(d,c){return c[0]-d[0]}function au(g,f,j){if(g.length){for(var i=0,h=g.length;i<h;i++){ag=bl=null,ah=Q=aa=aT=aK=D=bC=-1,aY=!0,g[i].render(f,j,bu,bj),ag=bl=null,ah=Q=aa=aT=aK=D=bC=-1,aY=!0}}}function ay(C,B,A,z,y,x,u,t){var s,q,r,l;B?(q=C.length-1,l=B=-1):(q=0,B=C.length,l=1);for(var n=q;n!==B;n+=l){if(s=C[n],s.render){q=s.object;r=s.buffer;if(t){s=t}else{s=s[A];if(!s){continue}u&&aZ.setBlending(s.blending,s.blendEquation,s.blendSrc,s.blendDst);aZ.setDepthTest(s.depthTest);aZ.setDepthWrite(s.depthWrite);a2(s.polygonOffset,s.polygonOffsetFactor,s.polygonOffsetUnits)}aZ.setMaterialFaces(s);r instanceof THREE.BufferGeometry?aZ.renderBufferDirect(z,y,x,s,r,q):aZ.renderBuffer(z,y,x,s,r,q)}}}function aq(y,x,u,t,s,r,q){for(var p,n,l=0,m=y.length;l<m;l++){if(p=y[l],n=p.object,n.visible){if(q){p=q}else{p=p[x];if(!p){continue}r&&aZ.setBlending(p.blending,p.blendEquation,p.blendSrc,p.blendDst);aZ.setDepthTest(p.depthTest);aZ.setDepthWrite(p.depthWrite);a2(p.polygonOffset,p.polygonOffsetFactor,p.polygonOffsetUnits)}aZ.renderImmediateObject(u,t,s,p,n)}}}function ap(G,F){var E,C,B,A;if(void 0===G.__webglInit&&(G.__webglInit=!0,G._modelViewMatrix=new THREE.Matrix4,G._normalMatrix=new THREE.Matrix3,void 0!==G.geometry&&void 0===G.geometry.__webglInit&&(G.geometry.__webglInit=!0,G.geometry.addEventListener("dispose",bm)),C=G.geometry,void 0!==C)){if(C instanceof THREE.BufferGeometry){var z,y;for(z in C.attributes){y="index"===z?az.ELEMENT_ARRAY_BUFFER:az.ARRAY_BUFFER,A=C.attributes[z],A.buffer=az.createBuffer(),az.bindBuffer(y,A.buffer),az.bufferData(y,A.array,az.STATIC_DRAW)}}else{if(G instanceof THREE.Mesh){B=G.material;if(void 0===C.geometryGroups){z=C;var k,n,x,d,c;y={};var J=z.morphTargets.length,I=z.morphNormals.length,H=B instanceof THREE.MeshFaceMaterial;z.geometryGroups={};B=0;for(k=z.faces.length;B<k;B++){n=z.faces[B],x=H?n.materialIndex:0,void 0===y[x]&&(y[x]={hash:x,counter:0}),c=y[x].hash+"_"+y[x].counter,void 0===z.geometryGroups[c]&&(z.geometryGroups[c]={faces3:[],faces4:[],materialIndex:x,vertices:0,numMorphTargets:J,numMorphNormals:I}),d=n instanceof THREE.Face3?3:4,65535<z.geometryGroups[c].vertices+d&&(y[x].counter+=1,c=y[x].hash+"_"+y[x].counter,void 0===z.geometryGroups[c]&&(z.geometryGroups[c]={faces3:[],faces4:[],materialIndex:x,vertices:0,numMorphTargets:J,numMorphNormals:I})),n instanceof THREE.Face3?z.geometryGroups[c].faces3.push(B):z.geometryGroups[c].faces4.push(B),z.geometryGroups[c].vertices+=d}z.geometryGroupsList=[];for(A in z.geometryGroups){z.geometryGroups[A].id=aR++,z.geometryGroupsList.push(z.geometryGroups[A])}}for(E in C.geometryGroups){if(A=C.geometryGroups[E],!A.__webglVertexBuffer){z=A;z.__webglVertexBuffer=az.createBuffer();z.__webglNormalBuffer=az.createBuffer();z.__webglTangentBuffer=az.createBuffer();z.__webglColorBuffer=az.createBuffer();z.__webglUVBuffer=az.createBuffer();z.__webglUV2Buffer=az.createBuffer();z.__webglSkinIndicesBuffer=az.createBuffer();z.__webglSkinWeightsBuffer=az.createBuffer();z.__webglFaceBuffer=az.createBuffer();z.__webglLineBuffer=az.createBuffer();J=y=void 0;if(z.numMorphTargets){z.__webglMorphTargetsBuffers=[];y=0;for(J=z.numMorphTargets;y<J;y++){z.__webglMorphTargetsBuffers.push(az.createBuffer())}}if(z.numMorphNormals){z.__webglMorphNormalsBuffers=[];y=0;for(J=z.numMorphNormals;y<J;y++){z.__webglMorphNormalsBuffers.push(az.createBuffer())}}aZ.info.memory.geometries++;aJ(A,G);C.verticesNeedUpdate=!0;C.morphTargetsNeedUpdate=!0;C.elementsNeedUpdate=!0;C.uvsNeedUpdate=!0;C.normalsNeedUpdate=!0;C.tangentsNeedUpdate=!0;C.colorsNeedUpdate=!0}}}else{G instanceof THREE.Ribbon?C.__webglVertexBuffer||(A=C,A.__webglVertexBuffer=az.createBuffer(),A.__webglColorBuffer=az.createBuffer(),A.__webglNormalBuffer=az.createBuffer(),aZ.info.memory.geometries++,A=C,z=A.vertices.length,A.__vertexArray=new Float32Array(3*z),A.__colorArray=new Float32Array(3*z),A.__normalArray=new Float32Array(3*z),A.__webglVertexCount=z,aM(A,G),C.verticesNeedUpdate=!0,C.colorsNeedUpdate=!0,C.normalsNeedUpdate=!0):G instanceof THREE.Line?C.__webglVertexBuffer||(A=C,A.__webglVertexBuffer=az.createBuffer(),A.__webglColorBuffer=az.createBuffer(),A.__webglLineDistanceBuffer=az.createBuffer(),aZ.info.memory.geometries++,A=C,z=A.vertices.length,A.__vertexArray=new Float32Array(3*z),A.__colorArray=new Float32Array(3*z),A.__lineDistanceArray=new Float32Array(1*z),A.__webglLineCount=z,aM(A,G),C.verticesNeedUpdate=!0,C.colorsNeedUpdate=!0,C.lineDistancesNeedUpdate=!0):G instanceof THREE.ParticleSystem&&!C.__webglVertexBuffer&&(A=C,A.__webglVertexBuffer=az.createBuffer(),A.__webglColorBuffer=az.createBuffer(),aZ.info.memory.geometries++,A=C,z=A.vertices.length,A.__vertexArray=new Float32Array(3*z),A.__colorArray=new Float32Array(3*z),A.__sortArray=[],A.__webglParticleCount=z,aM(A,G),C.verticesNeedUpdate=!0,C.colorsNeedUpdate=!0)}}}if(void 0===G.__webglActive){if(G instanceof THREE.Mesh){if(C=G.geometry,C instanceof THREE.BufferGeometry){av(F.__webglObjects,C,G)}else{if(C instanceof THREE.Geometry){for(E in C.geometryGroups){A=C.geometryGroups[E],av(F.__webglObjects,A,G)}}}}else{G instanceof THREE.Ribbon||G instanceof THREE.Line||G instanceof THREE.ParticleSystem?(C=G.geometry,av(F.__webglObjects,C,G)):G instanceof THREE.ImmediateRenderObject||G.immediateRenderCallback?F.__webglObjectsImmediate.push({object:G,opaque:null,transparent:null}):G instanceof THREE.Sprite?F.__webglSprites.push(G):G instanceof THREE.LensFlare&&F.__webglFlares.push(G)}G.__webglActive=!0}}function av(e,d,f){e.push({buffer:d,object:f,opaque:null,transparent:null})}function ar(d){for(var c in d.attributes){if(d.attributes[c].needsUpdate){return !0}}return !1}function ak(d){for(var c in d.attributes){d.attributes[c].needsUpdate=!1}}function an(d,c){d instanceof THREE.Mesh||d instanceof THREE.ParticleSystem||d instanceof THREE.Ribbon||d instanceof THREE.Line?al(c.__webglObjects,d):d instanceof THREE.Sprite?ao(c.__webglSprites,d):d instanceof THREE.LensFlare?ao(c.__webglFlares,d):(d instanceof THREE.ImmediateRenderObject||d.immediateRenderCallback)&&al(c.__webglObjectsImmediate,d);delete d.__webglActive}function al(e,d){for(var f=e.length-1;0<=f;f--){e[f].object===d&&e.splice(f,1)}}function ao(e,d){for(var f=e.length-1;0<=f;f--){e[f]===d&&e.splice(f,1)}}function bc(ca,b9,b8,b7,b6){bo=0;b7.needsUpdate&&(b7.program&&ad(b7),aZ.initMaterial(b7,b9,b8,b6),b7.needsUpdate=!1);b7.morphTargets&&!b6.__webglMorphTargetInfluences&&(b6.__webglMorphTargetInfluences=new Float32Array(aZ.maxMorphTargets));var b5=!1,b4=b7.program,b3=b4.uniforms,b2=b7.uniforms;b4!==bl&&(az.useProgram(b4),bl=b4,b5=!0);b7.id!==ah&&(ah=b7.id,b5=!0);if(b5||ca!==ag){az.uniformMatrix4fv(b3.projectionMatrix,!1,ca.projectionMatrix.elements),ca!==ag&&(ag=ca)}if(b7.skinning){if(aQ&&b6.useVertexTexture){if(null!==b3.boneTexture){var b1=a4();az.uniform1i(b3.boneTexture,b1);aZ.setTexture(b6.boneTexture,b1)}}else{null!==b3.boneGlobalMatrices&&az.uniformMatrix4fv(b3.boneGlobalMatrices,!1,b6.boneMatrices)}}if(b5){b8&&b7.fog&&(b2.fogColor.value=b8.color,b8 instanceof THREE.Fog?(b2.fogNear.value=b8.near,b2.fogFar.value=b8.far):b8 instanceof THREE.FogExp2&&(b2.fogDensity.value=b8.density));if(b7 instanceof THREE.MeshPhongMaterial||b7 instanceof THREE.MeshLambertMaterial||b7.lights){if(aY){for(var bX,b0=b1=0,bZ=0,bY,bW,bV,bU=by,bT=bU.directional.colors,bS=bU.directional.positions,bR=bU.point.colors,bQ=bU.point.positions,bK=bU.point.distances,bM=bU.spot.colors,bJ=bU.spot.positions,bI=bU.spot.distances,bL=bU.spot.directions,bG=bU.spot.anglesCos,bH=bU.spot.exponents,bb=bU.hemi.skyColors,bN=bU.hemi.groundColors,F=bU.hemi.positions,M=0,B=0,bP=0,z=0,k=0,J=0,I=0,N=0,bO=bX=0,b8=bV=bO=0,b5=b9.length;b8<b5;b8++){bX=b9[b8],bX.onlyShadow||(bY=bX.color,bW=bX.intensity,bV=bX.distance,bX instanceof THREE.AmbientLight?bX.visible&&(aZ.gammaInput?(b1+=bY.r*bY.r,b0+=bY.g*bY.g,bZ+=bY.b*bY.b):(b1+=bY.r,b0+=bY.g,bZ+=bY.b)):bX instanceof THREE.DirectionalLight?(k+=1,bX.visible&&(bE.getPositionFromMatrix(bX.matrixWorld),bt.getPositionFromMatrix(bX.target.matrixWorld),bE.sub(bt),bE.normalize(),0===bE.x&&0===bE.y&&0===bE.z||(bX=3*M,bS[bX]=bE.x,bS[bX+1]=bE.y,bS[bX+2]=bE.z,aZ.gammaInput?ba(bT,bX,bY,bW*bW):aj(bT,bX,bY,bW),M+=1))):bX instanceof THREE.PointLight?(J+=1,bX.visible&&(bO=3*B,aZ.gammaInput?ba(bR,bO,bY,bW*bW):aj(bR,bO,bY,bW),bt.getPositionFromMatrix(bX.matrixWorld),bQ[bO]=bt.x,bQ[bO+1]=bt.y,bQ[bO+2]=bt.z,bK[B]=bV,B+=1)):bX instanceof THREE.SpotLight?(I+=1,bX.visible&&(bO=3*bP,aZ.gammaInput?ba(bM,bO,bY,bW*bW):aj(bM,bO,bY,bW),bt.getPositionFromMatrix(bX.matrixWorld),bJ[bO]=bt.x,bJ[bO+1]=bt.y,bJ[bO+2]=bt.z,bI[bP]=bV,bE.copy(bt),bt.getPositionFromMatrix(bX.target.matrixWorld),bE.sub(bt),bE.normalize(),bL[bO]=bE.x,bL[bO+1]=bE.y,bL[bO+2]=bE.z,bG[bP]=Math.cos(bX.angle),bH[bP]=bX.exponent,bP+=1)):bX instanceof THREE.HemisphereLight&&(N+=1,bX.visible&&(bE.getPositionFromMatrix(bX.matrixWorld),bE.normalize(),0===bE.x&&0===bE.y&&0===bE.z||(bV=3*z,F[bV]=bE.x,F[bV+1]=bE.y,F[bV+2]=bE.z,bY=bX.color,bX=bX.groundColor,aZ.gammaInput?(bW*=bW,ba(bb,bV,bY,bW),ba(bN,bV,bX,bW)):(aj(bb,bV,bY,bW),aj(bN,bV,bX,bW)),z+=1))))}b8=3*M;for(b5=Math.max(bT.length,3*k);b8<b5;b8++){bT[b8]=0}b8=3*B;for(b5=Math.max(bR.length,3*J);b8<b5;b8++){bR[b8]=0}b8=3*bP;for(b5=Math.max(bM.length,3*I);b8<b5;b8++){bM[b8]=0}b8=3*z;for(b5=Math.max(bb.length,3*N);b8<b5;b8++){bb[b8]=0}b8=3*z;for(b5=Math.max(bN.length,3*N);b8<b5;b8++){bN[b8]=0}bU.directional.length=M;bU.point.length=B;bU.spot.length=bP;bU.hemi.length=z;bU.ambient[0]=b1;bU.ambient[1]=b0;bU.ambient[2]=bZ;aY=!1}b8=by;b2.ambientLightColor.value=b8.ambient;b2.directionalLightColor.value=b8.directional.colors;b2.directionalLightDirection.value=b8.directional.positions;b2.pointLightColor.value=b8.point.colors;b2.pointLightPosition.value=b8.point.positions;b2.pointLightDistance.value=b8.point.distances;b2.spotLightColor.value=b8.spot.colors;b2.spotLightPosition.value=b8.spot.positions;b2.spotLightDistance.value=b8.spot.distances;b2.spotLightDirection.value=b8.spot.directions;b2.spotLightAngleCos.value=b8.spot.anglesCos;b2.spotLightExponent.value=b8.spot.exponents;b2.hemisphereLightSkyColor.value=b8.hemi.skyColors;b2.hemisphereLightGroundColor.value=b8.hemi.groundColors;b2.hemisphereLightDirection.value=b8.hemi.positions}if(b7 instanceof THREE.MeshBasicMaterial||b7 instanceof THREE.MeshLambertMaterial||b7 instanceof THREE.MeshPhongMaterial){b2.opacity.value=b7.opacity;aZ.gammaInput?b2.diffuse.value.copyGammaToLinear(b7.color):b2.diffuse.value=b7.color;b2.map.value=b7.map;b2.lightMap.value=b7.lightMap;b2.specularMap.value=b7.specularMap;b7.bumpMap&&(b2.bumpMap.value=b7.bumpMap,b2.bumpScale.value=b7.bumpScale);b7.normalMap&&(b2.normalMap.value=b7.normalMap,b2.normalScale.value.copy(b7.normalScale));var ab;b7.map?ab=b7.map:b7.specularMap?ab=b7.specularMap:b7.normalMap?ab=b7.normalMap:b7.bumpMap&&(ab=b7.bumpMap);void 0!==ab&&(b8=ab.offset,ab=ab.repeat,b2.offsetRepeat.value.set(b8.x,b8.y,ab.x,ab.y));b2.envMap.value=b7.envMap;b2.flipEnvMap.value=b7.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;b2.reflectivity.value=b7.reflectivity;b2.refractionRatio.value=b7.refractionRatio;b2.combine.value=b7.combine;b2.useRefract.value=b7.envMap&&b7.envMap.mapping instanceof THREE.CubeRefractionMapping}b7 instanceof THREE.LineBasicMaterial?(b2.diffuse.value=b7.color,b2.opacity.value=b7.opacity):b7 instanceof THREE.LineDashedMaterial?(b2.diffuse.value=b7.color,b2.opacity.value=b7.opacity,b2.dashSize.value=b7.dashSize,b2.totalSize.value=b7.dashSize+b7.gapSize,b2.scale.value=b7.scale):b7 instanceof THREE.ParticleBasicMaterial?(b2.psColor.value=b7.color,b2.opacity.value=b7.opacity,b2.size.value=b7.size,b2.scale.value=a0.height/2,b2.map.value=b7.map):b7 instanceof THREE.MeshPhongMaterial?(b2.shininess.value=b7.shininess,aZ.gammaInput?(b2.ambient.value.copyGammaToLinear(b7.ambient),b2.emissive.value.copyGammaToLinear(b7.emissive),b2.specular.value.copyGammaToLinear(b7.specular)):(b2.ambient.value=b7.ambient,b2.emissive.value=b7.emissive,b2.specular.value=b7.specular),b7.wrapAround&&b2.wrapRGB.value.copy(b7.wrapRGB)):b7 instanceof THREE.MeshLambertMaterial?(aZ.gammaInput?(b2.ambient.value.copyGammaToLinear(b7.ambient),b2.emissive.value.copyGammaToLinear(b7.emissive)):(b2.ambient.value=b7.ambient,b2.emissive.value=b7.emissive),b7.wrapAround&&b2.wrapRGB.value.copy(b7.wrapRGB)):b7 instanceof THREE.MeshDepthMaterial?(b2.mNear.value=ca.near,b2.mFar.value=ca.far,b2.opacity.value=b7.opacity):b7 instanceof THREE.MeshNormalMaterial&&(b2.opacity.value=b7.opacity);if(b6.receiveShadow&&!b7._shadowPass&&b2.shadowMatrix){b8=ab=0;for(b5=b9.length;b8<b5;b8++){if(b1=b9[b8],b1.castShadow&&(b1 instanceof THREE.SpotLight||b1 instanceof THREE.DirectionalLight&&!b1.shadowCascade)){b2.shadowMap.value[ab]=b1.shadowMap,b2.shadowMapSize.value[ab]=b1.shadowMapSize,b2.shadowMatrix.value[ab]=b1.shadowMatrix,b2.shadowDarkness.value[ab]=b1.shadowDarkness,b2.shadowBias.value[ab]=b1.shadowBias,ab++}}}b9=b7.uniformsList;b2=0;for(ab=b9.length;b2<ab;b2++){if(b5=b4.uniforms[b9[b2][1]]){if(b8=b9[b2][0],b0=b8.type,b1=b8.value,"i"===b0){az.uniform1i(b5,b1)}else{if("f"===b0){az.uniform1f(b5,b1)}else{if("v2"===b0){az.uniform2f(b5,b1.x,b1.y)}else{if("v3"===b0){az.uniform3f(b5,b1.x,b1.y,b1.z)}else{if("v4"===b0){az.uniform4f(b5,b1.x,b1.y,b1.z,b1.w)}else{if("c"===b0){az.uniform3f(b5,b1.r,b1.g,b1.b)}else{if("iv1"===b0){az.uniform1iv(b5,b1)}else{if("iv"===b0){az.uniform3iv(b5,b1)}else{if("fv1"===b0){az.uniform1fv(b5,b1)}else{if("fv"===b0){az.uniform3fv(b5,b1)}else{if("v2v"===b0){void 0===b8._array&&(b8._array=new Float32Array(2*b1.length));b0=0;for(bZ=b1.length;b0<bZ;b0++){bU=2*b0,b8._array[bU]=b1[b0].x,b8._array[bU+1]=b1[b0].y}az.uniform2fv(b5,b8._array)}else{if("v3v"===b0){void 0===b8._array&&(b8._array=new Float32Array(3*b1.length));b0=0;for(bZ=b1.length;b0<bZ;b0++){bU=3*b0,b8._array[bU]=b1[b0].x,b8._array[bU+1]=b1[b0].y,b8._array[bU+2]=b1[b0].z}az.uniform3fv(b5,b8._array)}else{if("v4v"===b0){void 0===b8._array&&(b8._array=new Float32Array(4*b1.length));b0=0;for(bZ=b1.length;b0<bZ;b0++){bU=4*b0,b8._array[bU]=b1[b0].x,b8._array[bU+1]=b1[b0].y,b8._array[bU+2]=b1[b0].z,b8._array[bU+3]=b1[b0].w}az.uniform4fv(b5,b8._array)}else{if("m4"===b0){void 0===b8._array&&(b8._array=new Float32Array(16)),b1.flattenToArray(b8._array),az.uniformMatrix4fv(b5,!1,b8._array)}else{if("m4v"===b0){void 0===b8._array&&(b8._array=new Float32Array(16*b1.length));b0=0;for(bZ=b1.length;b0<bZ;b0++){b1[b0].flattenToArrayOffset(b8._array,16*b0)}az.uniformMatrix4fv(b5,!1,b8._array)}else{if("t"===b0){if(bU=b1,b1=a4(),az.uniform1i(b5,b1),bU){if(bU.image instanceof Array&&6===bU.image.length){if(b8=bU,b5=b1,6===b8.image.length){if(b8.needsUpdate){b8.image.__webglTextureCube||(b8.image.__webglTextureCube=az.createTexture(),aZ.info.memory.textures++);az.activeTexture(az.TEXTURE0+b5);az.bindTexture(az.TEXTURE_CUBE_MAP,b8.image.__webglTextureCube);az.pixelStorei(az.UNPACK_FLIP_Y_WEBGL,b8.flipY);b5=b8 instanceof THREE.CompressedTexture;b1=[];for(b0=0;6>b0;b0++){aZ.autoScaleCubemaps&&!b5?(bZ=b1,bU=b0,bT=b8.image[b0],bR=a9,bT.width<=bR&&bT.height<=bR||(bQ=Math.max(bT.width,bT.height),bS=Math.floor(bT.width*bR/bQ),bR=Math.floor(bT.height*bR/bQ),bQ=document.createElement("canvas"),bQ.width=bS,bQ.height=bR,bQ.getContext("2d").drawImage(bT,0,0,bT.width,bT.height,0,0,bS,bR),bT=bQ),bZ[bU]=bT):b1[b0]=b8.image[b0]}b0=b1[0];bZ=0===(b0.width&b0.width-1)&&0===(b0.height&b0.height-1);bU=a6(b8.format);bT=a6(b8.type);bf(az.TEXTURE_CUBE_MAP,b8,bZ);for(b0=0;6>b0;b0++){if(b5){bR=b1[b0].mipmaps;bQ=0;for(bK=bR.length;bQ<bK;bQ++){bS=bR[bQ],az.compressedTexImage2D(az.TEXTURE_CUBE_MAP_POSITIVE_X+b0,bQ,bU,bS.width,bS.height,0,bS.data)}}else{az.texImage2D(az.TEXTURE_CUBE_MAP_POSITIVE_X+b0,0,bU,bU,bT,b1[b0])}}b8.generateMipmaps&&bZ&&az.generateMipmap(az.TEXTURE_CUBE_MAP);b8.needsUpdate=!1;if(b8.onUpdate){b8.onUpdate()}}else{az.activeTexture(az.TEXTURE0+b5),az.bindTexture(az.TEXTURE_CUBE_MAP,b8.image.__webglTextureCube)}}}else{bU instanceof THREE.WebGLRenderTargetCube?(b8=bU,az.activeTexture(az.TEXTURE0+b1),az.bindTexture(az.TEXTURE_CUBE_MAP,b8.__webglTexture)):aZ.setTexture(bU,b1)}}}else{if("tv"===b0){void 0===b8._array&&(b8._array=[]);b0=0;for(bZ=b8.value.length;b0<bZ;b0++){b8._array[b0]=a4()}az.uniform1iv(b5,b8._array);b0=0;for(bZ=b8.value.length;b0<bZ;b0++){bU=b8.value[b0],b1=b8._array[b0],bU&&aZ.setTexture(bU,b1)}}}}}}}}}}}}}}}}}}}}if((b7 instanceof THREE.ShaderMaterial||b7 instanceof THREE.MeshPhongMaterial||b7.envMap)&&null!==b3.cameraPosition){bt.getPositionFromMatrix(ca.matrixWorld),az.uniform3f(b3.cameraPosition,bt.x,bt.y,bt.z)}(b7 instanceof THREE.MeshPhongMaterial||b7 instanceof THREE.MeshLambertMaterial||b7 instanceof THREE.ShaderMaterial||b7.skinning)&&null!==b3.viewMatrix&&az.uniformMatrix4fv(b3.viewMatrix,!1,ca.matrixWorldInverse.elements)}az.uniformMatrix4fv(b3.modelViewMatrix,!1,b6._modelViewMatrix.elements);b3.normalMatrix&&az.uniformMatrix3fv(b3.normalMatrix,!1,b6._normalMatrix.elements);null!==b3.modelMatrix&&az.uniformMatrix4fv(b3.modelMatrix,!1,b6.matrixWorld.elements);return b4}function a4(){var b=bo;b>=at&&console.warn("WebGLRenderer: trying to use "+b+" texture units while this GPU supports only "+at);bo+=1;return b}function ba(f,e,h,g){f[e]=h.r*h.r*g;f[e+1]=h.g*h.g*g;f[e+2]=h.b*h.b*g}function aj(f,e,h,g){f[e]=h.r*g;f[e+1]=h.g*g;f[e+2]=h.b*g}function a7(b){b!==o&&(az.lineWidth(b),o=b)}function a2(e,d,f){X!==e&&(e?az.enable(az.POLYGON_OFFSET_FILL):az.disable(az.POLYGON_OFFSET_FILL),X=e);if(e&&(T!==d||bA!==f)){az.polygonOffset(d,f),T=d,bA=f}}function a8(e){for(var e=e.split("\n"),d=0,f=e.length;d<f;d++){e[d]=d+1+": "+e[d]}return e.join("\n")}function a1(e,d){var f;"fragment"===e?f=az.createShader(az.FRAGMENT_SHADER):"vertex"===e&&(f=az.createShader(az.VERTEX_SHADER));az.shaderSource(f,d);az.compileShader(f);return !az.getShaderParameter(f,az.COMPILE_STATUS)?(console.error(az.getShaderInfoLog(f)),console.error(a8(d)),null):f}function bf(e,d,f){f?(az.texParameteri(e,az.TEXTURE_WRAP_S,a6(d.wrapS)),az.texParameteri(e,az.TEXTURE_WRAP_T,a6(d.wrapT)),az.texParameteri(e,az.TEXTURE_MAG_FILTER,a6(d.magFilter)),az.texParameteri(e,az.TEXTURE_MIN_FILTER,a6(d.minFilter))):(az.texParameteri(e,az.TEXTURE_WRAP_S,az.CLAMP_TO_EDGE),az.texParameteri(e,az.TEXTURE_WRAP_T,az.CLAMP_TO_EDGE),az.texParameteri(e,az.TEXTURE_MAG_FILTER,be(d.magFilter)),az.texParameteri(e,az.TEXTURE_MIN_FILTER,be(d.minFilter)));if(bB&&d.type!==THREE.FloatType&&(1<d.anisotropy||d.__oldAnisotropy)){az.texParameterf(e,bB.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(d.anisotropy,Y)),d.__oldAnisotropy=d.anisotropy}}function aU(d,c){az.bindRenderbuffer(az.RENDERBUFFER,d);c.depthBuffer&&!c.stencilBuffer?(az.renderbufferStorage(az.RENDERBUFFER,az.DEPTH_COMPONENT16,c.width,c.height),az.framebufferRenderbuffer(az.FRAMEBUFFER,az.DEPTH_ATTACHMENT,az.RENDERBUFFER,d)):c.depthBuffer&&c.stencilBuffer?(az.renderbufferStorage(az.RENDERBUFFER,az.DEPTH_STENCIL,c.width,c.height),az.framebufferRenderbuffer(az.FRAMEBUFFER,az.DEPTH_STENCIL_ATTACHMENT,az.RENDERBUFFER,d)):az.renderbufferStorage(az.RENDERBUFFER,az.RGBA4,c.width,c.height)}function be(b){return b===THREE.NearestFilter||b===THREE.NearestMipMapNearestFilter||b===THREE.NearestMipMapLinearFilter?az.NEAREST:az.LINEAR}function a6(b){if(b===THREE.RepeatWrapping){return az.REPEAT}if(b===THREE.ClampToEdgeWrapping){return az.CLAMP_TO_EDGE}if(b===THREE.MirroredRepeatWrapping){return az.MIRRORED_REPEAT}if(b===THREE.NearestFilter){return az.NEAREST}if(b===THREE.NearestMipMapNearestFilter){return az.NEAREST_MIPMAP_NEAREST}if(b===THREE.NearestMipMapLinearFilter){return az.NEAREST_MIPMAP_LINEAR}if(b===THREE.LinearFilter){return az.LINEAR}if(b===THREE.LinearMipMapNearestFilter){return az.LINEAR_MIPMAP_NEAREST}if(b===THREE.LinearMipMapLinearFilter){return az.LINEAR_MIPMAP_LINEAR}if(b===THREE.UnsignedByteType){return az.UNSIGNED_BYTE}if(b===THREE.UnsignedShort4444Type){return az.UNSIGNED_SHORT_4_4_4_4}if(b===THREE.UnsignedShort5551Type){return az.UNSIGNED_SHORT_5_5_5_1}if(b===THREE.UnsignedShort565Type){return az.UNSIGNED_SHORT_5_6_5}if(b===THREE.ByteType){return az.BYTE}if(b===THREE.ShortType){return az.SHORT}if(b===THREE.UnsignedShortType){return az.UNSIGNED_SHORT}if(b===THREE.IntType){return az.INT}if(b===THREE.UnsignedIntType){return az.UNSIGNED_INT}if(b===THREE.FloatType){return az.FLOAT}if(b===THREE.AlphaFormat){return az.ALPHA}if(b===THREE.RGBFormat){return az.RGB}if(b===THREE.RGBAFormat){return az.RGBA}if(b===THREE.LuminanceFormat){return az.LUMINANCE}if(b===THREE.LuminanceAlphaFormat){return az.LUMINANCE_ALPHA}if(b===THREE.AddEquation){return az.FUNC_ADD}if(b===THREE.SubtractEquation){return az.FUNC_SUBTRACT}if(b===THREE.ReverseSubtractEquation){return az.FUNC_REVERSE_SUBTRACT}if(b===THREE.ZeroFactor){return az.ZERO}if(b===THREE.OneFactor){return az.ONE}if(b===THREE.SrcColorFactor){return az.SRC_COLOR}if(b===THREE.OneMinusSrcColorFactor){return az.ONE_MINUS_SRC_COLOR}if(b===THREE.SrcAlphaFactor){return az.SRC_ALPHA}if(b===THREE.OneMinusSrcAlphaFactor){return az.ONE_MINUS_SRC_ALPHA}if(b===THREE.DstAlphaFactor){return az.DST_ALPHA}if(b===THREE.OneMinusDstAlphaFactor){return az.ONE_MINUS_DST_ALPHA}if(b===THREE.DstColorFactor){return az.DST_COLOR}if(b===THREE.OneMinusDstColorFactor){return az.ONE_MINUS_DST_COLOR}if(b===THREE.SrcAlphaSaturateFactor){return az.SRC_ALPHA_SATURATE}if(void 0!==aS){if(b===THREE.RGB_S3TC_DXT1_Format){return aS.COMPRESSED_RGB_S3TC_DXT1_EXT}if(b===THREE.RGBA_S3TC_DXT1_Format){return aS.COMPRESSED_RGBA_S3TC_DXT1_EXT}if(b===THREE.RGBA_S3TC_DXT3_Format){return aS.COMPRESSED_RGBA_S3TC_DXT3_EXT}if(b===THREE.RGBA_S3TC_DXT5_Format){return aS.COMPRESSED_RGBA_S3TC_DXT5_EXT}}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);var aO=aO||{},a0=void 0!==aO.canvas?aO.canvas:document.createElement("canvas"),aW=void 0!==aO.precision?aO.precision:"highp",w=void 0!==aO.alpha?aO.alpha:!0,S=void 0!==aO.premultipliedAlpha?aO.premultipliedAlpha:!0,bF=void 0!==aO.antialias?aO.antialias:!1,bh=void 0!==aO.stencil?aO.stencil:!0,aw=void 0!==aO.preserveDrawingBuffer?aO.preserveDrawingBuffer:!1,ac=new THREE.Color(0),bd=0;void 0!==aO.clearColor&&(console.warn("DEPRECATED: clearColor in WebGLRenderer constructor parameters is being removed. Use .setClearColor() instead."),ac.setHex(aO.clearColor));void 0!==aO.clearAlpha&&(console.warn("DEPRECATED: clearAlpha in WebGLRenderer constructor parameters is being removed. Use .setClearColor() instead."),bd=aO.clearAlpha);this.domElement=a0;this.context=null;this.devicePixelRatio=void 0!==aO.devicePixelRatio?aO.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1;this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1;this.shadowMapAutoUpdate=!0;this.shadowMapType=THREE.PCFShadowMap;this.shadowMapCullFace=THREE.CullFaceFront;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.renderPluginsPre=[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var aZ=this,bz=[],am=0,bl=null,bx=null,ah=-1,Q=null,ag=null,aR=0,bo=0,aT=-1,aa=-1,bC=-1,a5=-1,aC=-1,ai=-1,D=-1,aK=-1,X=null,T=null,bA=null,o=null,br=0,bs=0,af=0,bi=0,bu=0,bj=0,bv={},aP=new THREE.Frustum,aL=new THREE.Matrix4,bg=new THREE.Matrix4,bt=new THREE.Vector3,bE=new THREE.Vector3,aY=!0,by={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},az,bn,bk,bB,aS;try{if(!(az=a0.getContext("experimental-webgl",{alpha:w,premultipliedAlpha:S,antialias:bF,stencil:bh,preserveDrawingBuffer:aw}))){throw"Error creating WebGL context."}}catch(a3){console.error(a3)}bn=az.getExtension("OES_texture_float");bk=az.getExtension("OES_standard_derivatives");bB=az.getExtension("EXT_texture_filter_anisotropic")||az.getExtension("MOZ_EXT_texture_filter_anisotropic")||az.getExtension("WEBKIT_EXT_texture_filter_anisotropic");aS=az.getExtension("WEBGL_compressed_texture_s3tc")||az.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||az.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");bn||console.log("THREE.WebGLRenderer: Float textures not supported.");bk||console.log("THREE.WebGLRenderer: Standard derivatives not supported.");bB||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.");aS||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.");void 0===az.getShaderPrecisionFormat&&(az.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}});az.clearColor(0,0,0,1);az.clearDepth(1);az.clearStencil(0);az.enable(az.DEPTH_TEST);az.depthFunc(az.LEQUAL);az.frontFace(az.CCW);az.cullFace(az.BACK);az.enable(az.CULL_FACE);az.enable(az.BLEND);az.blendEquation(az.FUNC_ADD);az.blendFunc(az.SRC_ALPHA,az.ONE_MINUS_SRC_ALPHA);az.clearColor(ac.r,ac.g,ac.b,bd);this.context=az;var at=az.getParameter(az.MAX_TEXTURE_IMAGE_UNITS),bp=az.getParameter(az.MAX_VERTEX_TEXTURE_IMAGE_UNITS);az.getParameter(az.MAX_TEXTURE_SIZE);var a9=az.getParameter(az.MAX_CUBE_MAP_TEXTURE_SIZE),Y=bB?az.getParameter(bB.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,v=0<bp,aQ=v&&bn;aS&&az.getParameter(az.COMPRESSED_TEXTURE_FORMATS);var O=az.getShaderPrecisionFormat(az.VERTEX_SHADER,az.HIGH_FLOAT),bD=az.getShaderPrecisionFormat(az.VERTEX_SHADER,az.MEDIUM_FLOAT);az.getShaderPrecisionFormat(az.VERTEX_SHADER,az.LOW_FLOAT);var bq=az.getShaderPrecisionFormat(az.FRAGMENT_SHADER,az.HIGH_FLOAT),ae=az.getShaderPrecisionFormat(az.FRAGMENT_SHADER,az.MEDIUM_FLOAT);az.getShaderPrecisionFormat(az.FRAGMENT_SHADER,az.LOW_FLOAT);az.getShaderPrecisionFormat(az.VERTEX_SHADER,az.HIGH_INT);az.getShaderPrecisionFormat(az.VERTEX_SHADER,az.MEDIUM_INT);az.getShaderPrecisionFormat(az.VERTEX_SHADER,az.LOW_INT);az.getShaderPrecisionFormat(az.FRAGMENT_SHADER,az.HIGH_INT);az.getShaderPrecisionFormat(az.FRAGMENT_SHADER,az.MEDIUM_INT);az.getShaderPrecisionFormat(az.FRAGMENT_SHADER,az.LOW_INT);var aH=0<O.precision&&0<bq.precision,bw=0<bD.precision&&0<ae.precision;"highp"===aW&&!aH&&(bw?(aW="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(aW="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp")));"mediump"===aW&&!bw&&(aW="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp"));this.getContext=function(){return az};this.supportsVertexTextures=function(){return v};this.supportsFloatTextures=function(){return bn};this.supportsStandardDerivatives=function(){return bk};this.supportsCompressedTextureS3TC=function(){return aS};this.getMaxAnisotropy=function(){return Y};this.getPrecision=function(){return aW};this.setSize=function(e,d,f){a0.width=e*this.devicePixelRatio;a0.height=d*this.devicePixelRatio;1!==this.devicePixelRatio&&!1!==f&&(a0.style.width=e+"px",a0.style.height=d+"px");this.setViewport(0,0,a0.width,a0.height)};this.setViewport=function(f,e,h,g){br=void 0!==f?f:0;bs=void 0!==e?e:0;af=void 0!==h?h:a0.width;bi=void 0!==g?g:a0.height;az.viewport(br,bs,af,bi)};this.setScissor=function(f,e,h,g){az.scissor(f,e,h,g)};this.enableScissorTest=function(b){b?az.enable(az.SCISSOR_TEST):az.disable(az.SCISSOR_TEST)};this.setClearColor=function(d,c){ac.set(d);bd=void 0!==c?c:1;az.clearColor(ac.r,ac.g,ac.b,bd)};this.setClearColorHex=function(d,c){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead.");this.setClearColor(d,c)};this.getClearColor=function(){return ac};this.getClearAlpha=function(){return bd};this.clear=function(f,e,h){var g=0;if(void 0===f||f){g|=az.COLOR_BUFFER_BIT}if(void 0===e||e){g|=az.DEPTH_BUFFER_BIT}if(void 0===h||h){g|=az.STENCIL_BUFFER_BIT}az.clear(g)};this.clearTarget=function(f,e,h,g){this.setRenderTarget(f);this.clear(e,h,g)};this.addPostPlugin=function(b){b.init(this);this.renderPluginsPost.push(b)};this.addPrePlugin=function(b){b.init(this);this.renderPluginsPre.push(b)};this.updateShadowMap=function(d,c){bl=null;ah=Q=aK=D=bC=-1;aY=!0;aa=aT=-1;this.shadowMapPlugin.update(d,c)};var bm=function(b){b=b.target;b.removeEventListener("dispose",bm);b.__webglInit=void 0;void 0!==b.__webglVertexBuffer&&az.deleteBuffer(b.__webglVertexBuffer);void 0!==b.__webglNormalBuffer&&az.deleteBuffer(b.__webglNormalBuffer);void 0!==b.__webglTangentBuffer&&az.deleteBuffer(b.__webglTangentBuffer);void 0!==b.__webglColorBuffer&&az.deleteBuffer(b.__webglColorBuffer);void 0!==b.__webglUVBuffer&&az.deleteBuffer(b.__webglUVBuffer);void 0!==b.__webglUV2Buffer&&az.deleteBuffer(b.__webglUV2Buffer);void 0!==b.__webglSkinIndicesBuffer&&az.deleteBuffer(b.__webglSkinIndicesBuffer);void 0!==b.__webglSkinWeightsBuffer&&az.deleteBuffer(b.__webglSkinWeightsBuffer);void 0!==b.__webglFaceBuffer&&az.deleteBuffer(b.__webglFaceBuffer);void 0!==b.__webglLineBuffer&&az.deleteBuffer(b.__webglLineBuffer);void 0!==b.__webglLineDistanceBuffer&&az.deleteBuffer(b.__webglLineDistanceBuffer);if(void 0!==b.geometryGroups){for(var j in b.geometryGroups){var i=b.geometryGroups[j];if(void 0!==i.numMorphTargets){for(var h=0,g=i.numMorphTargets;h<g;h++){az.deleteBuffer(i.__webglMorphTargetsBuffers[h])}}if(void 0!==i.numMorphNormals){h=0;for(g=i.numMorphNormals;h<g;h++){az.deleteBuffer(i.__webglMorphNormalsBuffers[h])}}aN(i)}}aN(b);aZ.info.memory.geometries--},aF=function(b){b=b.target;b.removeEventListener("dispose",aF);b.image&&b.image.__webglTextureCube?az.deleteTexture(b.image.__webglTextureCube):b.__webglInit&&(b.__webglInit=!1,az.deleteTexture(b.__webglTexture));aZ.info.memory.textures--},aV=function(d){d=d.target;d.removeEventListener("dispose",aV);if(d&&d.__webglTexture){if(az.deleteTexture(d.__webglTexture),d instanceof THREE.WebGLRenderTargetCube){for(var c=0;6>c;c++){az.deleteFramebuffer(d.__webglFramebuffer[c]),az.deleteRenderbuffer(d.__webglRenderbuffer[c])}}else{az.deleteFramebuffer(d.__webglFramebuffer),az.deleteRenderbuffer(d.__webglRenderbuffer)}}aZ.info.memory.textures--},aX=function(b){b=b.target;b.removeEventListener("dispose",aX);ad(b)},ad=function(g){var f=g.program;if(void 0!==f){g.program=void 0;var j,i,h=!1,g=0;for(j=bz.length;g<j;g++){if(i=bz[g],i.program===f){i.usedTimes--;0===i.usedTimes&&(h=!0);break}}if(!0===h){h=[];g=0;for(j=bz.length;g<j;g++){i=bz[g],i.program!==f&&h.push(i)}bz=h;az.deleteProgram(f);aZ.info.memory.programs--}}};this.renderBufferImmediate=function(H,G,F){H.hasPositions&&!H.__webglVertexBuffer&&(H.__webglVertexBuffer=az.createBuffer());H.hasNormals&&!H.__webglNormalBuffer&&(H.__webglNormalBuffer=az.createBuffer());H.hasUvs&&!H.__webglUvBuffer&&(H.__webglUvBuffer=az.createBuffer());H.hasColors&&!H.__webglColorBuffer&&(H.__webglColorBuffer=az.createBuffer());H.hasPositions&&(az.bindBuffer(az.ARRAY_BUFFER,H.__webglVertexBuffer),az.bufferData(az.ARRAY_BUFFER,H.positionArray,az.DYNAMIC_DRAW),az.enableVertexAttribArray(G.attributes.position),az.vertexAttribPointer(G.attributes.position,3,az.FLOAT,!1,0,0));if(H.hasNormals){az.bindBuffer(az.ARRAY_BUFFER,H.__webglNormalBuffer);if(F.shading===THREE.FlatShading){var E,C,B,A,z,y,x,u,r,t,s,k=3*H.count;for(s=0;s<k;s+=9){t=H.normalArray,E=t[s],C=t[s+1],B=t[s+2],A=t[s+3],y=t[s+4],u=t[s+5],z=t[s+6],x=t[s+7],r=t[s+8],E=(E+A+z)/3,C=(C+y+x)/3,B=(B+u+r)/3,t[s]=E,t[s+1]=C,t[s+2]=B,t[s+3]=E,t[s+4]=C,t[s+5]=B,t[s+6]=E,t[s+7]=C,t[s+8]=B}}az.bufferData(az.ARRAY_BUFFER,H.normalArray,az.DYNAMIC_DRAW);az.enableVertexAttribArray(G.attributes.normal);az.vertexAttribPointer(G.attributes.normal,3,az.FLOAT,!1,0,0)}H.hasUvs&&F.map&&(az.bindBuffer(az.ARRAY_BUFFER,H.__webglUvBuffer),az.bufferData(az.ARRAY_BUFFER,H.uvArray,az.DYNAMIC_DRAW),az.enableVertexAttribArray(G.attributes.uv),az.vertexAttribPointer(G.attributes.uv,2,az.FLOAT,!1,0,0));H.hasColors&&F.vertexColors!==THREE.NoColors&&(az.bindBuffer(az.ARRAY_BUFFER,H.__webglColorBuffer),az.bufferData(az.ARRAY_BUFFER,H.colorArray,az.DYNAMIC_DRAW),az.enableVertexAttribArray(G.attributes.color),az.vertexAttribPointer(G.attributes.color,3,az.FLOAT,!1,0,0));az.drawArrays(az.TRIANGLES,0,H.count);H.count=0};this.renderBufferDirect=function(A,z,y,x,u,t){if(!1!==x.visible){var s,r,q;s=bc(A,z,y,x,t);A=s.attributes;z=u.attributes;y=!1;s=16777215*u.id+2*s.id+(x.wireframe?1:0);s!==Q&&(Q=s,y=!0);y&&aB();if(t instanceof THREE.Mesh){if(x=z.index){u=u.offsets;1<u.length&&(y=!0);for(var h=0,k=u.length;h<k;h++){var i=u[h].index;if(y){for(r in z){"index"!==r&&(s=A[r],t=z[r],q=t.itemSize,0<=s&&(az.bindBuffer(az.ARRAY_BUFFER,t.buffer),aD(s),az.vertexAttribPointer(s,q,az.FLOAT,!1,0,4*i*q)))}az.bindBuffer(az.ELEMENT_ARRAY_BUFFER,x.buffer)}az.drawElements(az.TRIANGLES,u[h].count,az.UNSIGNED_SHORT,2*u[h].start);aZ.info.render.calls++;aZ.info.render.vertices+=u[h].count;aZ.info.render.faces+=u[h].count/3}}else{if(y){for(r in z){"index"!==r&&(s=A[r],t=z[r],q=t.itemSize,0<=s&&(az.bindBuffer(az.ARRAY_BUFFER,t.buffer),aD(s),az.vertexAttribPointer(s,q,az.FLOAT,!1,0,0)))}}r=u.attributes.position;az.drawArrays(az.TRIANGLES,0,r.numItems/3);aZ.info.render.calls++;aZ.info.render.vertices+=r.numItems/3;aZ.info.render.faces+=r.numItems/3/3}}else{if(t instanceof THREE.ParticleSystem){if(y){for(r in z){s=A[r],t=z[r],q=t.itemSize,0<=s&&(az.bindBuffer(az.ARRAY_BUFFER,t.buffer),aD(s),az.vertexAttribPointer(s,q,az.FLOAT,!1,0,0))}r=z.position;az.drawArrays(az.POINTS,0,r.numItems/3);aZ.info.render.calls++;aZ.info.render.points+=r.numItems/3}}else{if(t instanceof THREE.Line&&y){for(r in z){s=A[r],t=z[r],q=t.itemSize,0<=s&&(az.bindBuffer(az.ARRAY_BUFFER,t.buffer),aD(s),az.vertexAttribPointer(s,q,az.FLOAT,!1,0,0))}a7(x.linewidth);r=z.position;az.drawArrays(az.LINE_STRIP,0,r.numItems/3);aZ.info.render.calls++;aZ.info.render.points+=r.numItems}}}}};this.renderBuffer=function(y,x,u,t,s,r){if(!1!==t.visible){var q,m,u=bc(y,x,u,t,r),y=u.attributes,x=!1,u=16777215*s.id+2*u.id+(t.wireframe?1:0);u!==Q&&(Q=u,x=!0);x&&aB();if(!t.morphTargets&&0<=y.position){x&&(az.bindBuffer(az.ARRAY_BUFFER,s.__webglVertexBuffer),aD(y.position),az.vertexAttribPointer(y.position,3,az.FLOAT,!1,0,0))}else{if(r.morphTargetBase){u=t.program.attributes;-1!==r.morphTargetBase&&0<=u.position?(az.bindBuffer(az.ARRAY_BUFFER,s.__webglMorphTargetsBuffers[r.morphTargetBase]),aD(u.position),az.vertexAttribPointer(u.position,3,az.FLOAT,!1,0,0)):0<=u.position&&(az.bindBuffer(az.ARRAY_BUFFER,s.__webglVertexBuffer),aD(u.position),az.vertexAttribPointer(u.position,3,az.FLOAT,!1,0,0));if(r.morphTargetForcedOrder.length){var k=0;m=r.morphTargetForcedOrder;for(q=r.morphTargetInfluences;k<t.numSupportedMorphTargets&&k<m.length;){0<=u["morphTarget"+k]&&(az.bindBuffer(az.ARRAY_BUFFER,s.__webglMorphTargetsBuffers[m[k]]),aD(u["morphTarget"+k]),az.vertexAttribPointer(u["morphTarget"+k],3,az.FLOAT,!1,0,0)),0<=u["morphNormal"+k]&&t.morphNormals&&(az.bindBuffer(az.ARRAY_BUFFER,s.__webglMorphNormalsBuffers[m[k]]),aD(u["morphNormal"+k]),az.vertexAttribPointer(u["morphNormal"+k],3,az.FLOAT,!1,0,0)),r.__webglMorphTargetInfluences[k]=q[m[k]],k++}}else{m=[];q=r.morphTargetInfluences;var h,i=q.length;for(h=0;h<i;h++){k=q[h],0<k&&m.push([k,h])}m.length>t.numSupportedMorphTargets?(m.sort(ax),m.length=t.numSupportedMorphTargets):m.length>t.numSupportedMorphNormals?m.sort(ax):0===m.length&&m.push([0,0]);for(k=0;k<t.numSupportedMorphTargets;){m[k]?(h=m[k][1],0<=u["morphTarget"+k]&&(az.bindBuffer(az.ARRAY_BUFFER,s.__webglMorphTargetsBuffers[h]),aD(u["morphTarget"+k]),az.vertexAttribPointer(u["morphTarget"+k],3,az.FLOAT,!1,0,0)),0<=u["morphNormal"+k]&&t.morphNormals&&(az.bindBuffer(az.ARRAY_BUFFER,s.__webglMorphNormalsBuffers[h]),aD(u["morphNormal"+k]),az.vertexAttribPointer(u["morphNormal"+k],3,az.FLOAT,!1,0,0)),r.__webglMorphTargetInfluences[k]=q[h]):r.__webglMorphTargetInfluences[k]=0,k++}}null!==t.program.uniforms.morphTargetInfluences&&az.uniform1fv(t.program.uniforms.morphTargetInfluences,r.__webglMorphTargetInfluences)}}if(x){if(s.__webglCustomAttributesList){q=0;for(m=s.__webglCustomAttributesList.length;q<m;q++){u=s.__webglCustomAttributesList[q],0<=y[u.buffer.belongsToAttribute]&&(az.bindBuffer(az.ARRAY_BUFFER,u.buffer),aD(y[u.buffer.belongsToAttribute]),az.vertexAttribPointer(y[u.buffer.belongsToAttribute],u.size,az.FLOAT,!1,0,0))}}0<=y.color&&(az.bindBuffer(az.ARRAY_BUFFER,s.__webglColorBuffer),aD(y.color),az.vertexAttribPointer(y.color,3,az.FLOAT,!1,0,0));0<=y.normal&&(az.bindBuffer(az.ARRAY_BUFFER,s.__webglNormalBuffer),aD(y.normal),az.vertexAttribPointer(y.normal,3,az.FLOAT,!1,0,0));0<=y.tangent&&(az.bindBuffer(az.ARRAY_BUFFER,s.__webglTangentBuffer),aD(y.tangent),az.vertexAttribPointer(y.tangent,4,az.FLOAT,!1,0,0));0<=y.uv&&(az.bindBuffer(az.ARRAY_BUFFER,s.__webglUVBuffer),aD(y.uv),az.vertexAttribPointer(y.uv,2,az.FLOAT,!1,0,0));0<=y.uv2&&(az.bindBuffer(az.ARRAY_BUFFER,s.__webglUV2Buffer),aD(y.uv2),az.vertexAttribPointer(y.uv2,2,az.FLOAT,!1,0,0));t.skinning&&(0<=y.skinIndex&&0<=y.skinWeight)&&(az.bindBuffer(az.ARRAY_BUFFER,s.__webglSkinIndicesBuffer),aD(y.skinIndex),az.vertexAttribPointer(y.skinIndex,4,az.FLOAT,!1,0,0),az.bindBuffer(az.ARRAY_BUFFER,s.__webglSkinWeightsBuffer),aD(y.skinWeight),az.vertexAttribPointer(y.skinWeight,4,az.FLOAT,!1,0,0));0<=y.lineDistance&&(az.bindBuffer(az.ARRAY_BUFFER,s.__webglLineDistanceBuffer),aD(y.lineDistance),az.vertexAttribPointer(y.lineDistance,1,az.FLOAT,!1,0,0))}r instanceof THREE.Mesh?(t.wireframe?(a7(t.wireframeLinewidth),x&&az.bindBuffer(az.ELEMENT_ARRAY_BUFFER,s.__webglLineBuffer),az.drawElements(az.LINES,s.__webglLineCount,az.UNSIGNED_SHORT,0)):(x&&az.bindBuffer(az.ELEMENT_ARRAY_BUFFER,s.__webglFaceBuffer),az.drawElements(az.TRIANGLES,s.__webglFaceCount,az.UNSIGNED_SHORT,0)),aZ.info.render.calls++,aZ.info.render.vertices+=s.__webglFaceCount,aZ.info.render.faces+=s.__webglFaceCount/3):r instanceof THREE.Line?(r=r.type===THREE.LineStrip?az.LINE_STRIP:az.LINES,a7(t.linewidth),az.drawArrays(r,0,s.__webglLineCount),aZ.info.render.calls++):r instanceof THREE.ParticleSystem?(az.drawArrays(az.POINTS,0,s.__webglParticleCount),aZ.info.render.calls++,aZ.info.render.points+=s.__webglParticleCount):r instanceof THREE.Ribbon&&(az.drawArrays(az.TRIANGLE_STRIP,0,s.__webglVertexCount),aZ.info.render.calls++)}};this.render=function(C,B,A,z){if(!1===B instanceof THREE.Camera){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")}else{var y,x,u,r,p=C.__lights,l=C.fog;ah=-1;aY=!0;!0===C.autoUpdate&&C.updateMatrixWorld();void 0===B.parent&&B.updateMatrixWorld();B.matrixWorldInverse.getInverse(B.matrixWorld);aL.multiplyMatrices(B.projectionMatrix,B.matrixWorldInverse);aP.setFromMatrix(aL);this.autoUpdateObjects&&this.initWebGLObjects(C);au(this.renderPluginsPre,C,B);aZ.info.render.calls=0;aZ.info.render.vertices=0;aZ.info.render.faces=0;aZ.info.render.points=0;this.setRenderTarget(A);(this.autoClear||z)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);r=C.__webglObjects;z=0;for(y=r.length;z<y;z++){if(x=r[z],u=x.object,x.id=z,x.render=!1,u.visible&&(!(u instanceof THREE.Mesh||u instanceof THREE.ParticleSystem)||!u.frustumCulled||aP.intersectsObject(u))){var k=u;k._modelViewMatrix.multiplyMatrices(B.matrixWorldInverse,k.matrixWorld);k._normalMatrix.getNormalMatrix(k._modelViewMatrix);var k=x,j=k.buffer,F=void 0,E=F=void 0,E=k.object.material;if(E instanceof THREE.MeshFaceMaterial){F=j.materialIndex,F=E.materials[F],F.transparent?(k.transparent=F,k.opaque=null):(k.opaque=F,k.transparent=null)}else{if(F=E){F.transparent?(k.transparent=F,k.opaque=null):(k.opaque=F,k.transparent=null)}}x.render=!0;!0===this.sortObjects&&(null!==u.renderDepth?x.z=u.renderDepth:(bt.getPositionFromMatrix(u.matrixWorld),bt.applyProjection(aL),x.z=bt.z))}}this.sortObjects&&r.sort(aA);r=C.__webglObjectsImmediate;z=0;for(y=r.length;z<y;z++){x=r[z],u=x.object,u.visible&&(u._modelViewMatrix.multiplyMatrices(B.matrixWorldInverse,u.matrixWorld),u._normalMatrix.getNormalMatrix(u._modelViewMatrix),u=x.object.material,u.transparent?(x.transparent=u,x.opaque=null):(x.opaque=u,x.transparent=null))}C.overrideMaterial?(z=C.overrideMaterial,this.setBlending(z.blending,z.blendEquation,z.blendSrc,z.blendDst),this.setDepthTest(z.depthTest),this.setDepthWrite(z.depthWrite),a2(z.polygonOffset,z.polygonOffsetFactor,z.polygonOffsetUnits),ay(C.__webglObjects,!1,"",B,p,l,!0,z),aq(C.__webglObjectsImmediate,"",B,p,l,!1,z)):(z=null,this.setBlending(THREE.NoBlending),ay(C.__webglObjects,!0,"opaque",B,p,l,!1,z),aq(C.__webglObjectsImmediate,"opaque",B,p,l,!1,z),ay(C.__webglObjects,!1,"transparent",B,p,l,!0,z),aq(C.__webglObjectsImmediate,"transparent",B,p,l,!0,z));au(this.renderPluginsPost,C,B);A&&(A.generateMipmaps&&A.minFilter!==THREE.NearestFilter&&A.minFilter!==THREE.LinearFilter)&&(A instanceof THREE.WebGLRenderTargetCube?(az.bindTexture(az.TEXTURE_CUBE_MAP,A.__webglTexture),az.generateMipmap(az.TEXTURE_CUBE_MAP),az.bindTexture(az.TEXTURE_CUBE_MAP,null)):(az.bindTexture(az.TEXTURE_2D,A.__webglTexture),az.generateMipmap(az.TEXTURE_2D),az.bindTexture(az.TEXTURE_2D,null)));this.setDepthTest(!0);this.setDepthWrite(!0)}};this.renderImmediateObject=function(h,g,l,k,j){var i=bc(h,g,l,k,j);Q=-1;aZ.setMaterialFaces(k);j.immediateRenderCallback?j.immediateRenderCallback(i,az,aP):j.render(function(b){aZ.renderBufferImmediate(b,i,k)})};this.initWebGLObjects=function(dB){dB.__webglObjects||(dB.__webglObjects=[],dB.__webglObjectsImmediate=[],dB.__webglSprites=[],dB.__webglFlares=[]);for(;dB.__objectsAdded.length;){ap(dB.__objectsAdded[0],dB),dB.__objectsAdded.splice(0,1)}for(;dB.__objectsRemoved.length;){an(dB.__objectsRemoved[0],dB),dB.__objectsRemoved.splice(0,1)}for(var dA=0,dz=dB.__webglObjects.length;dA<dz;dA++){var dv=dB.__webglObjects[dA].object;void 0===dv.__webglInit&&(void 0!==dv.__webglActive&&an(dv,dB),ap(dv,dB));var du=dv,ds=du.geometry,dr=void 0,dp=void 0,dq=void 0;if(ds instanceof THREE.BufferGeometry){var dl=az.DYNAMIC_DRAW,dj=!ds.dynamic,dg=ds.attributes,de=void 0,eg=void 0;for(de in dg){eg=dg[de],eg.needsUpdate&&("index"===de?(az.bindBuffer(az.ELEMENT_ARRAY_BUFFER,eg.buffer),az.bufferData(az.ELEMENT_ARRAY_BUFFER,eg.array,dl)):(az.bindBuffer(az.ARRAY_BUFFER,eg.buffer),az.bufferData(az.ARRAY_BUFFER,eg.array,dl)),eg.needsUpdate=!1),dj&&!eg.dynamic&&delete eg.array}}else{if(du instanceof THREE.Mesh){for(var d9=0,d8=ds.geometryGroupsList.length;d9<d8;d9++){if(dr=ds.geometryGroupsList[d9],dq=aI(du,dr),ds.buffersNeedUpdate&&aJ(dr,du),dp=dq.attributes&&ar(dq),ds.verticesNeedUpdate||ds.morphTargetsNeedUpdate||ds.elementsNeedUpdate||ds.uvsNeedUpdate||ds.normalsNeedUpdate||ds.colorsNeedUpdate||ds.tangentsNeedUpdate||dp){var ee=dr,d1=du,d7=az.DYNAMIC_DRAW,d3=!ds.dynamic,d4=dq;if(ee.__inittedArrays){var dY=aG(d4),dZ=d4.vertexColors?d4.vertexColors:!1,dW=aE(d4),dX=dY===THREE.SmoothShading,ed=void 0,eh=void 0,cH=void 0,dV=void 0,dM=void 0,dR=void 0,dU=void 0,dL=void 0,dK=void 0,dH=void 0,c4=void 0,dP=void 0,dO=void 0,dT=void 0,ez=void 0,ct=void 0,df=void 0,dy=void 0,ey=void 0,cS=void 0,cj=void 0,b5=void 0,e=void 0,dn=void 0,bU=void 0,cX=void 0,ep=void 0,dG=void 0,c7=void 0,cG=void 0,bO=void 0,cN=void 0,b9=void 0,cE=void 0,bX=void 0,bZ=void 0,d5=void 0,cK=void 0,es=void 0,c0=void 0,dx=void 0,bH=void 0,cB=void 0,ej=void 0,bL=void 0,k=void 0,cV=0,b6=0,eI=0,dS=0,bN=0,b4=0,cq=0,eo=0,cl=0,dI=0,bI=0,dh=0,eL=void 0,c3=ee.__vertexArray,d=ee.__uvArray,cx=ee.__uv2Array,q=ee.__normalArray,bG=ee.__tangentArray,cR=ee.__colorArray,eP=ee.__skinIndexArray,eE=ee.__skinWeightArray,cD=ee.__morphTargetsArrays,cp=ee.__morphNormalsArrays,cf=ee.__webglCustomAttributesList,di=void 0,u=ee.__faceArray,b8=ee.__lineArray,dF=d1.geometry,cv=dF.elementsNeedUpdate,c6=dF.uvsNeedUpdate,ck=dF.normalsNeedUpdate,eH=dF.tangentsNeedUpdate,er=dF.colorsNeedUpdate,cQ=dF.morphTargetsNeedUpdate,dm=dF.vertices,cy=ee.faces3,cn=ee.faces4,bT=dF.faces,dQ=dF.faceVertexUvs[0],bV=dF.faceVertexUvs[1],cZ=dF.skinIndices,bW=dF.skinWeights,bK=dF.morphTargets,cL=dF.morphNormals;if(dF.verticesNeedUpdate){ed=0;for(eh=cy.length;ed<eh;ed++){dV=bT[cy[ed]],dP=dm[dV.a],dO=dm[dV.b],dT=dm[dV.c],c3[b6]=dP.x,c3[b6+1]=dP.y,c3[b6+2]=dP.z,c3[b6+3]=dO.x,c3[b6+4]=dO.y,c3[b6+5]=dO.z,c3[b6+6]=dT.x,c3[b6+7]=dT.y,c3[b6+8]=dT.z,b6+=9}ed=0;for(eh=cn.length;ed<eh;ed++){dV=bT[cn[ed]],dP=dm[dV.a],dO=dm[dV.b],dT=dm[dV.c],ez=dm[dV.d],c3[b6]=dP.x,c3[b6+1]=dP.y,c3[b6+2]=dP.z,c3[b6+3]=dO.x,c3[b6+4]=dO.y,c3[b6+5]=dO.z,c3[b6+6]=dT.x,c3[b6+7]=dT.y,c3[b6+8]=dT.z,c3[b6+9]=ez.x,c3[b6+10]=ez.y,c3[b6+11]=ez.z,b6+=12}az.bindBuffer(az.ARRAY_BUFFER,ee.__webglVertexBuffer);az.bufferData(az.ARRAY_BUFFER,c3,d7)}if(cQ){dx=0;for(bH=bK.length;dx<bH;dx++){ed=bI=0;for(eh=cy.length;ed<eh;ed++){bL=cy[ed],dV=bT[bL],dP=bK[dx].vertices[dV.a],dO=bK[dx].vertices[dV.b],dT=bK[dx].vertices[dV.c],cB=cD[dx],cB[bI]=dP.x,cB[bI+1]=dP.y,cB[bI+2]=dP.z,cB[bI+3]=dO.x,cB[bI+4]=dO.y,cB[bI+5]=dO.z,cB[bI+6]=dT.x,cB[bI+7]=dT.y,cB[bI+8]=dT.z,d4.morphNormals&&(dX?(k=cL[dx].vertexNormals[bL],cS=k.a,cj=k.b,b5=k.c):b5=cj=cS=cL[dx].faceNormals[bL],ej=cp[dx],ej[bI]=cS.x,ej[bI+1]=cS.y,ej[bI+2]=cS.z,ej[bI+3]=cj.x,ej[bI+4]=cj.y,ej[bI+5]=cj.z,ej[bI+6]=b5.x,ej[bI+7]=b5.y,ej[bI+8]=b5.z),bI+=9}ed=0;for(eh=cn.length;ed<eh;ed++){bL=cn[ed],dV=bT[bL],dP=bK[dx].vertices[dV.a],dO=bK[dx].vertices[dV.b],dT=bK[dx].vertices[dV.c],ez=bK[dx].vertices[dV.d],cB=cD[dx],cB[bI]=dP.x,cB[bI+1]=dP.y,cB[bI+2]=dP.z,cB[bI+3]=dO.x,cB[bI+4]=dO.y,cB[bI+5]=dO.z,cB[bI+6]=dT.x,cB[bI+7]=dT.y,cB[bI+8]=dT.z,cB[bI+9]=ez.x,cB[bI+10]=ez.y,cB[bI+11]=ez.z,d4.morphNormals&&(dX?(k=cL[dx].vertexNormals[bL],cS=k.a,cj=k.b,b5=k.c,e=k.d):e=b5=cj=cS=cL[dx].faceNormals[bL],ej=cp[dx],ej[bI]=cS.x,ej[bI+1]=cS.y,ej[bI+2]=cS.z,ej[bI+3]=cj.x,ej[bI+4]=cj.y,ej[bI+5]=cj.z,ej[bI+6]=b5.x,ej[bI+7]=b5.y,ej[bI+8]=b5.z,ej[bI+9]=e.x,ej[bI+10]=e.y,ej[bI+11]=e.z),bI+=12}az.bindBuffer(az.ARRAY_BUFFER,ee.__webglMorphTargetsBuffers[dx]);az.bufferData(az.ARRAY_BUFFER,cD[dx],d7);d4.morphNormals&&(az.bindBuffer(az.ARRAY_BUFFER,ee.__webglMorphNormalsBuffers[dx]),az.bufferData(az.ARRAY_BUFFER,cp[dx],d7))}}if(bW.length){ed=0;for(eh=cy.length;ed<eh;ed++){dV=bT[cy[ed]],dG=bW[dV.a],c7=bW[dV.b],cG=bW[dV.c],eE[dI]=dG.x,eE[dI+1]=dG.y,eE[dI+2]=dG.z,eE[dI+3]=dG.w,eE[dI+4]=c7.x,eE[dI+5]=c7.y,eE[dI+6]=c7.z,eE[dI+7]=c7.w,eE[dI+8]=cG.x,eE[dI+9]=cG.y,eE[dI+10]=cG.z,eE[dI+11]=cG.w,cN=cZ[dV.a],b9=cZ[dV.b],cE=cZ[dV.c],eP[dI]=cN.x,eP[dI+1]=cN.y,eP[dI+2]=cN.z,eP[dI+3]=cN.w,eP[dI+4]=b9.x,eP[dI+5]=b9.y,eP[dI+6]=b9.z,eP[dI+7]=b9.w,eP[dI+8]=cE.x,eP[dI+9]=cE.y,eP[dI+10]=cE.z,eP[dI+11]=cE.w,dI+=12}ed=0;for(eh=cn.length;ed<eh;ed++){dV=bT[cn[ed]],dG=bW[dV.a],c7=bW[dV.b],cG=bW[dV.c],bO=bW[dV.d],eE[dI]=dG.x,eE[dI+1]=dG.y,eE[dI+2]=dG.z,eE[dI+3]=dG.w,eE[dI+4]=c7.x,eE[dI+5]=c7.y,eE[dI+6]=c7.z,eE[dI+7]=c7.w,eE[dI+8]=cG.x,eE[dI+9]=cG.y,eE[dI+10]=cG.z,eE[dI+11]=cG.w,eE[dI+12]=bO.x,eE[dI+13]=bO.y,eE[dI+14]=bO.z,eE[dI+15]=bO.w,cN=cZ[dV.a],b9=cZ[dV.b],cE=cZ[dV.c],bX=cZ[dV.d],eP[dI]=cN.x,eP[dI+1]=cN.y,eP[dI+2]=cN.z,eP[dI+3]=cN.w,eP[dI+4]=b9.x,eP[dI+5]=b9.y,eP[dI+6]=b9.z,eP[dI+7]=b9.w,eP[dI+8]=cE.x,eP[dI+9]=cE.y,eP[dI+10]=cE.z,eP[dI+11]=cE.w,eP[dI+12]=bX.x,eP[dI+13]=bX.y,eP[dI+14]=bX.z,eP[dI+15]=bX.w,dI+=16}0<dI&&(az.bindBuffer(az.ARRAY_BUFFER,ee.__webglSkinIndicesBuffer),az.bufferData(az.ARRAY_BUFFER,eP,d7),az.bindBuffer(az.ARRAY_BUFFER,ee.__webglSkinWeightsBuffer),az.bufferData(az.ARRAY_BUFFER,eE,d7))}if(er&&dZ){ed=0;for(eh=cy.length;ed<eh;ed++){dV=bT[cy[ed]],dU=dV.vertexColors,dL=dV.color,3===dU.length&&dZ===THREE.VertexColors?(dn=dU[0],bU=dU[1],cX=dU[2]):cX=bU=dn=dL,cR[cl]=dn.r,cR[cl+1]=dn.g,cR[cl+2]=dn.b,cR[cl+3]=bU.r,cR[cl+4]=bU.g,cR[cl+5]=bU.b,cR[cl+6]=cX.r,cR[cl+7]=cX.g,cR[cl+8]=cX.b,cl+=9}ed=0;for(eh=cn.length;ed<eh;ed++){dV=bT[cn[ed]],dU=dV.vertexColors,dL=dV.color,4===dU.length&&dZ===THREE.VertexColors?(dn=dU[0],bU=dU[1],cX=dU[2],ep=dU[3]):ep=cX=bU=dn=dL,cR[cl]=dn.r,cR[cl+1]=dn.g,cR[cl+2]=dn.b,cR[cl+3]=bU.r,cR[cl+4]=bU.g,cR[cl+5]=bU.b,cR[cl+6]=cX.r,cR[cl+7]=cX.g,cR[cl+8]=cX.b,cR[cl+9]=ep.r,cR[cl+10]=ep.g,cR[cl+11]=ep.b,cl+=12}0<cl&&(az.bindBuffer(az.ARRAY_BUFFER,ee.__webglColorBuffer),az.bufferData(az.ARRAY_BUFFER,cR,d7))}if(eH&&dF.hasTangents){ed=0;for(eh=cy.length;ed<eh;ed++){dV=bT[cy[ed]],dK=dV.vertexTangents,ct=dK[0],df=dK[1],dy=dK[2],bG[cq]=ct.x,bG[cq+1]=ct.y,bG[cq+2]=ct.z,bG[cq+3]=ct.w,bG[cq+4]=df.x,bG[cq+5]=df.y,bG[cq+6]=df.z,bG[cq+7]=df.w,bG[cq+8]=dy.x,bG[cq+9]=dy.y,bG[cq+10]=dy.z,bG[cq+11]=dy.w,cq+=12}ed=0;for(eh=cn.length;ed<eh;ed++){dV=bT[cn[ed]],dK=dV.vertexTangents,ct=dK[0],df=dK[1],dy=dK[2],ey=dK[3],bG[cq]=ct.x,bG[cq+1]=ct.y,bG[cq+2]=ct.z,bG[cq+3]=ct.w,bG[cq+4]=df.x,bG[cq+5]=df.y,bG[cq+6]=df.z,bG[cq+7]=df.w,bG[cq+8]=dy.x,bG[cq+9]=dy.y,bG[cq+10]=dy.z,bG[cq+11]=dy.w,bG[cq+12]=ey.x,bG[cq+13]=ey.y,bG[cq+14]=ey.z,bG[cq+15]=ey.w,cq+=16}az.bindBuffer(az.ARRAY_BUFFER,ee.__webglTangentBuffer);az.bufferData(az.ARRAY_BUFFER,bG,d7)}if(ck&&dY){ed=0;for(eh=cy.length;ed<eh;ed++){if(dV=bT[cy[ed]],dM=dV.vertexNormals,dR=dV.normal,3===dM.length&&dX){for(bZ=0;3>bZ;bZ++){cK=dM[bZ],q[b4]=cK.x,q[b4+1]=cK.y,q[b4+2]=cK.z,b4+=3}}else{for(bZ=0;3>bZ;bZ++){q[b4]=dR.x,q[b4+1]=dR.y,q[b4+2]=dR.z,b4+=3}}}ed=0;for(eh=cn.length;ed<eh;ed++){if(dV=bT[cn[ed]],dM=dV.vertexNormals,dR=dV.normal,4===dM.length&&dX){for(bZ=0;4>bZ;bZ++){cK=dM[bZ],q[b4]=cK.x,q[b4+1]=cK.y,q[b4+2]=cK.z,b4+=3}}else{for(bZ=0;4>bZ;bZ++){q[b4]=dR.x,q[b4+1]=dR.y,q[b4+2]=dR.z,b4+=3}}}az.bindBuffer(az.ARRAY_BUFFER,ee.__webglNormalBuffer);az.bufferData(az.ARRAY_BUFFER,q,d7)}if(c6&&dQ&&dW){ed=0;for(eh=cy.length;ed<eh;ed++){if(cH=cy[ed],dH=dQ[cH],void 0!==dH){for(bZ=0;3>bZ;bZ++){es=dH[bZ],d[eI]=es.x,d[eI+1]=es.y,eI+=2}}}ed=0;for(eh=cn.length;ed<eh;ed++){if(cH=cn[ed],dH=dQ[cH],void 0!==dH){for(bZ=0;4>bZ;bZ++){es=dH[bZ],d[eI]=es.x,d[eI+1]=es.y,eI+=2}}}0<eI&&(az.bindBuffer(az.ARRAY_BUFFER,ee.__webglUVBuffer),az.bufferData(az.ARRAY_BUFFER,d,d7))}if(c6&&bV&&dW){ed=0;for(eh=cy.length;ed<eh;ed++){if(cH=cy[ed],c4=bV[cH],void 0!==c4){for(bZ=0;3>bZ;bZ++){c0=c4[bZ],cx[dS]=c0.x,cx[dS+1]=c0.y,dS+=2}}}ed=0;for(eh=cn.length;ed<eh;ed++){if(cH=cn[ed],c4=bV[cH],void 0!==c4){for(bZ=0;4>bZ;bZ++){c0=c4[bZ],cx[dS]=c0.x,cx[dS+1]=c0.y,dS+=2}}}0<dS&&(az.bindBuffer(az.ARRAY_BUFFER,ee.__webglUV2Buffer),az.bufferData(az.ARRAY_BUFFER,cx,d7))}if(cv){ed=0;for(eh=cy.length;ed<eh;ed++){u[bN]=cV,u[bN+1]=cV+1,u[bN+2]=cV+2,bN+=3,b8[eo]=cV,b8[eo+1]=cV+1,b8[eo+2]=cV,b8[eo+3]=cV+2,b8[eo+4]=cV+1,b8[eo+5]=cV+2,eo+=6,cV+=3}ed=0;for(eh=cn.length;ed<eh;ed++){u[bN]=cV,u[bN+1]=cV+1,u[bN+2]=cV+3,u[bN+3]=cV+1,u[bN+4]=cV+2,u[bN+5]=cV+3,bN+=6,b8[eo]=cV,b8[eo+1]=cV+1,b8[eo+2]=cV,b8[eo+3]=cV+3,b8[eo+4]=cV+1,b8[eo+5]=cV+2,b8[eo+6]=cV+2,b8[eo+7]=cV+3,eo+=8,cV+=4}az.bindBuffer(az.ELEMENT_ARRAY_BUFFER,ee.__webglFaceBuffer);az.bufferData(az.ELEMENT_ARRAY_BUFFER,u,d7);az.bindBuffer(az.ELEMENT_ARRAY_BUFFER,ee.__webglLineBuffer);az.bufferData(az.ELEMENT_ARRAY_BUFFER,b8,d7)}if(cf){bZ=0;for(d5=cf.length;bZ<d5;bZ++){if(di=cf[bZ],di.__original.needsUpdate){dh=0;if(1===di.size){if(void 0===di.boundTo||"vertices"===di.boundTo){ed=0;for(eh=cy.length;ed<eh;ed++){dV=bT[cy[ed]],di.array[dh]=di.value[dV.a],di.array[dh+1]=di.value[dV.b],di.array[dh+2]=di.value[dV.c],dh+=3}ed=0;for(eh=cn.length;ed<eh;ed++){dV=bT[cn[ed]],di.array[dh]=di.value[dV.a],di.array[dh+1]=di.value[dV.b],di.array[dh+2]=di.value[dV.c],di.array[dh+3]=di.value[dV.d],dh+=4}}else{if("faces"===di.boundTo){ed=0;for(eh=cy.length;ed<eh;ed++){eL=di.value[cy[ed]],di.array[dh]=eL,di.array[dh+1]=eL,di.array[dh+2]=eL,dh+=3}ed=0;for(eh=cn.length;ed<eh;ed++){eL=di.value[cn[ed]],di.array[dh]=eL,di.array[dh+1]=eL,di.array[dh+2]=eL,di.array[dh+3]=eL,dh+=4}}}}else{if(2===di.size){if(void 0===di.boundTo||"vertices"===di.boundTo){ed=0;for(eh=cy.length;ed<eh;ed++){dV=bT[cy[ed]],dP=di.value[dV.a],dO=di.value[dV.b],dT=di.value[dV.c],di.array[dh]=dP.x,di.array[dh+1]=dP.y,di.array[dh+2]=dO.x,di.array[dh+3]=dO.y,di.array[dh+4]=dT.x,di.array[dh+5]=dT.y,dh+=6}ed=0;for(eh=cn.length;ed<eh;ed++){dV=bT[cn[ed]],dP=di.value[dV.a],dO=di.value[dV.b],dT=di.value[dV.c],ez=di.value[dV.d],di.array[dh]=dP.x,di.array[dh+1]=dP.y,di.array[dh+2]=dO.x,di.array[dh+3]=dO.y,di.array[dh+4]=dT.x,di.array[dh+5]=dT.y,di.array[dh+6]=ez.x,di.array[dh+7]=ez.y,dh+=8}}else{if("faces"===di.boundTo){ed=0;for(eh=cy.length;ed<eh;ed++){dT=dO=dP=eL=di.value[cy[ed]],di.array[dh]=dP.x,di.array[dh+1]=dP.y,di.array[dh+2]=dO.x,di.array[dh+3]=dO.y,di.array[dh+4]=dT.x,di.array[dh+5]=dT.y,dh+=6}ed=0;for(eh=cn.length;ed<eh;ed++){ez=dT=dO=dP=eL=di.value[cn[ed]],di.array[dh]=dP.x,di.array[dh+1]=dP.y,di.array[dh+2]=dO.x,di.array[dh+3]=dO.y,di.array[dh+4]=dT.x,di.array[dh+5]=dT.y,di.array[dh+6]=ez.x,di.array[dh+7]=ez.y,dh+=8}}}}else{if(3===di.size){var dJ;dJ="c"===di.type?["r","g","b"]:["x","y","z"];if(void 0===di.boundTo||"vertices"===di.boundTo){ed=0;for(eh=cy.length;ed<eh;ed++){dV=bT[cy[ed]],dP=di.value[dV.a],dO=di.value[dV.b],dT=di.value[dV.c],di.array[dh]=dP[dJ[0]],di.array[dh+1]=dP[dJ[1]],di.array[dh+2]=dP[dJ[2]],di.array[dh+3]=dO[dJ[0]],di.array[dh+4]=dO[dJ[1]],di.array[dh+5]=dO[dJ[2]],di.array[dh+6]=dT[dJ[0]],di.array[dh+7]=dT[dJ[1]],di.array[dh+8]=dT[dJ[2]],dh+=9}ed=0;for(eh=cn.length;ed<eh;ed++){dV=bT[cn[ed]],dP=di.value[dV.a],dO=di.value[dV.b],dT=di.value[dV.c],ez=di.value[dV.d],di.array[dh]=dP[dJ[0]],di.array[dh+1]=dP[dJ[1]],di.array[dh+2]=dP[dJ[2]],di.array[dh+3]=dO[dJ[0]],di.array[dh+4]=dO[dJ[1]],di.array[dh+5]=dO[dJ[2]],di.array[dh+6]=dT[dJ[0]],di.array[dh+7]=dT[dJ[1]],di.array[dh+8]=dT[dJ[2]],di.array[dh+9]=ez[dJ[0]],di.array[dh+10]=ez[dJ[1]],di.array[dh+11]=ez[dJ[2]],dh+=12}}else{if("faces"===di.boundTo){ed=0;for(eh=cy.length;ed<eh;ed++){dT=dO=dP=eL=di.value[cy[ed]],di.array[dh]=dP[dJ[0]],di.array[dh+1]=dP[dJ[1]],di.array[dh+2]=dP[dJ[2]],di.array[dh+3]=dO[dJ[0]],di.array[dh+4]=dO[dJ[1]],di.array[dh+5]=dO[dJ[2]],di.array[dh+6]=dT[dJ[0]],di.array[dh+7]=dT[dJ[1]],di.array[dh+8]=dT[dJ[2]],dh+=9}ed=0;for(eh=cn.length;ed<eh;ed++){ez=dT=dO=dP=eL=di.value[cn[ed]],di.array[dh]=dP[dJ[0]],di.array[dh+1]=dP[dJ[1]],di.array[dh+2]=dP[dJ[2]],di.array[dh+3]=dO[dJ[0]],di.array[dh+4]=dO[dJ[1]],di.array[dh+5]=dO[dJ[2]],di.array[dh+6]=dT[dJ[0]],di.array[dh+7]=dT[dJ[1]],di.array[dh+8]=dT[dJ[2]],di.array[dh+9]=ez[dJ[0]],di.array[dh+10]=ez[dJ[1]],di.array[dh+11]=ez[dJ[2]],dh+=12}}else{if("faceVertices"===di.boundTo){ed=0;for(eh=cy.length;ed<eh;ed++){eL=di.value[cy[ed]],dP=eL[0],dO=eL[1],dT=eL[2],di.array[dh]=dP[dJ[0]],di.array[dh+1]=dP[dJ[1]],di.array[dh+2]=dP[dJ[2]],di.array[dh+3]=dO[dJ[0]],di.array[dh+4]=dO[dJ[1]],di.array[dh+5]=dO[dJ[2]],di.array[dh+6]=dT[dJ[0]],di.array[dh+7]=dT[dJ[1]],di.array[dh+8]=dT[dJ[2]],dh+=9}ed=0;for(eh=cn.length;ed<eh;ed++){eL=di.value[cn[ed]],dP=eL[0],dO=eL[1],dT=eL[2],ez=eL[3],di.array[dh]=dP[dJ[0]],di.array[dh+1]=dP[dJ[1]],di.array[dh+2]=dP[dJ[2]],di.array[dh+3]=dO[dJ[0]],di.array[dh+4]=dO[dJ[1]],di.array[dh+5]=dO[dJ[2]],di.array[dh+6]=dT[dJ[0]],di.array[dh+7]=dT[dJ[1]],di.array[dh+8]=dT[dJ[2]],di.array[dh+9]=ez[dJ[0]],di.array[dh+10]=ez[dJ[1]],di.array[dh+11]=ez[dJ[2]],dh+=12}}}}}else{if(4===di.size){if(void 0===di.boundTo||"vertices"===di.boundTo){ed=0;for(eh=cy.length;ed<eh;ed++){dV=bT[cy[ed]],dP=di.value[dV.a],dO=di.value[dV.b],dT=di.value[dV.c],di.array[dh]=dP.x,di.array[dh+1]=dP.y,di.array[dh+2]=dP.z,di.array[dh+3]=dP.w,di.array[dh+4]=dO.x,di.array[dh+5]=dO.y,di.array[dh+6]=dO.z,di.array[dh+7]=dO.w,di.array[dh+8]=dT.x,di.array[dh+9]=dT.y,di.array[dh+10]=dT.z,di.array[dh+11]=dT.w,dh+=12}ed=0;for(eh=cn.length;ed<eh;ed++){dV=bT[cn[ed]],dP=di.value[dV.a],dO=di.value[dV.b],dT=di.value[dV.c],ez=di.value[dV.d],di.array[dh]=dP.x,di.array[dh+1]=dP.y,di.array[dh+2]=dP.z,di.array[dh+3]=dP.w,di.array[dh+4]=dO.x,di.array[dh+5]=dO.y,di.array[dh+6]=dO.z,di.array[dh+7]=dO.w,di.array[dh+8]=dT.x,di.array[dh+9]=dT.y,di.array[dh+10]=dT.z,di.array[dh+11]=dT.w,di.array[dh+12]=ez.x,di.array[dh+13]=ez.y,di.array[dh+14]=ez.z,di.array[dh+15]=ez.w,dh+=16}}else{if("faces"===di.boundTo){ed=0;for(eh=cy.length;ed<eh;ed++){dT=dO=dP=eL=di.value[cy[ed]],di.array[dh]=dP.x,di.array[dh+1]=dP.y,di.array[dh+2]=dP.z,di.array[dh+3]=dP.w,di.array[dh+4]=dO.x,di.array[dh+5]=dO.y,di.array[dh+6]=dO.z,di.array[dh+7]=dO.w,di.array[dh+8]=dT.x,di.array[dh+9]=dT.y,di.array[dh+10]=dT.z,di.array[dh+11]=dT.w,dh+=12}ed=0;for(eh=cn.length;ed<eh;ed++){ez=dT=dO=dP=eL=di.value[cn[ed]],di.array[dh]=dP.x,di.array[dh+1]=dP.y,di.array[dh+2]=dP.z,di.array[dh+3]=dP.w,di.array[dh+4]=dO.x,di.array[dh+5]=dO.y,di.array[dh+6]=dO.z,di.array[dh+7]=dO.w,di.array[dh+8]=dT.x,di.array[dh+9]=dT.y,di.array[dh+10]=dT.z,di.array[dh+11]=dT.w,di.array[dh+12]=ez.x,di.array[dh+13]=ez.y,di.array[dh+14]=ez.z,di.array[dh+15]=ez.w,dh+=16}}else{if("faceVertices"===di.boundTo){ed=0;for(eh=cy.length;ed<eh;ed++){eL=di.value[cy[ed]],dP=eL[0],dO=eL[1],dT=eL[2],di.array[dh]=dP.x,di.array[dh+1]=dP.y,di.array[dh+2]=dP.z,di.array[dh+3]=dP.w,di.array[dh+4]=dO.x,di.array[dh+5]=dO.y,di.array[dh+6]=dO.z,di.array[dh+7]=dO.w,di.array[dh+8]=dT.x,di.array[dh+9]=dT.y,di.array[dh+10]=dT.z,di.array[dh+11]=dT.w,dh+=12}ed=0;for(eh=cn.length;ed<eh;ed++){eL=di.value[cn[ed]],dP=eL[0],dO=eL[1],dT=eL[2],ez=eL[3],di.array[dh]=dP.x,di.array[dh+1]=dP.y,di.array[dh+2]=dP.z,di.array[dh+3]=dP.w,di.array[dh+4]=dO.x,di.array[dh+5]=dO.y,di.array[dh+6]=dO.z,di.array[dh+7]=dO.w,di.array[dh+8]=dT.x,di.array[dh+9]=dT.y,di.array[dh+10]=dT.z,di.array[dh+11]=dT.w,di.array[dh+12]=ez.x,di.array[dh+13]=ez.y,di.array[dh+14]=ez.z,di.array[dh+15]=ez.w,dh+=16}}}}}}}}az.bindBuffer(az.ARRAY_BUFFER,di.buffer);az.bufferData(az.ARRAY_BUFFER,di.array,d7)}}}d3&&(delete ee.__inittedArrays,delete ee.__colorArray,delete ee.__normalArray,delete ee.__tangentArray,delete ee.__uvArray,delete ee.__uv2Array,delete ee.__faceArray,delete ee.__vertexArray,delete ee.__lineArray,delete ee.__skinIndexArray,delete ee.__skinWeightArray)}}}ds.verticesNeedUpdate=!1;ds.morphTargetsNeedUpdate=!1;ds.elementsNeedUpdate=!1;ds.uvsNeedUpdate=!1;ds.normalsNeedUpdate=!1;ds.colorsNeedUpdate=!1;ds.tangentsNeedUpdate=!1;ds.buffersNeedUpdate=!1;dq.attributes&&ak(dq)}else{if(du instanceof THREE.Ribbon){dq=aI(du,ds);dp=dq.attributes&&ar(dq);if(ds.verticesNeedUpdate||ds.colorsNeedUpdate||ds.normalsNeedUpdate||dp){var eK=ds,cw=az.DYNAMIC_DRAW,ch=void 0,b3=void 0,bS=void 0,cm=void 0,ev=void 0,b7=void 0,bY=void 0,bM=void 0,dw=void 0,cs=void 0,ei=void 0,b2=void 0,c9=void 0,c2=eK.vertices,cF=eK.colors,cr=eK.normals,dE=c2.length,c8=cF.length,eB=cr.length,m=eK.__vertexArray,eJ=eK.__colorArray,et=eK.__normalArray,ek=eK.colorsNeedUpdate,dC=eK.normalsNeedUpdate,bJ=eK.__webglCustomAttributesList;if(eK.verticesNeedUpdate){for(ch=0;ch<dE;ch++){cm=c2[ch],ev=3*ch,m[ev]=cm.x,m[ev+1]=cm.y,m[ev+2]=cm.z}az.bindBuffer(az.ARRAY_BUFFER,eK.__webglVertexBuffer);az.bufferData(az.ARRAY_BUFFER,m,cw)}if(ek){for(b3=0;b3<c8;b3++){b7=cF[b3],ev=3*b3,eJ[ev]=b7.r,eJ[ev+1]=b7.g,eJ[ev+2]=b7.b}az.bindBuffer(az.ARRAY_BUFFER,eK.__webglColorBuffer);az.bufferData(az.ARRAY_BUFFER,eJ,cw)}if(dC){for(bS=0;bS<eB;bS++){bY=cr[bS],ev=3*bS,et[ev]=bY.x,et[ev+1]=bY.y,et[ev+2]=bY.z}az.bindBuffer(az.ARRAY_BUFFER,eK.__webglNormalBuffer);az.bufferData(az.ARRAY_BUFFER,et,cw)}if(bJ){bM=0;for(dw=bJ.length;bM<dw;bM++){if(b2=bJ[bM],b2.needsUpdate&&(void 0===b2.boundTo||"vertices"===b2.boundTo)){ev=0;ei=b2.value.length;if(1===b2.size){for(cs=0;cs<ei;cs++){b2.array[cs]=b2.value[cs]}}else{if(2===b2.size){for(cs=0;cs<ei;cs++){c9=b2.value[cs],b2.array[ev]=c9.x,b2.array[ev+1]=c9.y,ev+=2}}else{if(3===b2.size){if("c"===b2.type){for(cs=0;cs<ei;cs++){c9=b2.value[cs],b2.array[ev]=c9.r,b2.array[ev+1]=c9.g,b2.array[ev+2]=c9.b,ev+=3}}else{for(cs=0;cs<ei;cs++){c9=b2.value[cs],b2.array[ev]=c9.x,b2.array[ev+1]=c9.y,b2.array[ev+2]=c9.z,ev+=3}}}else{if(4===b2.size){for(cs=0;cs<ei;cs++){c9=b2.value[cs],b2.array[ev]=c9.x,b2.array[ev+1]=c9.y,b2.array[ev+2]=c9.z,b2.array[ev+3]=c9.w,ev+=4}}}}}az.bindBuffer(az.ARRAY_BUFFER,b2.buffer);az.bufferData(az.ARRAY_BUFFER,b2.array,cw)}}}}ds.verticesNeedUpdate=!1;ds.colorsNeedUpdate=!1;ds.normalsNeedUpdate=!1;dq.attributes&&ak(dq)}else{if(du instanceof THREE.Line){dq=aI(du,ds);dp=dq.attributes&&ar(dq);if(ds.verticesNeedUpdate||ds.colorsNeedUpdate||ds.lineDistancesNeedUpdate||dp){var eu=ds,cC=az.DYNAMIC_DRAW,y=void 0,eO=void 0,eD=void 0,co=void 0,en=void 0,ce=void 0,dk=eu.vertices,cY=eu.colors,cO=eu.lineDistances,c5=dk.length,cT=cY.length,cI=cO.length,b0=eu.__vertexArray,bP=eu.__colorArray,cz=eu.__lineDistanceArray,cu=eu.colorsNeedUpdate,c1=eu.lineDistancesNeedUpdate,f=eu.__webglCustomAttributesList,s=void 0,ef=void 0,ci=void 0,ex=void 0,cW=void 0,bR=void 0;if(eu.verticesNeedUpdate){for(y=0;y<c5;y++){co=dk[y],en=3*y,b0[en]=co.x,b0[en+1]=co.y,b0[en+2]=co.z}az.bindBuffer(az.ARRAY_BUFFER,eu.__webglVertexBuffer);az.bufferData(az.ARRAY_BUFFER,b0,cC)}if(cu){for(eO=0;eO<cT;eO++){ce=cY[eO],en=3*eO,bP[en]=ce.r,bP[en+1]=ce.g,bP[en+2]=ce.b}az.bindBuffer(az.ARRAY_BUFFER,eu.__webglColorBuffer);az.bufferData(az.ARRAY_BUFFER,bP,cC)}if(c1){for(eD=0;eD<cI;eD++){cz[eD]=cO[eD]}az.bindBuffer(az.ARRAY_BUFFER,eu.__webglLineDistanceBuffer);az.bufferData(az.ARRAY_BUFFER,cz,cC)}if(f){s=0;for(ef=f.length;s<ef;s++){if(bR=f[s],bR.needsUpdate&&(void 0===bR.boundTo||"vertices"===bR.boundTo)){en=0;ex=bR.value.length;if(1===bR.size){for(ci=0;ci<ex;ci++){bR.array[ci]=bR.value[ci]}}else{if(2===bR.size){for(ci=0;ci<ex;ci++){cW=bR.value[ci],bR.array[en]=cW.x,bR.array[en+1]=cW.y,en+=2}}else{if(3===bR.size){if("c"===bR.type){for(ci=0;ci<ex;ci++){cW=bR.value[ci],bR.array[en]=cW.r,bR.array[en+1]=cW.g,bR.array[en+2]=cW.b,en+=3}}else{for(ci=0;ci<ex;ci++){cW=bR.value[ci],bR.array[en]=cW.x,bR.array[en+1]=cW.y,bR.array[en+2]=cW.z,en+=3}}}else{if(4===bR.size){for(ci=0;ci<ex;ci++){cW=bR.value[ci],bR.array[en]=cW.x,bR.array[en+1]=cW.y,bR.array[en+2]=cW.z,bR.array[en+3]=cW.w,en+=4}}}}}az.bindBuffer(az.ARRAY_BUFFER,bR.buffer);az.bufferData(az.ARRAY_BUFFER,bR.array,cC)}}}}ds.verticesNeedUpdate=!1;ds.colorsNeedUpdate=!1;ds.lineDistancesNeedUpdate=!1;dq.attributes&&ak(dq)}else{if(du instanceof THREE.ParticleSystem){dq=aI(du,ds);dp=dq.attributes&&ar(dq);if(ds.verticesNeedUpdate||ds.colorsNeedUpdate||du.sortParticles||dp){var eN=ds,eG=az.DYNAMIC_DRAW,em=du,cM=void 0,eC=void 0,el=void 0,d6=void 0,dD=void 0,g=void 0,eM=eN.vertices,eq=eM.length,dN=eN.colors,ew=dN.length,cP=eN.__vertexArray,cA=eN.__colorArray,cU=eN.__sortArray,d0=eN.verticesNeedUpdate,dt=eN.colorsNeedUpdate,cJ=eN.__webglCustomAttributesList,b1=void 0,d2=void 0,eF=void 0,bQ=void 0,cg=void 0,eA=void 0;if(em.sortParticles){bg.copy(aL);bg.multiply(em.matrixWorld);for(cM=0;cM<eq;cM++){el=eM[cM],bt.copy(el),bt.applyProjection(bg),cU[cM]=[bt.z,cM]}cU.sort(ax);for(cM=0;cM<eq;cM++){el=eM[cU[cM][1]],d6=3*cM,cP[d6]=el.x,cP[d6+1]=el.y,cP[d6+2]=el.z}for(eC=0;eC<ew;eC++){d6=3*eC,g=dN[cU[eC][1]],cA[d6]=g.r,cA[d6+1]=g.g,cA[d6+2]=g.b}if(cJ){b1=0;for(d2=cJ.length;b1<d2;b1++){if(eA=cJ[b1],void 0===eA.boundTo||"vertices"===eA.boundTo){if(d6=0,bQ=eA.value.length,1===eA.size){for(eF=0;eF<bQ;eF++){dD=cU[eF][1],eA.array[eF]=eA.value[dD]}}else{if(2===eA.size){for(eF=0;eF<bQ;eF++){dD=cU[eF][1],cg=eA.value[dD],eA.array[d6]=cg.x,eA.array[d6+1]=cg.y,d6+=2}}else{if(3===eA.size){if("c"===eA.type){for(eF=0;eF<bQ;eF++){dD=cU[eF][1],cg=eA.value[dD],eA.array[d6]=cg.r,eA.array[d6+1]=cg.g,eA.array[d6+2]=cg.b,d6+=3}}else{for(eF=0;eF<bQ;eF++){dD=cU[eF][1],cg=eA.value[dD],eA.array[d6]=cg.x,eA.array[d6+1]=cg.y,eA.array[d6+2]=cg.z,d6+=3}}}else{if(4===eA.size){for(eF=0;eF<bQ;eF++){dD=cU[eF][1],cg=eA.value[dD],eA.array[d6]=cg.x,eA.array[d6+1]=cg.y,eA.array[d6+2]=cg.z,eA.array[d6+3]=cg.w,d6+=4}}}}}}}}}else{if(d0){for(cM=0;cM<eq;cM++){el=eM[cM],d6=3*cM,cP[d6]=el.x,cP[d6+1]=el.y,cP[d6+2]=el.z}}if(dt){for(eC=0;eC<ew;eC++){g=dN[eC],d6=3*eC,cA[d6]=g.r,cA[d6+1]=g.g,cA[d6+2]=g.b}}if(cJ){b1=0;for(d2=cJ.length;b1<d2;b1++){if(eA=cJ[b1],eA.needsUpdate&&(void 0===eA.boundTo||"vertices"===eA.boundTo)){if(bQ=eA.value.length,d6=0,1===eA.size){for(eF=0;eF<bQ;eF++){eA.array[eF]=eA.value[eF]}}else{if(2===eA.size){for(eF=0;eF<bQ;eF++){cg=eA.value[eF],eA.array[d6]=cg.x,eA.array[d6+1]=cg.y,d6+=2}}else{if(3===eA.size){if("c"===eA.type){for(eF=0;eF<bQ;eF++){cg=eA.value[eF],eA.array[d6]=cg.r,eA.array[d6+1]=cg.g,eA.array[d6+2]=cg.b,d6+=3}}else{for(eF=0;eF<bQ;eF++){cg=eA.value[eF],eA.array[d6]=cg.x,eA.array[d6+1]=cg.y,eA.array[d6+2]=cg.z,d6+=3}}}else{if(4===eA.size){for(eF=0;eF<bQ;eF++){cg=eA.value[eF],eA.array[d6]=cg.x,eA.array[d6+1]=cg.y,eA.array[d6+2]=cg.z,eA.array[d6+3]=cg.w,d6+=4}}}}}}}}}if(d0||em.sortParticles){az.bindBuffer(az.ARRAY_BUFFER,eN.__webglVertexBuffer),az.bufferData(az.ARRAY_BUFFER,cP,eG)}if(dt||em.sortParticles){az.bindBuffer(az.ARRAY_BUFFER,eN.__webglColorBuffer),az.bufferData(az.ARRAY_BUFFER,cA,eG)}if(cJ){b1=0;for(d2=cJ.length;b1<d2;b1++){if(eA=cJ[b1],eA.needsUpdate||em.sortParticles){az.bindBuffer(az.ARRAY_BUFFER,eA.buffer),az.bufferData(az.ARRAY_BUFFER,eA.array,eG)}}}}ds.verticesNeedUpdate=!1;ds.colorsNeedUpdate=!1;dq.attributes&&ak(dq)}}}}}}};this.initMaterial=function(Z,W,V,U){var R,P,N,M;Z.addEventListener("dispose",aX);var L,K,J,G,I;Z instanceof THREE.MeshDepthMaterial?I="depth":Z instanceof THREE.MeshNormalMaterial?I="normal":Z instanceof THREE.MeshBasicMaterial?I="basic":Z instanceof THREE.MeshLambertMaterial?I="lambert":Z instanceof THREE.MeshPhongMaterial?I="phong":Z instanceof THREE.LineBasicMaterial?I="basic":Z instanceof THREE.LineDashedMaterial?I="dashed":Z instanceof THREE.ParticleBasicMaterial&&(I="particle_basic");if(I){var H=THREE.ShaderLib[I];Z.uniforms=THREE.UniformsUtils.clone(H.uniforms);Z.vertexShader=H.vertexShader;Z.fragmentShader=H.fragmentShader}var F,E,C;R=N=E=C=H=0;for(P=W.length;R<P;R++){F=W[R],F.onlyShadow||(F instanceof THREE.DirectionalLight&&N++,F instanceof THREE.PointLight&&E++,F instanceof THREE.SpotLight&&C++,F instanceof THREE.HemisphereLight&&H++)}R=N;P=E;N=C;M=H;H=F=0;for(C=W.length;H<C;H++){E=W[H],E.castShadow&&(E instanceof THREE.SpotLight&&F++,E instanceof THREE.DirectionalLight&&!E.shadowCascade&&F++)}G=F;aQ&&U&&U.useVertexTexture?J=1024:(W=az.getParameter(az.MAX_VERTEX_UNIFORM_VECTORS),W=Math.floor((W-20)/4),void 0!==U&&U instanceof THREE.SkinnedMesh&&(W=Math.min(U.bones.length,W),W<U.bones.length&&console.warn("WebGLRenderer: too many bones - "+U.bones.length+", this GPU supports just "+W+" (try OpenGL instead of ANGLE)")),J=W);Z:{C=Z.fragmentShader;E=Z.vertexShader;H=Z.uniforms;W=Z.attributes;F=Z.defines;var V={map:!!Z.map,envMap:!!Z.envMap,lightMap:!!Z.lightMap,bumpMap:!!Z.bumpMap,normalMap:!!Z.normalMap,specularMap:!!Z.specularMap,vertexColors:Z.vertexColors,fog:V,useFog:Z.fog,fogExp:V instanceof THREE.FogExp2,sizeAttenuation:Z.sizeAttenuation,skinning:Z.skinning,maxBones:J,useVertexTexture:aQ&&U&&U.useVertexTexture,boneTextureWidth:U&&U.boneTextureWidth,boneTextureHeight:U&&U.boneTextureHeight,morphTargets:Z.morphTargets,morphNormals:Z.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:R,maxPointLights:P,maxSpotLights:N,maxHemiLights:M,maxShadows:G,shadowMapEnabled:this.shadowMapEnabled&&U.receiveShadow,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:Z.alphaTest,metal:Z.metal,perPixel:Z.perPixel,wrapAround:Z.wrapAround,doubleSided:Z.side===THREE.DoubleSide,flipSided:Z.side===THREE.BackSide},B,z,A,U=[];I?U.push(I):(U.push(C),U.push(E));for(z in F){U.push(z),U.push(F[z])}for(B in V){U.push(B),U.push(V[B])}I=U.join();B=0;for(z=bz.length;B<z;B++){if(U=bz[B],U.code===I){U.usedTimes++;K=U.program;break Z}}B="SHADOWMAP_TYPE_BASIC";V.shadowMapType===THREE.PCFShadowMap?B="SHADOWMAP_TYPE_PCF":V.shadowMapType===THREE.PCFSoftShadowMap&&(B="SHADOWMAP_TYPE_PCF_SOFT");z=[];for(A in F){U=F[A],!1!==U&&(U="#define "+A+" "+U,z.push(U))}U=z.join("\n");A=az.createProgram();z=["precision "+aW+" float;",U,v?"#define VERTEX_TEXTURES":"",aZ.gammaInput?"#define GAMMA_INPUT":"",aZ.gammaOutput?"#define GAMMA_OUTPUT":"",aZ.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+V.maxDirLights,"#define MAX_POINT_LIGHTS "+V.maxPointLights,"#define MAX_SPOT_LIGHTS "+V.maxSpotLights,"#define MAX_HEMI_LIGHTS "+V.maxHemiLights,"#define MAX_SHADOWS "+V.maxShadows,"#define MAX_BONES "+V.maxBones,V.map?"#define USE_MAP":"",V.envMap?"#define USE_ENVMAP":"",V.lightMap?"#define USE_LIGHTMAP":"",V.bumpMap?"#define USE_BUMPMAP":"",V.normalMap?"#define USE_NORMALMAP":"",V.specularMap?"#define USE_SPECULARMAP":"",V.vertexColors?"#define USE_COLOR":"",V.skinning?"#define USE_SKINNING":"",V.useVertexTexture?"#define BONE_TEXTURE":"",V.boneTextureWidth?"#define N_BONE_PIXEL_X "+V.boneTextureWidth.toFixed(1):"",V.boneTextureHeight?"#define N_BONE_PIXEL_Y "+V.boneTextureHeight.toFixed(1):"",V.morphTargets?"#define USE_MORPHTARGETS":"",V.morphNormals?"#define USE_MORPHNORMALS":"",V.perPixel?"#define PHONG_PER_PIXEL":"",V.wrapAround?"#define WRAP_AROUND":"",V.doubleSided?"#define DOUBLE_SIDED":"",V.flipSided?"#define FLIP_SIDED":"",V.shadowMapEnabled?"#define USE_SHADOWMAP":"",V.shadowMapEnabled?"#define "+B:"",V.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",V.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",V.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");B=["precision "+aW+" float;",V.bumpMap||V.normalMap?"#extension GL_OES_standard_derivatives : enable":"",U,"#define MAX_DIR_LIGHTS "+V.maxDirLights,"#define MAX_POINT_LIGHTS "+V.maxPointLights,"#define MAX_SPOT_LIGHTS "+V.maxSpotLights,"#define MAX_HEMI_LIGHTS "+V.maxHemiLights,"#define MAX_SHADOWS "+V.maxShadows,V.alphaTest?"#define ALPHATEST "+V.alphaTest:"",aZ.gammaInput?"#define GAMMA_INPUT":"",aZ.gammaOutput?"#define GAMMA_OUTPUT":"",aZ.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",V.useFog&&V.fog?"#define USE_FOG":"",V.useFog&&V.fogExp?"#define FOG_EXP2":"",V.map?"#define USE_MAP":"",V.envMap?"#define USE_ENVMAP":"",V.lightMap?"#define USE_LIGHTMAP":"",V.bumpMap?"#define USE_BUMPMAP":"",V.normalMap?"#define USE_NORMALMAP":"",V.specularMap?"#define USE_SPECULARMAP":"",V.vertexColors?"#define USE_COLOR":"",V.metal?"#define METAL":"",V.perPixel?"#define PHONG_PER_PIXEL":"",V.wrapAround?"#define WRAP_AROUND":"",V.doubleSided?"#define DOUBLE_SIDED":"",V.flipSided?"#define FLIP_SIDED":"",V.shadowMapEnabled?"#define USE_SHADOWMAP":"",V.shadowMapEnabled?"#define "+B:"",V.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",V.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");z=a1("vertex",z+E);B=a1("fragment",B+C);az.attachShader(A,z);az.attachShader(A,B);az.linkProgram(A);az.getProgramParameter(A,az.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+az.getProgramParameter(A,az.VALIDATE_STATUS)+", gl error ["+az.getError()+"]");az.deleteShader(B);az.deleteShader(z);A.uniforms={};A.attributes={};var k;B="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" ");V.useVertexTexture?B.push("boneTexture"):B.push("boneGlobalMatrices");for(k in H){B.push(k)}k=B;B=0;for(z=k.length;B<z;B++){H=k[B],A.uniforms[H]=az.getUniformLocation(A,H)}B="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" ");for(k=0;k<V.maxMorphTargets;k++){B.push("morphTarget"+k)}for(k=0;k<V.maxMorphNormals;k++){B.push("morphNormal"+k)}for(K in W){B.push(K)}K=B;k=0;for(W=K.length;k<W;k++){B=K[k],A.attributes[B]=az.getAttribLocation(A,B)}A.id=am++;bz.push({program:A,code:I,usedTimes:1});aZ.info.memory.programs=bz.length;K=A}Z.program=K;k=Z.program.attributes;if(Z.morphTargets){Z.numSupportedMorphTargets=0;W="morphTarget";for(K=0;K<this.maxMorphTargets;K++){A=W+K,0<=k[A]&&Z.numSupportedMorphTargets++}}if(Z.morphNormals){Z.numSupportedMorphNormals=0;W="morphNormal";for(K=0;K<this.maxMorphNormals;K++){A=W+K,0<=k[A]&&Z.numSupportedMorphNormals++}}Z.uniformsList=[];for(L in Z.uniforms){Z.uniformsList.push([Z.uniforms[L],L])}};this.setFaceCulling=function(d,c){d===THREE.CullFaceNone?az.disable(az.CULL_FACE):(c===THREE.FrontFaceDirectionCW?az.frontFace(az.CW):az.frontFace(az.CCW),d===THREE.CullFaceBack?az.cullFace(az.BACK):d===THREE.CullFaceFront?az.cullFace(az.FRONT):az.cullFace(az.FRONT_AND_BACK),az.enable(az.CULL_FACE))};this.setMaterialFaces=function(d){var c=d.side===THREE.DoubleSide,d=d.side===THREE.BackSide;aT!==c&&(c?az.disable(az.CULL_FACE):az.enable(az.CULL_FACE),aT=c);aa!==d&&(d?az.frontFace(az.CW):az.frontFace(az.CCW),aa=d)};this.setDepthTest=function(b){D!==b&&(b?az.enable(az.DEPTH_TEST):az.disable(az.DEPTH_TEST),D=b)};this.setDepthWrite=function(b){aK!==b&&(az.depthMask(b),aK=b)};this.setBlending=function(f,e,h,g){f!==bC&&(f===THREE.NoBlending?az.disable(az.BLEND):f===THREE.AdditiveBlending?(az.enable(az.BLEND),az.blendEquation(az.FUNC_ADD),az.blendFunc(az.SRC_ALPHA,az.ONE)):f===THREE.SubtractiveBlending?(az.enable(az.BLEND),az.blendEquation(az.FUNC_ADD),az.blendFunc(az.ZERO,az.ONE_MINUS_SRC_COLOR)):f===THREE.MultiplyBlending?(az.enable(az.BLEND),az.blendEquation(az.FUNC_ADD),az.blendFunc(az.ZERO,az.SRC_COLOR)):f===THREE.CustomBlending?az.enable(az.BLEND):(az.enable(az.BLEND),az.blendEquationSeparate(az.FUNC_ADD,az.FUNC_ADD),az.blendFuncSeparate(az.SRC_ALPHA,az.ONE_MINUS_SRC_ALPHA,az.ONE,az.ONE_MINUS_SRC_ALPHA)),bC=f);if(f===THREE.CustomBlending){if(e!==a5&&(az.blendEquation(a6(e)),a5=e),h!==aC||g!==ai){az.blendFunc(a6(h),a6(g)),aC=h,ai=g}}else{ai=aC=a5=null}};this.setTexture=function(s,r){if(s.needsUpdate){s.__webglInit||(s.__webglInit=!0,s.addEventListener("dispose",aF),s.__webglTexture=az.createTexture(),aZ.info.memory.textures++);az.activeTexture(az.TEXTURE0+r);az.bindTexture(az.TEXTURE_2D,s.__webglTexture);az.pixelStorei(az.UNPACK_FLIP_Y_WEBGL,s.flipY);az.pixelStorei(az.UNPACK_PREMULTIPLY_ALPHA_WEBGL,s.premultiplyAlpha);az.pixelStorei(az.UNPACK_ALIGNMENT,s.unpackAlignment);var q=s.image,p=0===(q.width&q.width-1)&&0===(q.height&q.height-1),n=a6(s.format),m=a6(s.type);bf(az.TEXTURE_2D,s,p);var l=s.mipmaps;if(s instanceof THREE.DataTexture){if(0<l.length&&p){for(var k=0,j=l.length;k<j;k++){q=l[k],az.texImage2D(az.TEXTURE_2D,k,n,q.width,q.height,0,n,m,q.data)}s.generateMipmaps=!1}else{az.texImage2D(az.TEXTURE_2D,0,n,q.width,q.height,0,n,m,q.data)}}else{if(s instanceof THREE.CompressedTexture){k=0;for(j=l.length;k<j;k++){q=l[k],az.compressedTexImage2D(az.TEXTURE_2D,k,n,q.width,q.height,0,q.data)}}else{if(0<l.length&&p){k=0;for(j=l.length;k<j;k++){q=l[k],az.texImage2D(az.TEXTURE_2D,k,n,n,m,q)}s.generateMipmaps=!1}else{az.texImage2D(az.TEXTURE_2D,0,n,n,m,s.image)}}}s.generateMipmaps&&p&&az.generateMipmap(az.TEXTURE_2D);s.needsUpdate=!1;if(s.onUpdate){s.onUpdate()}}else{az.activeTexture(az.TEXTURE0+r),az.bindTexture(az.TEXTURE_2D,s.__webglTexture)}};this.setRenderTarget=function(j){var i=j instanceof THREE.WebGLRenderTargetCube;if(j&&!j.__webglFramebuffer){void 0===j.depthBuffer&&(j.depthBuffer=!0);void 0===j.stencilBuffer&&(j.stencilBuffer=!0);j.addEventListener("dispose",aV);j.__webglTexture=az.createTexture();aZ.info.memory.textures++;var q=0===(j.width&j.width-1)&&0===(j.height&j.height-1),p=a6(j.format),n=a6(j.type);if(i){j.__webglFramebuffer=[];j.__webglRenderbuffer=[];az.bindTexture(az.TEXTURE_CUBE_MAP,j.__webglTexture);bf(az.TEXTURE_CUBE_MAP,j,q);for(var m=0;6>m;m++){j.__webglFramebuffer[m]=az.createFramebuffer();j.__webglRenderbuffer[m]=az.createRenderbuffer();az.texImage2D(az.TEXTURE_CUBE_MAP_POSITIVE_X+m,0,p,j.width,j.height,0,p,n,null);var l=j,k=az.TEXTURE_CUBE_MAP_POSITIVE_X+m;az.bindFramebuffer(az.FRAMEBUFFER,j.__webglFramebuffer[m]);az.framebufferTexture2D(az.FRAMEBUFFER,az.COLOR_ATTACHMENT0,k,l.__webglTexture,0);aU(j.__webglRenderbuffer[m],j)}q&&az.generateMipmap(az.TEXTURE_CUBE_MAP)}else{j.__webglFramebuffer=az.createFramebuffer(),j.__webglRenderbuffer=j.shareDepthFrom?j.shareDepthFrom.__webglRenderbuffer:az.createRenderbuffer(),az.bindTexture(az.TEXTURE_2D,j.__webglTexture),bf(az.TEXTURE_2D,j,q),az.texImage2D(az.TEXTURE_2D,0,p,j.width,j.height,0,p,n,null),p=az.TEXTURE_2D,az.bindFramebuffer(az.FRAMEBUFFER,j.__webglFramebuffer),az.framebufferTexture2D(az.FRAMEBUFFER,az.COLOR_ATTACHMENT0,p,j.__webglTexture,0),j.shareDepthFrom?j.depthBuffer&&!j.stencilBuffer?az.framebufferRenderbuffer(az.FRAMEBUFFER,az.DEPTH_ATTACHMENT,az.RENDERBUFFER,j.__webglRenderbuffer):j.depthBuffer&&j.stencilBuffer&&az.framebufferRenderbuffer(az.FRAMEBUFFER,az.DEPTH_STENCIL_ATTACHMENT,az.RENDERBUFFER,j.__webglRenderbuffer):aU(j.__webglRenderbuffer,j),q&&az.generateMipmap(az.TEXTURE_2D)}i?az.bindTexture(az.TEXTURE_CUBE_MAP,null):az.bindTexture(az.TEXTURE_2D,null);az.bindRenderbuffer(az.RENDERBUFFER,null);az.bindFramebuffer(az.FRAMEBUFFER,null)}j?(i=i?j.__webglFramebuffer[j.activeCubeFace]:j.__webglFramebuffer,q=j.width,j=j.height,n=p=0):(i=null,q=af,j=bi,p=br,n=bs);i!==bx&&(az.bindFramebuffer(az.FRAMEBUFFER,i),az.viewport(p,n,q,j),bx=i);bu=q;bj=j};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};THREE.WebGLRenderTarget=function(e,d,f){this.width=e;this.height=d;f=f||{};this.wrapS=void 0!==f.wrapS?f.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==f.wrapT?f.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==f.magFilter?f.magFilter:THREE.LinearFilter;this.minFilter=void 0!==f.minFilter?f.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==f.anisotropy?f.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==f.format?f.format:THREE.RGBAFormat;this.type=void 0!==f.type?f.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==f.depthBuffer?f.depthBuffer:!0;this.stencilBuffer=void 0!==f.stencilBuffer?f.stencilBuffer:!0;this.generateMipmaps=!0;this.shareDepthFrom=null};THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent,clone:function(){var b=new THREE.WebGLRenderTarget(this.width,this.height);b.wrapS=this.wrapS;b.wrapT=this.wrapT;b.magFilter=this.magFilter;b.minFilter=this.minFilter;b.anisotropy=this.anisotropy;b.offset.copy(this.offset);b.repeat.copy(this.repeat);b.format=this.format;b.type=this.type;b.depthBuffer=this.depthBuffer;b.stencilBuffer=this.stencilBuffer;b.generateMipmaps=this.generateMipmaps;b.shareDepthFrom=this.shareDepthFrom;return b},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.WebGLRenderTargetCube=function(e,d,f){THREE.WebGLRenderTarget.call(this,e,d,f);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};THREE.RenderableVertex.prototype.copy=function(b){this.positionWorld.copy(b.positionWorld);this.positionScreen.copy(b.positionScreen)};THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.centroidModel=new THREE.Vector3;this.normalModel=new THREE.Vector3;this.normalModelView=new THREE.Vector3;this.vertexNormalsLength=0;this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.material=this.color=null;this.uvs=[[]];this.z=null};THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.v4=new THREE.RenderableVertex;this.centroidModel=new THREE.Vector3;this.normalModel=new THREE.Vector3;this.normalModelView=new THREE.Vector3;this.vertexNormalsLength=0;this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.material=this.color=null;this.uvs=[[]];this.z=null};THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=this.object=null;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.vertexColors=[new THREE.Color,new THREE.Color];this.material=null};THREE.GeometryUtils={merge:function(G,F,E){var D,C,B=G.vertices.length,A=F instanceof THREE.Mesh?F.geometry:F,z=G.vertices,y=A.vertices,x=G.faces,v=A.faces,G=G.faceVertexUvs[0],A=A.faceVertexUvs[0];void 0===E&&(E=0);F instanceof THREE.Mesh&&(F.matrixAutoUpdate&&F.updateMatrix(),D=F.matrix,C=(new THREE.Matrix3).getNormalMatrix(D));for(var F=0,t=y.length;F<t;F++){var w=y[F].clone();D&&w.applyMatrix4(D);z.push(w)}F=0;for(t=v.length;F<t;F++){var w=v[F],k,H,u=w.vertexNormals,o=w.vertexColors;w instanceof THREE.Face3?k=new THREE.Face3(w.a+B,w.b+B,w.c+B):w instanceof THREE.Face4&&(k=new THREE.Face4(w.a+B,w.b+B,w.c+B,w.d+B));k.normal.copy(w.normal);C&&k.normal.applyMatrix3(C).normalize();z=0;for(y=u.length;z<y;z++){H=u[z].clone(),C&&H.applyMatrix3(C).normalize(),k.vertexNormals.push(H)}k.color.copy(w.color);z=0;for(y=o.length;z<y;z++){H=o[z],k.vertexColors.push(H.clone())}k.materialIndex=w.materialIndex+E;k.centroid.copy(w.centroid);D&&k.centroid.applyMatrix4(D);x.push(k)}F=0;for(t=A.length;F<t;F++){E=A[F];D=[];z=0;for(y=E.length;z<y;z++){D.push(new THREE.Vector2(E[z].x,E[z].y))}G.push(D)}},removeMaterials:function(i,h){for(var n={},m=0,l=h.length;m<l;m++){n[h[m]]=!0}for(var k,j=[],m=0,l=i.faces.length;m<l;m++){k=i.faces[m],k.materialIndex in n||j.push(k)}i.faces=j},randomPointInTriangle:function(j,i,p){var o,n,m,l=new THREE.Vector3,k=THREE.GeometryUtils.__v1;o=THREE.GeometryUtils.random();n=THREE.GeometryUtils.random();1<o+n&&(o=1-o,n=1-n);m=1-o-n;l.copy(j);l.multiplyScalar(o);k.copy(i);k.multiplyScalar(n);l.add(k);k.copy(p);k.multiplyScalar(m);l.add(k);return l},randomPointInFace:function(i,h,n){var m,l,k;if(i instanceof THREE.Face3){return m=h.vertices[i.a],l=h.vertices[i.b],k=h.vertices[i.c],THREE.GeometryUtils.randomPointInTriangle(m,l,k)}if(i instanceof THREE.Face4){m=h.vertices[i.a];l=h.vertices[i.b];k=h.vertices[i.c];var h=h.vertices[i.d],j;n?i._area1&&i._area2?(n=i._area1,j=i._area2):(n=THREE.GeometryUtils.triangleArea(m,l,h),j=THREE.GeometryUtils.triangleArea(l,k,h),i._area1=n,i._area2=j):(n=THREE.GeometryUtils.triangleArea(m,l,h),j=THREE.GeometryUtils.triangleArea(l,k,h));return THREE.GeometryUtils.random()*(n+j)<n?THREE.GeometryUtils.randomPointInTriangle(m,l,h):THREE.GeometryUtils.randomPointInTriangle(l,k,h)}},randomPointsInGeometry:function(B,A){function z(d){function c(f,b){if(b<f){return f}var a=f+Math.floor((b-f)/2);return s[a]>d?c(f,a-1):s[a]<d?c(a+1,b):a}return c(0,s.length-1)}var y,x,w=B.faces,v=B.vertices,u=w.length,t=0,s=[],o,n,q,k;for(x=0;x<u;x++){y=w[x],y instanceof THREE.Face3?(o=v[y.a],n=v[y.b],q=v[y.c],y._area=THREE.GeometryUtils.triangleArea(o,n,q)):y instanceof THREE.Face4&&(o=v[y.a],n=v[y.b],q=v[y.c],k=v[y.d],y._area1=THREE.GeometryUtils.triangleArea(o,n,k),y._area2=THREE.GeometryUtils.triangleArea(n,q,k),y._area=y._area1+y._area2),t+=y._area,s[x]=t}y=[];for(x=0;x<A;x++){v=THREE.GeometryUtils.random()*t,v=z(v),y[x]=THREE.GeometryUtils.randomPointInFace(w[v],B,!0)}return y},triangleArea:function(g,f,j){var i=THREE.GeometryUtils.__v1,h=THREE.GeometryUtils.__v2;i.subVectors(f,g);h.subVectors(j,g);i.cross(h);return 0.5*i.length()},center:function(e){e.computeBoundingBox();var d=e.boundingBox,f=new THREE.Vector3;f.addVectors(d.min,d.max);f.multiplyScalar(-0.5);e.applyMatrix((new THREE.Matrix4).makeTranslation(f.x,f.y,f.z));e.computeBoundingBox();return f},normalizeUVs:function(h){for(var h=h.faceVertexUvs[0],g=0,l=h.length;g<l;g++){for(var k=h[g],j=0,i=k.length;j<i;j++){1!==k[j].x&&(k[j].x-=Math.floor(k[j].x)),1!==k[j].y&&(k[j].y-=Math.floor(k[j].y))}}},triangulateQuads:function(z){var y,x,w,v,u=[],t=[],s=[];y=0;for(x=z.faceUvs.length;y<x;y++){t[y]=[]}y=0;for(x=z.faceVertexUvs.length;y<x;y++){s[y]=[]}y=0;for(x=z.faces.length;y<x;y++){if(w=z.faces[y],w instanceof THREE.Face4){v=w.a;var r=w.b,q=w.c,n=w.d,k=new THREE.Face3,o=new THREE.Face3;k.color.copy(w.color);o.color.copy(w.color);k.materialIndex=w.materialIndex;o.materialIndex=w.materialIndex;k.a=v;k.b=r;k.c=n;o.a=r;o.b=q;o.c=n;4===w.vertexColors.length&&(k.vertexColors[0]=w.vertexColors[0].clone(),k.vertexColors[1]=w.vertexColors[1].clone(),k.vertexColors[2]=w.vertexColors[3].clone(),o.vertexColors[0]=w.vertexColors[1].clone(),o.vertexColors[1]=w.vertexColors[2].clone(),o.vertexColors[2]=w.vertexColors[3].clone());u.push(k,o);w=0;for(v=z.faceVertexUvs.length;w<v;w++){z.faceVertexUvs[w].length&&(k=z.faceVertexUvs[w][y],r=k[1],q=k[2],n=k[3],k=[k[0].clone(),r.clone(),n.clone()],r=[r.clone(),q.clone(),n.clone()],s[w].push(k,r))}w=0;for(v=z.faceUvs.length;w<v;w++){z.faceUvs[w].length&&(r=z.faceUvs[w][y],t[w].push(r,r))}}else{u.push(w);w=0;for(v=z.faceUvs.length;w<v;w++){t[w].push(z.faceUvs[w][y])}w=0;for(v=z.faceVertexUvs.length;w<v;w++){s[w].push(z.faceVertexUvs[w][y])}}}z.faces=u;z.faceUvs=t;z.faceVertexUvs=s;z.computeCentroids();z.computeFaceNormals();z.computeVertexNormals();z.hasTangents&&z.computeTangents()},setMaterialIndex:function(f,e,h,g){f=f.faces;g=g||f.length-1;for(h=h||0;h<=g;h++){f[h].materialIndex=e}}};THREE.GeometryUtils.random=THREE.Math.random16;THREE.GeometryUtils.__v1=new THREE.Vector3;THREE.GeometryUtils.__v2=new THREE.Vector3;THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(h,g,l,k){var j=new Image,i=new THREE.Texture(j,g),g=new THREE.ImageLoader;g.addEventListener("load",function(b){i.image=b.content;i.needsUpdate=!0;l&&l(i)});g.addEventListener("error",function(b){k&&k(b.message)});g.crossOrigin=this.crossOrigin;g.load(h,j);i.sourceFile=h;return i},loadCompressedTexture:function(h,g,l,k){var j=new THREE.CompressedTexture;j.mapping=g;var i=new XMLHttpRequest;i.onload=function(){var b=THREE.ImageUtils.parseDDS(i.response,!0);j.format=b.format;j.mipmaps=b.mipmaps;j.image.width=b.width;j.image.height=b.height;j.generateMipmaps=!1;j.needsUpdate=!0;l&&l(j)};i.onerror=k;i.open("GET",h,!0);i.responseType="arraybuffer";i.send(null);return j},loadTextureCube:function(j,i,p,o){var n=[];n.loadCount=0;var m=new THREE.Texture;m.image=n;void 0!==i&&(m.mapping=i);m.flipY=!1;for(var i=0,l=j.length;i<l;++i){var k=new Image;n[i]=k;k.onload=function(){n.loadCount+=1;6===n.loadCount&&(m.needsUpdate=!0,p&&p(m))};k.onerror=o;k.crossOrigin=this.crossOrigin;k.src=j[i]}return m},loadCompressedTextureCube:function(t,s,r,q){var p=[];p.loadCount=0;var o=new THREE.CompressedTexture;o.image=p;void 0!==s&&(o.mapping=s);o.flipY=!1;o.generateMipmaps=!1;s=function(d,c){return function(){var a=THREE.ImageUtils.parseDDS(d.response,!0);c.format=a.format;c.mipmaps=a.mipmaps;c.width=a.width;c.height=a.height;p.loadCount+=1;6===p.loadCount&&(o.format=a.format,o.needsUpdate=!0,r&&r(o))}};if(t instanceof Array){for(var n=0,m=t.length;n<m;++n){var l={};p[n]=l;var k=new XMLHttpRequest;k.onload=s(k,l);k.onerror=q;l=t[n];k.open("GET",l,!0);k.responseType="arraybuffer";k.send(null)}}else{k=new XMLHttpRequest,k.onload=function(){var e=THREE.ImageUtils.parseDDS(k.response,!0);if(e.isCubemap){for(var c=e.mipmaps.length/e.mipmapCount,h=0;h<c;h++){p[h]={mipmaps:[]};for(var f=0;f<e.mipmapCount;f++){p[h].mipmaps.push(e.mipmaps[h*e.mipmapCount+f]),p[h].format=e.format,p[h].width=e.width,p[h].height=e.height}}o.format=e.format;o.needsUpdate=!0;r&&r(o)}},k.onerror=q,k.open("GET",t,!0),k.responseType="arraybuffer",k.send(null)}return o},parseDDS:function(z,y){function x(b){return b.charCodeAt(0)+(b.charCodeAt(1)<<8)+(b.charCodeAt(2)<<16)+(b.charCodeAt(3)<<24)}var w={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},v=x("DXT1"),u=x("DXT3"),t=x("DXT5"),s=new Int32Array(z,0,31);if(542327876!==s[0]){return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),w}if(!s[20]&4){return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),w}var r=s[21];switch(r){case v:v=8;w.format=THREE.RGB_S3TC_DXT1_Format;break;case u:v=16;w.format=THREE.RGBA_S3TC_DXT3_Format;break;case t:v=16;w.format=THREE.RGBA_S3TC_DXT5_Format;break;default:return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",String.fromCharCode(r&255,r>>8&255,r>>16&255,r>>24&255)),w}w.mipmapCount=1;s[2]&131072&&!1!==y&&(w.mipmapCount=Math.max(1,s[7]));w.isCubemap=s[28]&512?!0:!1;w.width=s[4];w.height=s[3];for(var s=s[1]+4,u=w.width,t=w.height,r=w.isCubemap?6:1,q=0;q<r;q++){for(var n=0;n<w.mipmapCount;n++){var k=Math.max(4,u)/4*Math.max(4,t)/4*v,o={data:new Uint8Array(z,s,k),width:u,height:t};w.mipmaps.push(o);s+=k;u=Math.max(0.5*u,1);t=Math.max(0.5*t,1)}u=w.width;t=w.height}return w},getNormalMap:function(L,K){var J=function(d){var c=Math.sqrt(d[0]*d[0]+d[1]*d[1]+d[2]*d[2]);return[d[0]/c,d[1]/c,d[2]/c]},K=K|1,I=L.width,H=L.height,G=document.createElement("canvas");G.width=I;G.height=H;var F=G.getContext("2d");F.drawImage(L,0,0);for(var E=F.getImageData(0,0,I,H).data,D=F.createImageData(I,H),C=D.data,A=0;A<I;A++){for(var x=0;x<H;x++){var B=0>x-1?0:x-1,v=x+1>H-1?H-1:x+1,t=0>A-1?0:A-1,z=A+1>I-1?I-1:A+1,w=[],k=[0,0,E[4*(x*I+A)]/255*K];w.push([-1,0,E[4*(x*I+t)]/255*K]);w.push([-1,-1,E[4*(B*I+t)]/255*K]);w.push([0,-1,E[4*(B*I+A)]/255*K]);w.push([1,-1,E[4*(B*I+z)]/255*K]);w.push([1,0,E[4*(x*I+z)]/255*K]);w.push([1,1,E[4*(v*I+z)]/255*K]);w.push([0,1,E[4*(v*I+A)]/255*K]);w.push([-1,1,E[4*(v*I+t)]/255*K]);B=[];t=w.length;for(v=0;v<t;v++){var z=w[v],o=w[(v+1)%t],z=[z[0]-k[0],z[1]-k[1],z[2]-k[2]],o=[o[0]-k[0],o[1]-k[1],o[2]-k[2]];B.push(J([z[1]*o[2]-z[2]*o[1],z[2]*o[0]-z[0]*o[2],z[0]*o[1]-z[1]*o[0]]))}w=[0,0,0];for(v=0;v<B.length;v++){w[0]+=B[v][0],w[1]+=B[v][1],w[2]+=B[v][2]}w[0]/=B.length;w[1]/=B.length;w[2]/=B.length;k=4*(x*I+A);C[k]=255*((w[0]+1)/2)|0;C[k+1]=255*((w[1]+1)/2)|0;C[k+2]=255*w[2]|0;C[k+3]=255}}F.putImageData(D,0,0);return G},generateDataTexture:function(j,i,p){for(var o=j*i,n=new Uint8Array(3*o),m=Math.floor(255*p.r),l=Math.floor(255*p.g),p=Math.floor(255*p.b),k=0;k<o;k++){n[3*k]=m,n[3*k+1]=l,n[3*k+2]=p}j=new THREE.DataTexture(n,j,i,THREE.RGBFormat);j.needsUpdate=!0;return j}};THREE.SceneUtils={createMultiMaterialObject:function(g,f){for(var j=new THREE.Object3D,i=0,h=f.length;i<h;i++){j.add(new THREE.Mesh(g,f[i]))}return j},detach:function(e,d,f){e.applyMatrix(d.matrixWorld);d.remove(e);f.add(e)},attach:function(f,e,h){var g=new THREE.Matrix4;g.getInverse(h.matrixWorld);f.applyMatrix(g);e.remove(f);h.add(f)}};THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(d){var c=d.familyName.toLowerCase();this.faces[c]=this.faces[c]||{};this.faces[c][d.cssFontWeight]=this.faces[c][d.cssFontWeight]||{};this.faces[c][d.cssFontWeight][d.cssFontStyle]=d;return this.faces[c][d.cssFontWeight][d.cssFontStyle]=d},drawText:function(j){for(var i=this.getFace(),p=this.size/i.resolution,o=0,n=String(j).split(""),m=n.length,l=[],j=0;j<m;j++){var k=new THREE.Path,k=this.extractGlyphPoints(n[j],i,p,o,k),o=o+k.offset;l.push(k.path)}return{paths:l,offset:o/2}},extractGlyphPoints:function(L,K,J,I,H){var G=[],F,E,D,C,A,x,B,v,t,z,w,k=K.glyphs[L]||K.glyphs["?"];if(k){if(k.o){K=k._cachedOutline||(k._cachedOutline=k.o.split(" "));C=K.length;for(L=0;L<C;){switch(D=K[L++],D){case"m":D=K[L++]*J+I;A=K[L++]*J;H.moveTo(D,A);break;case"l":D=K[L++]*J+I;A=K[L++]*J;H.lineTo(D,A);break;case"q":D=K[L++]*J+I;A=K[L++]*J;v=K[L++]*J+I;t=K[L++]*J;H.quadraticCurveTo(v,t,D,A);if(F=G[G.length-1]){x=F.x;B=F.y;F=1;for(E=this.divisions;F<=E;F++){var o=F/E;THREE.Shape.Utils.b2(o,x,v,D);THREE.Shape.Utils.b2(o,B,t,A)}}break;case"b":if(D=K[L++]*J+I,A=K[L++]*J,v=K[L++]*J+I,t=K[L++]*-J,z=K[L++]*J+I,w=K[L++]*-J,H.bezierCurveTo(D,A,v,t,z,w),F=G[G.length-1]){x=F.x;B=F.y;F=1;for(E=this.divisions;F<=E;F++){o=F/E,THREE.Shape.Utils.b3(o,x,v,z,D),THREE.Shape.Utils.b3(o,B,t,w,A)}}}}}return{offset:k.ha*J,path:H}}}};THREE.FontUtils.generateShapes=function(h,g){var g=g||{},l=void 0!==g.curveSegments?g.curveSegments:4,k=void 0!==g.font?g.font:"helvetiker",j=void 0!==g.weight?g.weight:"normal",i=void 0!==g.style?g.style:"normal";THREE.FontUtils.size=void 0!==g.size?g.size:100;THREE.FontUtils.divisions=l;THREE.FontUtils.face=k;THREE.FontUtils.weight=j;THREE.FontUtils.style=i;l=THREE.FontUtils.drawText(h).paths;k=[];j=0;for(i=l.length;j<i;j++){Array.prototype.push.apply(k,l[j].toShapes())}return k};(function(d){var c=function(i){for(var h=i.length,l=0,k=h-1,j=0;j<h;k=j++){l+=i[k].x*i[j].y-i[j].x*i[k].y}return 0.5*l};d.Triangulate=function(ag,af){var ae=ag.length;if(3>ae){return null}var ad=[],ac=[],ab=[],aa,Z,X;if(0<c(ag)){for(Z=0;Z<ae;Z++){ac[Z]=Z}}else{for(Z=0;Z<ae;Z++){ac[Z]=ae-1-Z}}var U=2*ae;for(Z=ae-1;2<ae;){if(0>=U--){console.log("Warning, unable to triangulate polygon!");break}aa=Z;ae<=aa&&(aa=0);Z=aa+1;ae<=Z&&(Z=0);X=Z+1;ae<=X&&(X=0);var Y;ag:{var R=Y=void 0,Q=void 0,W=void 0,T=void 0,A=void 0,N=void 0,C=void 0,P=void 0,R=ag[ac[aa]].x,Q=ag[ac[aa]].y,W=ag[ac[Z]].x,T=ag[ac[Z]].y,A=ag[ac[X]].x,N=ag[ac[X]].y;if(1e-10>(W-R)*(N-Q)-(T-Q)*(A-R)){Y=!1}else{var O=void 0,w=void 0,M=void 0,v=void 0,D=void 0,o=void 0,I=void 0,k=void 0,S=void 0,b=void 0,S=k=I=P=C=void 0,O=A-W,w=N-T,M=R-A,v=Q-N,D=W-R,o=T-Q;for(Y=0;Y<ae;Y++){if(!(Y===aa||Y===Z||Y===X)){if(C=ag[ac[Y]].x,P=ag[ac[Y]].y,I=C-R,k=P-Q,S=C-W,b=P-T,C-=A,P-=N,S=O*b-w*S,I=D*k-o*I,k=M*P-v*C,0<=S&&0<=k&&0<=I){Y=!1;break ag}}}Y=!0}}if(Y){ad.push([ag[ac[aa]],ag[ac[Z]],ag[ac[X]]]);ab.push([ac[aa],ac[Z],ac[X]]);aa=Z;for(X=Z+1;X<ae;aa++,X++){ac[aa]=ac[X]}ae--;U=2*ae}}return af?ab:ad};d.Triangulate.area=c;return d})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.typeface_js=self._typeface_js;THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(b){b=this.getUtoTmapping(b);return this.getPoint(b)};THREE.Curve.prototype.getPoints=function(e){e||(e=5);var d,f=[];for(d=0;d<=e;d++){f.push(this.getPoint(d/e))}return f};THREE.Curve.prototype.getSpacedPoints=function(e){e||(e=5);var d,f=[];for(d=0;d<=e;d++){f.push(this.getPointAt(d/e))}return f};THREE.Curve.prototype.getLength=function(){var b=this.getLengths();return b[b.length-1]};THREE.Curve.prototype.getLengths=function(h){h||(h=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==h+1&&!this.needsUpdate){return this.cacheArcLengths}this.needsUpdate=!1;var g=[],l,k=this.getPoint(0),j,i=0;g.push(0);for(j=1;j<=h;j++){l=this.getPoint(j/h),i+=l.distanceTo(k),g.push(i),k=l}return this.cacheArcLengths=g};THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};THREE.Curve.prototype.getUtoTmapping=function(r,q){var p=this.getLengths(),o=0,n=p.length,m;m=q?q:r*p[n-1];for(var l=0,k=n-1,j;l<=k;){if(o=Math.floor(l+(k-l)/2),j=p[o]-m,0>j){l=o+1}else{if(0<j){k=o-1}else{k=o;break}}}o=k;if(p[o]==m){return o/(n-1)}l=p[o];return p=(o+(m-l)/(p[o+1]-l))/(n-1)};THREE.Curve.prototype.getTangent=function(d){var c=d-0.0001,d=d+0.0001;0>c&&(c=0);1<d&&(d=1);c=this.getPoint(c);return this.getPoint(d).clone().sub(c).normalize()};THREE.Curve.prototype.getTangentAt=function(b){b=this.getUtoTmapping(b);return this.getTangent(b)};THREE.LineCurve=function(d,c){this.v1=d;this.v2=c};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.getPoint=function(d){var c=this.v2.clone().sub(this.v1);c.multiplyScalar(d).add(this.v1);return c};THREE.LineCurve.prototype.getPointAt=function(b){return this.getPoint(b)};THREE.LineCurve.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()};THREE.QuadraticBezierCurve=function(e,d,f){this.v0=e;this.v1=d;this.v2=f};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.getPoint=function(d){var c;c=THREE.Shape.Utils.b2(d,this.v0.x,this.v1.x,this.v2.x);d=THREE.Shape.Utils.b2(d,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(c,d)};THREE.QuadraticBezierCurve.prototype.getTangent=function(d){var c;c=THREE.Curve.Utils.tangentQuadraticBezier(d,this.v0.x,this.v1.x,this.v2.x);d=THREE.Curve.Utils.tangentQuadraticBezier(d,this.v0.y,this.v1.y,this.v2.y);c=new THREE.Vector2(c,d);c.normalize();return c};THREE.CubicBezierCurve=function(f,e,h,g){this.v0=f;this.v1=e;this.v2=h;this.v3=g};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.CubicBezierCurve.prototype.getPoint=function(d){var c;c=THREE.Shape.Utils.b3(d,this.v0.x,this.v1.x,this.v2.x,this.v3.x);d=THREE.Shape.Utils.b3(d,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(c,d)};THREE.CubicBezierCurve.prototype.getTangent=function(d){var c;c=THREE.Curve.Utils.tangentCubicBezier(d,this.v0.x,this.v1.x,this.v2.x,this.v3.x);d=THREE.Curve.Utils.tangentCubicBezier(d,this.v0.y,this.v1.y,this.v2.y,this.v3.y);c=new THREE.Vector2(c,d);c.normalize();return c};THREE.SplineCurve=function(b){this.points=void 0==b?[]:b};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.getPoint=function(g){var f=new THREE.Vector2,j=[],i=this.points,h;h=(i.length-1)*g;g=Math.floor(h);h-=g;j[0]=0==g?g:g-1;j[1]=g;j[2]=g>i.length-2?i.length-1:g+1;j[3]=g>i.length-3?i.length-1:g+2;f.x=THREE.Curve.Utils.interpolate(i[j[0]].x,i[j[1]].x,i[j[2]].x,i[j[3]].x,h);f.y=THREE.Curve.Utils.interpolate(i[j[0]].y,i[j[1]].y,i[j[2]].y,i[j[3]].y,h);return f};THREE.EllipseCurve=function(i,h,n,m,l,k,j){this.aX=i;this.aY=h;this.xRadius=n;this.yRadius=m;this.aStartAngle=l;this.aEndAngle=k;this.aClockwise=j};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.getPoint=function(d){var c=this.aEndAngle-this.aStartAngle;this.aClockwise||(d=1-d);c=this.aStartAngle+d*c;d=this.aX+this.xRadius*Math.cos(c);c=this.aY+this.yRadius*Math.sin(c);return new THREE.Vector2(d,c)};THREE.ArcCurve=function(h,g,l,k,j,i){THREE.EllipseCurve.call(this,h,g,l,l,k,j,i)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);THREE.Curve.Utils={tangentQuadraticBezier:function(f,e,h,g){return 2*(1-f)*(h-e)+2*f*(g-h)},tangentCubicBezier:function(g,f,j,i,h){return -3*f*(1-g)*(1-g)+3*j*(1-g)*(1-g)-6*g*j*(1-g)+6*g*i*(1-g)-3*g*g*i+3*g*g*h},tangentSpline:function(b){return 6*b*b-6*b+(3*b*b-4*b+1)+(-6*b*b+6*b)+(3*b*b-2*b)},interpolate:function(h,g,l,k,j){var h=0.5*(l-h),k=0.5*(k-g),i=j*j;return(2*g-2*l+h+k)*j*i+(-3*g+3*l-2*h-k)*i+h*j+g}};THREE.Curve.create=function(d,c){d.prototype=Object.create(THREE.Curve.prototype);d.prototype.getPoint=c;return d};THREE.LineCurve3=THREE.Curve.create(function(d,c){this.v1=d;this.v2=c},function(d){var c=new THREE.Vector3;c.subVectors(this.v2,this.v1);c.multiplyScalar(d);c.add(this.v1);return c});THREE.QuadraticBezierCurve3=THREE.Curve.create(function(e,d,f){this.v0=e;this.v1=d;this.v2=f},function(e){var d,f;d=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x);f=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y);e=THREE.Shape.Utils.b2(e,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(d,f,e)});THREE.CubicBezierCurve3=THREE.Curve.create(function(f,e,h,g){this.v0=f;this.v1=e;this.v2=h;this.v3=g},function(e){var d,f;d=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x);f=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y);e=THREE.Shape.Utils.b3(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(d,f,e)});THREE.SplineCurve3=THREE.Curve.create(function(b){this.points=void 0==b?[]:b},function(i){var h=new THREE.Vector3,n=[],m=this.points,l,i=(m.length-1)*i;l=Math.floor(i);i-=l;n[0]=0==l?l:l-1;n[1]=l;n[2]=l>m.length-2?m.length-1:l+1;n[3]=l>m.length-3?m.length-1:l+2;l=m[n[0]];var k=m[n[1]],j=m[n[2]],n=m[n[3]];h.x=THREE.Curve.Utils.interpolate(l.x,k.x,j.x,n.x,i);h.y=THREE.Curve.Utils.interpolate(l.y,k.y,j.y,n.y,i);h.z=THREE.Curve.Utils.interpolate(l.z,k.z,j.z,n.z,i);return h});THREE.ClosedSplineCurve3=THREE.Curve.create(function(b){this.points=void 0==b?[]:b},function(g){var f=new THREE.Vector3,j=[],i=this.points,h;h=(i.length-0)*g;g=Math.floor(h);h-=g;g+=0<g?0:(Math.floor(Math.abs(g)/i.length)+1)*i.length;j[0]=(g-1)%i.length;j[1]=g%i.length;j[2]=(g+1)%i.length;j[3]=(g+2)%i.length;f.x=THREE.Curve.Utils.interpolate(i[j[0]].x,i[j[1]].x,i[j[2]].x,i[j[3]].x,h);f.y=THREE.Curve.Utils.interpolate(i[j[0]].y,i[j[1]].y,i[j[2]].y,i[j[3]].y,h);f.z=THREE.Curve.Utils.interpolate(i[j[0]].z,i[j[1]].z,i[j[2]].z,i[j[3]].z,h);return f});THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(b){this.curves.push(b)};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){var d=this.curves[0].getPoint(0),c=this.curves[this.curves.length-1].getPoint(1);d.equals(c)||this.curves.push(new THREE.LineCurve(c,d))};THREE.CurvePath.prototype.getPoint=function(e){for(var d=e*this.getLength(),f=this.getCurveLengths(),e=0;e<f.length;){if(f[e]>=d){return d=f[e]-d,e=this.curves[e],d=1-d/e.getLength(),e.getPointAt(d)}e++}return null};THREE.CurvePath.prototype.getLength=function(){var b=this.getCurveLengths();return b[b.length-1]};THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length){return this.cacheLengths}var f=[],e=0,h,g=this.curves.length;for(h=0;h<g;h++){e+=this.curves[h].getLength(),f.push(e)}return this.cacheLengths=f};THREE.CurvePath.prototype.getBoundingBox=function(){var x=this.getPoints(),w,v,u,t,s,r;w=v=Number.NEGATIVE_INFINITY;t=s=Number.POSITIVE_INFINITY;var q,o,n,l,k=x[0] instanceof THREE.Vector3;l=k?new THREE.Vector3:new THREE.Vector2;o=0;for(n=x.length;o<n;o++){q=x[o],q.x>w?w=q.x:q.x<t&&(t=q.x),q.y>v?v=q.y:q.y<s&&(s=q.y),k&&(q.z>u?u=q.z:q.z<r&&(r=q.z)),l.add(q)}x={minX:t,minY:s,maxX:w,maxY:v,centroid:l.divideScalar(n)};k&&(x.maxZ=u,x.minZ=r);return x};THREE.CurvePath.prototype.createPointsGeometry=function(b){b=this.getPoints(b,!0);return this.createGeometry(b)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(b){b=this.getSpacedPoints(b,!0);return this.createGeometry(b)};THREE.CurvePath.prototype.createGeometry=function(e){for(var d=new THREE.Geometry,f=0;f<e.length;f++){d.vertices.push(new THREE.Vector3(e[f].x,e[f].y,e[f].z||0))}return d};THREE.CurvePath.prototype.addWrapPath=function(b){this.bends.push(b)};THREE.CurvePath.prototype.getTransformedPoints=function(g,f){var j=this.getPoints(g),i,h;f||(f=this.bends);i=0;for(h=f.length;i<h;i++){j=this.getWrapPoints(j,f[i])}return j};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(g,f){var j=this.getSpacedPoints(g),i,h;f||(f=this.bends);i=0;for(h=f.length;i<h;i++){j=this.getWrapPoints(j,f[i])}return j};THREE.CurvePath.prototype.getWrapPoints=function(r,q){var p=this.getBoundingBox(),o,n,m,l,k,j;o=0;for(n=r.length;o<n;o++){m=r[o],l=m.x,k=m.y,j=l/p.maxX,j=q.getUtoTmapping(j,l),l=q.getPoint(j),k=q.getNormalVector(j).multiplyScalar(k),m.x=l.x+k.x,m.y=l.y+k.y}return r};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);THREE.Gyroscope.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||e){this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject),this.matrixWorld.makeFromPositionQuaternionScale(this.translationWorld,this.rotationObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0}for(var d=0,f=this.children.length;d<f;d++){this.children[d].updateMatrixWorld(e)}};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3;THREE.Gyroscope.prototype.translationObject=new THREE.Vector3;THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion;THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion;THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3;THREE.Path=function(b){THREE.CurvePath.call(this);this.actions=[];b&&this.fromPoints(b)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};THREE.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var d=1,f=e.length;d<f;d++){this.lineTo(e[d].x,e[d].y)}};THREE.Path.prototype.moveTo=function(e,d){var f=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:f})};THREE.Path.prototype.lineTo=function(f,e){var h=Array.prototype.slice.call(arguments),g=this.actions[this.actions.length-1].args,g=new THREE.LineCurve(new THREE.Vector2(g[g.length-2],g[g.length-1]),new THREE.Vector2(f,e));this.curves.push(g);this.actions.push({action:THREE.PathActions.LINE_TO,args:h})};THREE.Path.prototype.quadraticCurveTo=function(h,g,l,k){var j=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args,i=new THREE.QuadraticBezierCurve(new THREE.Vector2(i[i.length-2],i[i.length-1]),new THREE.Vector2(h,g),new THREE.Vector2(l,k));this.curves.push(i);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:j})};THREE.Path.prototype.bezierCurveTo=function(j,i,p,o,n,m){var l=Array.prototype.slice.call(arguments),k=this.actions[this.actions.length-1].args,k=new THREE.CubicBezierCurve(new THREE.Vector2(k[k.length-2],k[k.length-1]),new THREE.Vector2(j,i),new THREE.Vector2(p,o),new THREE.Vector2(n,m));this.curves.push(k);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:l})};THREE.Path.prototype.splineThru=function(e){var d=Array.prototype.slice.call(arguments),f=this.actions[this.actions.length-1].args,f=[new THREE.Vector2(f[f.length-2],f[f.length-1])];Array.prototype.push.apply(f,e);f=new THREE.SplineCurve(f);this.curves.push(f);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:d})};THREE.Path.prototype.arc=function(i,h,n,m,l,k){var j=this.actions[this.actions.length-1].args;this.absarc(i+j[j.length-2],h+j[j.length-1],n,m,l,k)};THREE.Path.prototype.absarc=function(h,g,l,k,j,i){this.absellipse(h,g,l,l,k,j,i)};THREE.Path.prototype.ellipse=function(j,i,p,o,n,m,l){var k=this.actions[this.actions.length-1].args;this.absellipse(j+k[k.length-2],i+k[k.length-1],p,o,n,m,l)};THREE.Path.prototype.absellipse=function(r,q,p,o,n,m,l){var k=Array.prototype.slice.call(arguments),j=new THREE.EllipseCurve(r,q,p,o,n,m,l);this.curves.push(j);j=j.getPoint(l?1:0);k.push(j.x);k.push(j.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:k})};THREE.Path.prototype.getSpacedPoints=function(e){e||(e=40);for(var d=[],f=0;f<e;f++){d.push(this.getPoint(f/e))}return d};THREE.Path.prototype.getPoints=function(E,D){if(this.useSpacedPoints){return console.log("tata"),this.getSpacedPoints(E,D)}var E=E||12,C=[],B,A,z,y,x,w,v,t,o,u,k,F,q;B=0;for(A=this.actions.length;B<A;B++){switch(z=this.actions[B],y=z.action,z=z.args,y){case THREE.PathActions.MOVE_TO:C.push(new THREE.Vector2(z[0],z[1]));break;case THREE.PathActions.LINE_TO:C.push(new THREE.Vector2(z[0],z[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:x=z[2];w=z[3];o=z[0];u=z[1];0<C.length?(y=C[C.length-1],k=y.x,F=y.y):(y=this.actions[B-1].args,k=y[y.length-2],F=y[y.length-1]);for(z=1;z<=E;z++){q=z/E,y=THREE.Shape.Utils.b2(q,k,o,x),q=THREE.Shape.Utils.b2(q,F,u,w),C.push(new THREE.Vector2(y,q))}break;case THREE.PathActions.BEZIER_CURVE_TO:x=z[4];w=z[5];o=z[0];u=z[1];v=z[2];t=z[3];0<C.length?(y=C[C.length-1],k=y.x,F=y.y):(y=this.actions[B-1].args,k=y[y.length-2],F=y[y.length-1]);for(z=1;z<=E;z++){q=z/E,y=THREE.Shape.Utils.b3(q,k,o,v,x),q=THREE.Shape.Utils.b3(q,F,u,t,w),C.push(new THREE.Vector2(y,q))}break;case THREE.PathActions.CSPLINE_THRU:y=this.actions[B-1].args;q=[new THREE.Vector2(y[y.length-2],y[y.length-1])];y=E*z[0].length;q=q.concat(z[0]);q=new THREE.SplineCurve(q);for(z=1;z<=y;z++){C.push(q.getPointAt(z/y))}break;case THREE.PathActions.ARC:x=z[0];w=z[1];u=z[2];v=z[3];y=z[4];o=!!z[5];k=y-v;F=2*E;for(z=1;z<=F;z++){q=z/F,o||(q=1-q),q=v+q*k,y=x+u*Math.cos(q),q=w+u*Math.sin(q),C.push(new THREE.Vector2(y,q))}break;case THREE.PathActions.ELLIPSE:x=z[0];w=z[1];u=z[2];t=z[3];v=z[4];y=z[5];o=!!z[6];k=y-v;F=2*E;for(z=1;z<=F;z++){q=z/F,o||(q=1-q),q=v+q*k,y=x+u*Math.cos(q),q=w+t*Math.sin(q),C.push(new THREE.Vector2(y,q))}}}B=C[C.length-1];1e-10>Math.abs(B.x-C[0].x)&&1e-10>Math.abs(B.y-C[0].y)&&C.splice(C.length-1,1);D&&C.push(C[0]);return C};THREE.Path.prototype.toShapes=function(){var i,h,n,m,l=[],k=new THREE.Path;i=0;for(h=this.actions.length;i<h;i++){n=this.actions[i],m=n.args,n=n.action,n==THREE.PathActions.MOVE_TO&&0!=k.actions.length&&(l.push(k),k=new THREE.Path),k[n].apply(k,m)}0!=k.actions.length&&l.push(k);if(0==l.length){return[]}var j;m=[];i=!THREE.Shape.Utils.isClockWise(l[0].getPoints());if(1==l.length){return k=l[0],j=new THREE.Shape,j.actions=k.actions,j.curves=k.curves,m.push(j),m}if(i){j=new THREE.Shape;i=0;for(h=l.length;i<h;i++){k=l[i],THREE.Shape.Utils.isClockWise(k.getPoints())?(j.actions=k.actions,j.curves=k.curves,m.push(j),j=new THREE.Shape):j.holes.push(k)}}else{i=0;for(h=l.length;i<h;i++){k=l[i],THREE.Shape.Utils.isClockWise(k.getPoints())?(j&&m.push(j),j=new THREE.Shape,j.actions=k.actions,j.curves=k.curves):j.holes.push(k)}m.push(j)}return m};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);THREE.Shape.prototype.extrude=function(b){return new THREE.ExtrudeGeometry(this,b)};THREE.Shape.prototype.makeGeometry=function(b){return new THREE.ShapeGeometry(this,b)};THREE.Shape.prototype.getPointsHoles=function(f){var e,h=this.holes.length,g=[];for(e=0;e<h;e++){g[e]=this.holes[e].getTransformedPoints(f,this.bends)}return g};THREE.Shape.prototype.getSpacedPointsHoles=function(f){var e,h=this.holes.length,g=[];for(e=0;e<h;e++){g[e]=this.holes[e].getTransformedSpacedPoints(f,this.bends)}return g};THREE.Shape.prototype.extractAllPoints=function(b){return{shape:this.getTransformedPoints(b),holes:this.getPointsHoles(b)}};THREE.Shape.prototype.extractPoints=function(b){return this.useSpacedPoints?this.extractAllSpacedPoints(b):this.extractAllPoints(b)};THREE.Shape.prototype.extractAllSpacedPoints=function(b){return{shape:this.getTransformedSpacedPoints(b),holes:this.getSpacedPointsHoles(b)}};THREE.Shape.Utils={removeHoles:function(G,F){var E=G.concat(),D=E.concat(),C,B,A,z,y,x,v,t,w,k,H=[];for(y=0;y<F.length;y++){x=F[y];Array.prototype.push.apply(D,x);B=Number.POSITIVE_INFINITY;for(C=0;C<x.length;C++){w=x[C];k=[];for(t=0;t<E.length;t++){v=E[t],v=w.distanceToSquared(v),k.push(v),v<B&&(B=v,A=C,z=t)}}C=0<=z-1?z-1:E.length-1;B=0<=A-1?A-1:x.length-1;var u=[x[A],E[z],E[C]];t=THREE.FontUtils.Triangulate.area(u);var o=[x[A],x[B],E[z]];w=THREE.FontUtils.Triangulate.area(o);k=z;v=A;z+=1;A+=-1;0>z&&(z+=E.length);z%=E.length;0>A&&(A+=x.length);A%=x.length;C=0<=z-1?z-1:E.length-1;B=0<=A-1?A-1:x.length-1;u=[x[A],E[z],E[C]];u=THREE.FontUtils.Triangulate.area(u);o=[x[A],x[B],E[z]];o=THREE.FontUtils.Triangulate.area(o);t+w>u+o&&(z=k,A=v,0>z&&(z+=E.length),z%=E.length,0>A&&(A+=x.length),A%=x.length,C=0<=z-1?z-1:E.length-1,B=0<=A-1?A-1:x.length-1);t=E.slice(0,z);w=E.slice(z);k=x.slice(A);v=x.slice(0,A);B=[x[A],x[B],E[z]];H.push([x[A],E[z],E[C]]);H.push(B);E=t.concat(k).concat(v).concat(w)}return{shape:E,isolatedPts:H,allpoints:D}},triangulateShape:function(t,s){var r=THREE.Shape.Utils.removeHoles(t,s),q=r.allpoints,p=r.isolatedPts,r=THREE.FontUtils.Triangulate(r.shape,!1),o,n,m,l,k={};o=0;for(n=q.length;o<n;o++){l=q[o].x+":"+q[o].y,void 0!==k[l]&&console.log("Duplicate point",l),k[l]=o}o=0;for(n=r.length;o<n;o++){m=r[o];for(q=0;3>q;q++){l=m[q].x+":"+m[q].y,l=k[l],void 0!==l&&(m[q]=l)}}o=0;for(n=p.length;o<n;o++){m=p[o];for(q=0;3>q;q++){l=m[q].x+":"+m[q].y,l=k[l],void 0!==l&&(m[q]=l)}}return r.concat(p)},isClockWise:function(b){return 0>THREE.FontUtils.Triangulate.area(b)},b2p0:function(e,d){var f=1-e;return f*f*d},b2p1:function(d,c){return 2*(1-d)*d*c},b2p2:function(d,c){return d*d*c},b2:function(f,e,h,g){return this.b2p0(f,e)+this.b2p1(f,h)+this.b2p2(f,g)},b3p0:function(e,d){var f=1-e;return f*f*f*d},b3p1:function(e,d){var f=1-e;return 3*f*f*e*d},b3p2:function(d,c){return 3*(1-d)*d*d*c},b3p3:function(d,c){return d*d*d*c},b3:function(g,f,j,i,h){return this.b3p0(g,f)+this.b3p1(g,j)+this.b3p2(g,i)+this.b3p3(g,h)}};THREE.AnimationHandler=function(){var f=[],e={},h={update:function(a){for(var d=0;d<f.length;d++){f[d].update(a)}},addToUpdate:function(a){-1===f.indexOf(a)&&f.push(a)},removeFromUpdate:function(a){a=f.indexOf(a);-1!==a&&f.splice(a,1)},add:function(k){void 0!==e[k.name]&&console.log("THREE.AnimationHandler.add: Warning! "+k.name+" already exists in library. Overwriting.");e[k.name]=k;if(!0!==k.initialized){for(var q=0;q<k.hierarchy.length;q++){for(var p=0;p<k.hierarchy[q].keys.length;p++){if(0>k.hierarchy[q].keys[p].time&&(k.hierarchy[q].keys[p].time=0),void 0!==k.hierarchy[q].keys[p].rot&&!(k.hierarchy[q].keys[p].rot instanceof THREE.Quaternion)){var o=k.hierarchy[q].keys[p].rot;k.hierarchy[q].keys[p].rot=new THREE.Quaternion(o[0],o[1],o[2],o[3])}}if(k.hierarchy[q].keys.length&&void 0!==k.hierarchy[q].keys[0].morphTargets){o={};for(p=0;p<k.hierarchy[q].keys.length;p++){for(var n=0;n<k.hierarchy[q].keys[p].morphTargets.length;n++){var l=k.hierarchy[q].keys[p].morphTargets[n];o[l]=-1}}k.hierarchy[q].usedMorphTargets=o;for(p=0;p<k.hierarchy[q].keys.length;p++){var b={};for(l in o){for(n=0;n<k.hierarchy[q].keys[p].morphTargets.length;n++){if(k.hierarchy[q].keys[p].morphTargets[n]===l){b[l]=k.hierarchy[q].keys[p].morphTargetsInfluences[n];break}}n===k.hierarchy[q].keys[p].morphTargets.length&&(b[l]=0)}k.hierarchy[q].keys[p].morphTargetsInfluences=b}}for(p=1;p<k.hierarchy[q].keys.length;p++){k.hierarchy[q].keys[p].time===k.hierarchy[q].keys[p-1].time&&(k.hierarchy[q].keys.splice(p,1),p--)}for(p=0;p<k.hierarchy[q].keys.length;p++){k.hierarchy[q].keys[p].index=p}}p=parseInt(k.length*k.fps,10);k.JIT={};k.JIT.hierarchy=[];for(q=0;q<k.hierarchy.length;q++){k.JIT.hierarchy.push(Array(p))}k.initialized=!0}},get:function(b){if("string"===typeof b){if(e[b]){return e[b]}console.log("THREE.AnimationHandler.get: Couldn't find animation "+b);return null}},parse:function(i){var d=[];if(i instanceof THREE.SkinnedMesh){for(var j=0;j<i.bones.length;j++){d.push(i.bones[j])}}else{g(i,d)}return d}},g=function(i,d){d.push(i);for(var j=0;j<i.children.length;j++){g(i.children[j],d)}};h.LINEAR=0;h.CATMULLROM=1;h.CATMULLROM_FORWARD=2;return h}();THREE.Animation=function(e,d,f){this.root=e;this.data=THREE.AnimationHandler.get(d);this.hierarchy=THREE.AnimationHandler.parse(e);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=this.isPaused=!0;this.interpolationType=void 0!==f?f:THREE.AnimationHandler.LINEAR;this.points=[];this.target=new THREE.Vector3};THREE.Animation.prototype.play=function(h,g){if(!1===this.isPlaying){this.isPlaying=!0;this.loop=void 0!==h?h:!0;this.currentTime=void 0!==g?g:0;var l,k=this.hierarchy.length,j;for(l=0;l<k;l++){j=this.hierarchy[l];this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD&&(j.useQuaternion=!0);j.matrixAutoUpdate=!0;void 0===j.animationCache&&(j.animationCache={},j.animationCache.prevKey={pos:0,rot:0,scl:0},j.animationCache.nextKey={pos:0,rot:0,scl:0},j.animationCache.originalMatrix=j instanceof THREE.Bone?j.skinMatrix:j.matrix);var i=j.animationCache.prevKey;j=j.animationCache.nextKey;i.pos=this.data.hierarchy[l].keys[0];i.rot=this.data.hierarchy[l].keys[0];i.scl=this.data.hierarchy[l].keys[0];j.pos=this.getNextKeyWith("pos",l,1);j.rot=this.getNextKeyWith("rot",l,1);j.scl=this.getNextKeyWith("scl",l,1)}this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};THREE.Animation.prototype.pause=function(){!0===this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this)};THREE.Animation.prototype.update=function(B){if(!1!==this.isPlaying){var A=["pos","rot","scl"],z,y,x,w,v,u,t,s,o;o=this.currentTime+=B*this.timeScale;s=this.currentTime%=this.data.length;parseInt(Math.min(s*this.data.fps,this.data.length*this.data.fps),10);for(var n=0,q=this.hierarchy.length;n<q;n++){B=this.hierarchy[n];t=B.animationCache;for(var k=0;3>k;k++){z=A[k];v=t.prevKey[z];u=t.nextKey[z];if(u.time<=o){if(s<o){if(this.loop){v=this.data.hierarchy[n].keys[0];for(u=this.getNextKeyWith(z,n,1);u.time<s;){v=u,u=this.getNextKeyWith(z,n,u.index+1)}}else{this.stop();return}}else{do{v=u,u=this.getNextKeyWith(z,n,u.index+1)}while(u.time<s)}t.prevKey[z]=v;t.nextKey[z]=u}B.matrixAutoUpdate=!0;B.matrixWorldNeedsUpdate=!0;y=(s-v.time)/(u.time-v.time);x=v[z];w=u[z];if(0>y||1<y){console.log("THREE.Animation.update: Warning! Scale out of bounds:"+y+" on bone "+n),y=0>y?0:1}if("pos"===z){if(z=B.position,this.interpolationType===THREE.AnimationHandler.LINEAR){z.x=x[0]+(w[0]-x[0])*y,z.y=x[1]+(w[1]-x[1])*y,z.z=x[2]+(w[2]-x[2])*y}else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){this.points[0]=this.getPrevKeyWith("pos",n,v.index-1).pos,this.points[1]=x,this.points[2]=w,this.points[3]=this.getNextKeyWith("pos",n,u.index+1).pos,y=0.33*y+0.33,x=this.interpolateCatmullRom(this.points,y),z.x=x[0],z.y=x[1],z.z=x[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(y=this.interpolateCatmullRom(this.points,1.01*y),this.target.set(y[0],y[1],y[2]),this.target.sub(z),this.target.y=0,this.target.normalize(),y=Math.atan2(this.target.x,this.target.z),B.rotation.set(0,y,0))}}}else{"rot"===z?THREE.Quaternion.slerp(x,w,B.quaternion,y):"scl"===z&&(z=B.scale,z.x=x[0]+(w[0]-x[0])*y,z.y=x[1]+(w[1]-x[1])*y,z.z=x[2]+(w[2]-x[2])*y)}}}}};THREE.Animation.prototype.interpolateCatmullRom=function(t,s){var r=[],q=[],p,o,n,m,l,k;p=(t.length-1)*s;o=Math.floor(p);p-=o;r[0]=0===o?o:o-1;r[1]=o;r[2]=o>t.length-2?o:o+1;r[3]=o>t.length-3?o:o+2;o=t[r[0]];m=t[r[1]];l=t[r[2]];k=t[r[3]];r=p*p;n=p*r;q[0]=this.interpolate(o[0],m[0],l[0],k[0],p,r,n);q[1]=this.interpolate(o[1],m[1],l[1],k[1],p,r,n);q[2]=this.interpolate(o[2],m[2],l[2],k[2],p,r,n);return q};THREE.Animation.prototype.interpolate=function(i,h,n,m,l,k,j){i=0.5*(n-i);m=0.5*(m-h);return(2*(h-n)+i+m)*j+(-3*(h-n)-2*i-m)*k+i*l+h};THREE.Animation.prototype.getNextKeyWith=function(f,e,h){for(var g=this.data.hierarchy[e].keys,h=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?h<g.length-1?h:g.length-1:h%g.length;h<g.length;h++){if(void 0!==g[h][f]){return g[h]}}return this.data.hierarchy[e].keys[0]};THREE.Animation.prototype.getPrevKeyWith=function(f,e,h){for(var g=this.data.hierarchy[e].keys,h=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<h?h:0:0<=h?h:h+g.length;0<=h;h--){if(void 0!==g[h][f]){return g[h]}}return this.data.hierarchy[e].keys[g.length-1]};THREE.KeyFrameAnimation=function(i,h,n){this.root=i;this.data=THREE.AnimationHandler.get(h);this.hierarchy=THREE.AnimationHandler.parse(i);this.currentTime=0;this.timeScale=0.001;this.isPlaying=!1;this.loop=this.isPaused=!0;this.JITCompile=void 0!==n?n:!0;i=0;for(h=this.hierarchy.length;i<h;i++){var n=this.data.hierarchy[i].sids,m=this.hierarchy[i];if(this.data.hierarchy[i].keys.length&&n){for(var l=0;l<n.length;l++){var k=n[l],j=this.getNextKeyWith(k,i,0);j&&j.apply(k)}m.matrixAutoUpdate=!1;this.data.hierarchy[i].node.updateMatrix();m.matrixWorldNeedsUpdate=!0}}};THREE.KeyFrameAnimation.prototype.play=function(h,g){if(!this.isPlaying){this.isPlaying=!0;this.loop=void 0!==h?h:!0;this.currentTime=void 0!==g?g:0;this.startTimeMs=g;this.startTime=10000000;this.endTime=-this.startTime;var l,k=this.hierarchy.length,j,i;for(l=0;l<k;l++){j=this.hierarchy[l],i=this.data.hierarchy[l],j.useQuaternion=!0,void 0===i.animationCache&&(i.animationCache={},i.animationCache.prevKey=null,i.animationCache.nextKey=null,i.animationCache.originalMatrix=j instanceof THREE.Bone?j.skinMatrix:j.matrix),j=this.data.hierarchy[l].keys,j.length&&(i.animationCache.prevKey=j[0],i.animationCache.nextKey=j[1],this.startTime=Math.min(j[0].time,this.startTime),this.endTime=Math.max(j[j.length-1].time,this.endTime))}this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this);for(var f=0;f<this.data.hierarchy.length;f++){var e=this.hierarchy[f],h=this.data.hierarchy[f];if(void 0!==h.animationCache){var g=h.animationCache.originalMatrix;e instanceof THREE.Bone?(g.copy(e.skinMatrix),e.skinMatrix=g):(g.copy(e.matrix),e.matrix=g);delete h.animationCache}}};THREE.KeyFrameAnimation.prototype.update=function(z){if(this.isPlaying){var y,x,w,v,u=this.data.JIT.hierarchy,t,s,r;s=this.currentTime+=z*this.timeScale;t=this.currentTime%=this.data.length;t<this.startTimeMs&&(t=this.currentTime=this.startTimeMs+t);v=parseInt(Math.min(t*this.data.fps,this.data.length*this.data.fps),10);if((r=t<s)&&!this.loop){for(var z=0,q=this.hierarchy.length;z<q;z++){var n=this.data.hierarchy[z].keys,u=this.data.hierarchy[z].sids;w=n.length-1;v=this.hierarchy[z];if(n.length){for(n=0;n<u.length;n++){t=u[n],(s=this.getPrevKeyWith(t,z,w))&&s.apply(t)}this.data.hierarchy[z].node.updateMatrix();v.matrixWorldNeedsUpdate=!0}}this.stop()}else{if(!(t<this.startTime)){z=0;for(q=this.hierarchy.length;z<q;z++){w=this.hierarchy[z];y=this.data.hierarchy[z];var n=y.keys,k=y.animationCache;if(this.JITCompile&&void 0!==u[z][v]){w instanceof THREE.Bone?(w.skinMatrix=u[z][v],w.matrixWorldNeedsUpdate=!1):(w.matrix=u[z][v],w.matrixWorldNeedsUpdate=!0)}else{if(n.length){this.JITCompile&&k&&(w instanceof THREE.Bone?w.skinMatrix=k.originalMatrix:w.matrix=k.originalMatrix);y=k.prevKey;x=k.nextKey;if(y&&x){if(x.time<=s){if(r&&this.loop){y=n[0];for(x=n[1];x.time<t;){y=x,x=n[y.index+1]}}else{if(!r){for(var o=n.length-1;x.time<t&&x.index!==o;){y=x,x=n[y.index+1]}}}k.prevKey=y;k.nextKey=x}x.time>=t?y.interpolate(x,t):y.interpolate(x,x.time)}this.data.hierarchy[z].node.updateMatrix();w.matrixWorldNeedsUpdate=!0}}}if(this.JITCompile&&void 0===u[0][v]){this.hierarchy[0].updateMatrixWorld(!0);for(z=0;z<this.hierarchy.length;z++){u[z][v]=this.hierarchy[z] instanceof THREE.Bone?this.hierarchy[z].skinMatrix.clone():this.hierarchy[z].matrix.clone()}}}}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(e,d,f){d=this.data.hierarchy[d].keys;for(f%=d.length;f<d.length;f++){if(d[f].hasTarget(e)){return d[f]}}return d[0]};THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(e,d,f){d=this.data.hierarchy[d].keys;for(f=0<=f?f:f+d.length;0<=f;f--){if(d[f].hasTarget(e)){return d[f]}}return d[d.length-1]};THREE.CubeCamera=function(r,q,p){THREE.Object3D.call(this);var o=new THREE.PerspectiveCamera(90,1,r,q);o.up.set(0,-1,0);o.lookAt(new THREE.Vector3(1,0,0));this.add(o);var n=new THREE.PerspectiveCamera(90,1,r,q);n.up.set(0,-1,0);n.lookAt(new THREE.Vector3(-1,0,0));this.add(n);var m=new THREE.PerspectiveCamera(90,1,r,q);m.up.set(0,0,1);m.lookAt(new THREE.Vector3(0,1,0));this.add(m);var l=new THREE.PerspectiveCamera(90,1,r,q);l.up.set(0,0,-1);l.lookAt(new THREE.Vector3(0,-1,0));this.add(l);var k=new THREE.PerspectiveCamera(90,1,r,q);k.up.set(0,-1,0);k.lookAt(new THREE.Vector3(0,0,1));this.add(k);var j=new THREE.PerspectiveCamera(90,1,r,q);j.up.set(0,-1,0);j.lookAt(new THREE.Vector3(0,0,-1));this.add(j);this.renderTarget=new THREE.WebGLRenderTargetCube(p,p,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(f,d){var g=this.renderTarget,e=g.generateMipmaps;g.generateMipmaps=!1;g.activeCubeFace=0;f.render(d,o,g);g.activeCubeFace=1;f.render(d,n,g);g.activeCubeFace=2;f.render(d,m,g);g.activeCubeFace=3;f.render(d,l,g);g.activeCubeFace=4;f.render(d,k,g);g.generateMipmaps=e;g.activeCubeFace=5;f.render(d,j,g)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CombinedCamera=function(i,h,n,m,l,k,j){THREE.Camera.call(this);this.fov=n;this.left=-i/2;this.right=i/2;this.top=h/2;this.bottom=-h/2;this.cameraO=new THREE.OrthographicCamera(i/-2,i/2,h/2,h/-2,k,j);this.cameraP=new THREE.PerspectiveCamera(n,i/h,m,l);this.zoom=1;this.toPerspective()};THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype);THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near;this.far=this.cameraP.far;this.cameraP.fov=this.fov/this.zoom;this.cameraP.updateProjectionMatrix();this.projectionMatrix=this.cameraP.projectionMatrix;this.inPerspectiveMode=!0;this.inOrthographicMode=!1};THREE.CombinedCamera.prototype.toOrthographic=function(){var d=this.cameraP.aspect,c=(this.cameraP.near+this.cameraP.far)/2,c=Math.tan(this.fov/2)*c,d=2*c*d/2,c=c/this.zoom,d=d/this.zoom;this.cameraO.left=-d;this.cameraO.right=d;this.cameraO.top=c;this.cameraO.bottom=-c;this.cameraO.updateProjectionMatrix();this.near=this.cameraO.near;this.far=this.cameraO.far;this.projectionMatrix=this.cameraO.projectionMatrix;this.inPerspectiveMode=!1;this.inOrthographicMode=!0};THREE.CombinedCamera.prototype.setSize=function(d,c){this.cameraP.aspect=d/c;this.left=-d/2;this.right=d/2;this.top=c/2;this.bottom=-c/2};THREE.CombinedCamera.prototype.setFov=function(b){this.fov=b;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())};THREE.CombinedCamera.prototype.setLens=function(e,d){void 0===d&&(d=24);var f=2*THREE.Math.radToDeg(Math.atan(d/(2*e)));this.setFov(f);return f};THREE.CombinedCamera.prototype.setZoom=function(b){this.zoom=b;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0;this.rotation.y=Math.PI;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0;this.rotation.y=-Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0;this.rotation.y=Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CircleGeometry=function(r,q,p,o){THREE.Geometry.call(this);var r=r||50,p=void 0!==p?p:0,o=void 0!==o?o:2*Math.PI,q=void 0!==q?Math.max(3,q):8,n,m=[];n=new THREE.Vector3;var l=new THREE.Vector2(0.5,0.5);this.vertices.push(n);m.push(l);for(n=0;n<=q;n++){var k=new THREE.Vector3,j=p+n/q*o;k.x=r*Math.cos(j);k.y=r*Math.sin(j);this.vertices.push(k);m.push(new THREE.Vector2((k.x/r+1)/2,(k.y/r+1)/2))}p=new THREE.Vector3(0,0,1);for(n=1;n<=q;n++){this.faces.push(new THREE.Face3(n,n+1,0,[p,p,p])),this.faceVertexUvs[0].push([m[n],m[n+1],l])}this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,r)};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CubeGeometry=function(j,i,p,o,n,m){function l(U,T,S,R,Q,P,O,N){var M,v=k.widthSegments,D=k.heightSegments,w=Q/2,L=P/2,I=k.vertices.length;if("x"===U&&"y"===T||"y"===U&&"x"===T){M="z"}else{if("x"===U&&"z"===T||"z"===U&&"x"===T){M="y",D=k.depthSegments}else{if("z"===U&&"y"===T||"y"===U&&"z"===T){M="x",v=k.depthSegments}}}var s=v+1,C=D+1,r=Q/v,A=P/D,h=new THREE.Vector3;h[M]=0<O?1:-1;for(Q=0;Q<C;Q++){for(P=0;P<s;P++){var B=new THREE.Vector3;B[U]=(P*r-w)*S;B[T]=(Q*A-L)*R;B[M]=O;k.vertices.push(B)}}for(Q=0;Q<D;Q++){for(P=0;P<v;P++){U=new THREE.Face4(P+s*Q+I,P+s*(Q+1)+I,P+1+s*(Q+1)+I,P+1+s*Q+I),U.normal.copy(h),U.vertexNormals.push(h.clone(),h.clone(),h.clone(),h.clone()),U.materialIndex=N,k.faces.push(U),k.faceVertexUvs[0].push([new THREE.Vector2(P/v,1-Q/D),new THREE.Vector2(P/v,1-(Q+1)/D),new THREE.Vector2((P+1)/v,1-(Q+1)/D),new THREE.Vector2((P+1)/v,1-Q/D)])}}}THREE.Geometry.call(this);var k=this;this.width=j;this.height=i;this.depth=p;this.widthSegments=o||1;this.heightSegments=n||1;this.depthSegments=m||1;j=this.width/2;i=this.height/2;p=this.depth/2;l("z","y",-1,-1,this.depth,this.height,j,0);l("z","y",1,-1,this.depth,this.height,-j,1);l("x","z",1,1,this.width,this.depth,i,2);l("x","z",1,-1,this.width,this.depth,-i,3);l("x","y",1,-1,this.width,this.height,p,4);l("x","y",-1,-1,this.width,this.height,-p,5);this.computeCentroids();this.mergeVertices()};THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CylinderGeometry=function(X,W,V,U,T,S){THREE.Geometry.call(this);this.radiusTop=X=void 0!==X?X:20;this.radiusBottom=W=void 0!==W?W:20;this.height=V=void 0!==V?V:100;this.radiusSegments=U=U||8;this.heightSegments=T=T||1;this.openEnded=S=void 0!==S?S:!1;var R=V/2,Q,P,O=[],M=[];for(P=0;P<=T;P++){var K=[],N=[],H=P/T,G=H*(W-X)+X;for(Q=0;Q<=U;Q++){var L=Q/U,I=new THREE.Vector3;I.x=G*Math.sin(2*L*Math.PI);I.y=-H*V+R;I.z=G*Math.cos(2*L*Math.PI);this.vertices.push(I);K.push(this.vertices.length-1);N.push(new THREE.Vector2(L,1-H))}O.push(K);M.push(N)}V=(W-X)/V;for(Q=0;Q<U;Q++){0!==X?(K=this.vertices[O[0][Q]].clone(),N=this.vertices[O[0][Q+1]].clone()):(K=this.vertices[O[1][Q]].clone(),N=this.vertices[O[1][Q+1]].clone());K.setY(Math.sqrt(K.x*K.x+K.z*K.z)*V).normalize();N.setY(Math.sqrt(N.x*N.x+N.z*N.z)*V).normalize();for(P=0;P<T;P++){var H=O[P][Q],G=O[P+1][Q],L=O[P+1][Q+1],I=O[P][Q+1],v=K.clone(),B=K.clone(),w=N.clone(),D=N.clone(),C=M[P][Q].clone(),o=M[P+1][Q].clone(),A=M[P+1][Q+1].clone(),k=M[P][Q+1].clone();this.faces.push(new THREE.Face4(H,G,L,I,[v,B,w,D]));this.faceVertexUvs[0].push([C,o,A,k])}}if(!1===S&&0<X){this.vertices.push(new THREE.Vector3(0,R,0));for(Q=0;Q<U;Q++){H=O[0][Q],G=O[0][Q+1],L=this.vertices.length-1,v=new THREE.Vector3(0,1,0),B=new THREE.Vector3(0,1,0),w=new THREE.Vector3(0,1,0),C=M[0][Q].clone(),o=M[0][Q+1].clone(),A=new THREE.Vector2(o.u,0),this.faces.push(new THREE.Face3(H,G,L,[v,B,w])),this.faceVertexUvs[0].push([C,o,A])}}if(!1===S&&0<W){this.vertices.push(new THREE.Vector3(0,-R,0));for(Q=0;Q<U;Q++){H=O[P][Q+1],G=O[P][Q],L=this.vertices.length-1,v=new THREE.Vector3(0,-1,0),B=new THREE.Vector3(0,-1,0),w=new THREE.Vector3(0,-1,0),C=M[P][Q+1].clone(),o=M[P][Q].clone(),A=new THREE.Vector2(o.u,1),this.faces.push(new THREE.Face3(H,G,L,[v,B,w])),this.faceVertexUvs[0].push([C,o,A])}}this.computeCentroids();this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry=function(d,c){"undefined"!==typeof d&&(THREE.Geometry.call(this),d=d instanceof Array?d:[d],this.shapebb=d[d.length-1].getBoundingBox(),this.addShapeList(d,c),this.computeCentroids(),this.computeFaceNormals())};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.addShapeList=function(f,e){for(var h=f.length,g=0;g<h;g++){this.addShape(f[g],e)}};THREE.ExtrudeGeometry.prototype.addShape=function(aC,aB){function aA(e,d,f){d||console.log("die");return d.clone().multiplyScalar(f).add(e)}function az(t,s,r){var q=THREE.ExtrudeGeometry.__v1,p=THREE.ExtrudeGeometry.__v2,n=THREE.ExtrudeGeometry.__v3,m=THREE.ExtrudeGeometry.__v4,l=THREE.ExtrudeGeometry.__v5,j=THREE.ExtrudeGeometry.__v6;q.set(t.x-s.x,t.y-s.y);p.set(t.x-r.x,t.y-r.y);q=q.normalize();p=p.normalize();n.set(-q.y,q.x);m.set(p.y,-p.x);l.copy(t).add(n);j.copy(t).add(m);if(l.equals(j)){return m.clone()}l.copy(s).add(n);j.copy(r).add(m);n=q.dot(m);m=j.sub(l).dot(m);0===n&&(console.log("Either infinite or no solutions!"),0===m?console.log("Its finite solutions."):console.log("Too bad, no solutions."));m/=n;return 0>m?(s=Math.atan2(s.y-t.y,s.x-t.x),t=Math.atan2(r.y-t.y,r.x-t.x),s>t&&(t+=2*Math.PI),r=(s+t)/2,t=-Math.cos(r),r=-Math.sin(r),new THREE.Vector2(t,r)):q.multiplyScalar(m).add(l).sub(t).clone()}function ay(F,E){var C,B;for(ac=F.length;0<=--ac;){C=ac;B=ac-1;0>B&&(B=F.length-1);for(var A=0,z=al+2*aq,A=0;A<z;A++){var x=k*A,u=k*(A+1),r=E+C+x,x=E+B+x,b=E+B+u,u=E+C+u,m=F,a=A,I=z,H=C,G=B,r=r+Q,x=x+Q,b=b+Q,u=u+Q;X.faces.push(new THREE.Face4(r,x,b,u,null,null,ai));r=ah.generateSideWallUV(X,aC,m,aB,r,x,b,u,a,I,H,G);X.faceVertexUvs[0].push(r)}}}function ax(e,d,f){X.vertices.push(new THREE.Vector3(e,d,f))}function aw(h,g,b,a){h+=Q;g+=Q;b+=Q;X.faces.push(new THREE.Face3(h,g,b,null,null,ag));h=a?ah.generateBottomUV(X,aC,aB,h,g,b):ah.generateTopUV(X,aC,aB,h,g,b);X.faceVertexUvs[0].push(h)}var av=void 0!==aB.amount?aB.amount:100,au=void 0!==aB.bevelThickness?aB.bevelThickness:6,at=void 0!==aB.bevelSize?aB.bevelSize:au-2,aq=void 0!==aB.bevelSegments?aB.bevelSegments:3,an=void 0!==aB.bevelEnabled?aB.bevelEnabled:!0,ar=void 0!==aB.curveSegments?aB.curveSegments:12,al=void 0!==aB.steps?aB.steps:1,ak=aB.extrudePath,ao,am=!1,ag=aB.material,ai=aB.extrudeMaterial,ah=void 0!==aB.UVGenerator?aB.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,aj,Z,T,Y;ak&&(ao=ak.getSpacedPoints(al),am=!0,an=!1,aj=void 0!==aB.frames?aB.frames:new THREE.TubeGeometry.FrenetFrames(ak,al,!1),Z=new THREE.Vector3,T=new THREE.Vector3,Y=new THREE.Vector3);an||(at=au=aq=0);var af,W,S,X=this,Q=this.vertices.length,ar=aC.extractPoints(ar),ab=ar.shape,ar=ar.holes;if(ak=!THREE.Shape.Utils.isClockWise(ab)){ab=ab.reverse();W=0;for(S=ar.length;W<S;W++){af=ar[W],THREE.Shape.Utils.isClockWise(af)&&(ar[W]=af.reverse())}ak=!1}var v=THREE.Shape.Utils.triangulateShape(ab,ar),ak=ab;W=0;for(S=ar.length;W<S;W++){af=ar[W],ab=ab.concat(af)}var aa,U,P,w,k=ab.length,D=v.length,ap=[],ac=0,ae=ak.length;aa=ae-1;for(U=ac+1;ac<ae;ac++,aa++,U++){aa===ae&&(aa=0),U===ae&&(U=0),ap[ac]=az(ak[ac],ak[aa],ak[U])}var ad=[],o,O=ap.concat();W=0;for(S=ar.length;W<S;W++){af=ar[W];o=[];ac=0;ae=af.length;aa=ae-1;for(U=ac+1;ac<ae;ac++,aa++,U++){aa===ae&&(aa=0),U===ae&&(U=0),o[ac]=az(af[ac],af[aa],af[U])}ad.push(o);O=O.concat(o)}for(aa=0;aa<aq;aa++){af=aa/aq;P=au*(1-af);U=at*Math.sin(af*Math.PI/2);ac=0;for(ae=ak.length;ac<ae;ac++){w=aA(ak[ac],ap[ac],U),ax(w.x,w.y,-P)}W=0;for(S=ar.length;W<S;W++){af=ar[W];o=ad[W];ac=0;for(ae=af.length;ac<ae;ac++){w=aA(af[ac],o[ac],U),ax(w.x,w.y,-P)}}}U=at;for(ac=0;ac<k;ac++){w=an?aA(ab[ac],O[ac],U):ab[ac],am?(T.copy(aj.normals[0]).multiplyScalar(w.x),Z.copy(aj.binormals[0]).multiplyScalar(w.y),Y.copy(ao[0]).add(T).add(Z),ax(Y.x,Y.y,Y.z)):ax(w.x,w.y,0)}for(af=1;af<=al;af++){for(ac=0;ac<k;ac++){w=an?aA(ab[ac],O[ac],U):ab[ac],am?(T.copy(aj.normals[af]).multiplyScalar(w.x),Z.copy(aj.binormals[af]).multiplyScalar(w.y),Y.copy(ao[af]).add(T).add(Z),ax(Y.x,Y.y,Y.z)):ax(w.x,w.y,av/al*af)}}for(aa=aq-1;0<=aa;aa--){af=aa/aq;P=au*(1-af);U=at*Math.sin(af*Math.PI/2);ac=0;for(ae=ak.length;ac<ae;ac++){w=aA(ak[ac],ap[ac],U),ax(w.x,w.y,av+P)}W=0;for(S=ar.length;W<S;W++){af=ar[W];o=ad[W];ac=0;for(ae=af.length;ac<ae;ac++){w=aA(af[ac],o[ac],U),am?ax(w.x,w.y+ao[al-1].y,ao[al-1].x+P):ax(w.x,w.y,av+P)}}}if(an){au=0*k;for(ac=0;ac<D;ac++){av=v[ac],aw(av[2]+au,av[1]+au,av[0]+au,!0)}au=k*(al+2*aq);for(ac=0;ac<D;ac++){av=v[ac],aw(av[0]+au,av[1]+au,av[2]+au,!1)}}else{for(ac=0;ac<D;ac++){av=v[ac],aw(av[2],av[1],av[0],!0)}for(ac=0;ac<D;ac++){av=v[ac],aw(av[0]+k*al,av[1]+k*al,av[2]+k*al,!1)}}av=0;ay(ak,av);av+=ak.length;W=0;for(S=ar.length;W<S;W++){af=ar[W],ay(af,av),av+=af.length}};THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(h,g,l,k,j,i){g=h.vertices[j].x;j=h.vertices[j].y;l=h.vertices[i].x;i=h.vertices[i].y;return[new THREE.Vector2(h.vertices[k].x,h.vertices[k].y),new THREE.Vector2(g,j),new THREE.Vector2(l,i)]},generateBottomUV:function(h,g,l,k,j,i){return this.generateTopUV(h,g,l,k,j,i)},generateSideWallUV:function(z,y,x,w,v,u,t,s){var y=z.vertices[v].x,x=z.vertices[v].y,v=z.vertices[v].z,w=z.vertices[u].x,r=z.vertices[u].y,u=z.vertices[u].z,q=z.vertices[t].x,n=z.vertices[t].y,t=z.vertices[t].z,k=z.vertices[s].x,o=z.vertices[s].y,z=z.vertices[s].z;return 0.01>Math.abs(x-r)?[new THREE.Vector2(y,1-v),new THREE.Vector2(w,1-u),new THREE.Vector2(q,1-t),new THREE.Vector2(k,1-z)]:[new THREE.Vector2(x,1-v),new THREE.Vector2(r,1-u),new THREE.Vector2(n,1-t),new THREE.Vector2(o,1-z)]}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;THREE.ExtrudeGeometry.__v5=new THREE.Vector2;THREE.ExtrudeGeometry.__v6=new THREE.Vector2;THREE.ShapeGeometry=function(d,c){THREE.Geometry.call(this);!1===d instanceof Array&&(d=[d]);this.shapebb=d[d.length-1].getBoundingBox();this.addShapeList(d,c);this.computeCentroids();this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.addShapeList=function(f,e){for(var h=0,g=f.length;h<g;h++){this.addShape(f[h],e)}return this};THREE.ShapeGeometry.prototype.addShape=function(v,u){void 0===u&&(u={});var t=u.material,s=void 0===u.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:u.UVGenerator,r,q,p,o=this.vertices.length;r=v.extractPoints(void 0!==u.curveSegments?u.curveSegments:12);var n=r.shape,l=r.holes;if(!THREE.Shape.Utils.isClockWise(n)){n=n.reverse();r=0;for(q=l.length;r<q;r++){p=l[r],THREE.Shape.Utils.isClockWise(p)&&(l[r]=p.reverse())}}var k=THREE.Shape.Utils.triangulateShape(n,l);r=0;for(q=l.length;r<q;r++){p=l[r],n=n.concat(p)}l=n.length;q=k.length;for(r=0;r<l;r++){p=n[r],this.vertices.push(new THREE.Vector3(p.x,p.y,0))}for(r=0;r<q;r++){l=k[r],n=l[0]+o,p=l[1]+o,l=l[2]+o,this.faces.push(new THREE.Face3(n,p,l,null,null,t)),this.faceVertexUvs[0].push(s.generateBottomUV(this,v,u,n,p,l))}};THREE.LatheGeometry=function(B,A,z,y){THREE.Geometry.call(this);for(var A=A||12,z=z||0,y=y||2*Math.PI,x=1/(B.length-1),w=1/A,v=0,u=A;v<=u;v++){for(var t=z+v*w*y,s=Math.cos(t),o=Math.sin(t),t=0,n=B.length;t<n;t++){var q=B[t],k=new THREE.Vector3;k.x=s*q.x-o*q.y;k.y=o*q.x+s*q.y;k.z=q.z;this.vertices.push(k)}}z=B.length;v=0;for(u=A;v<u;v++){t=0;for(n=B.length-1;t<n;t++){y=A=t+z*v,o=A+z,s=A+1+z,this.faces.push(new THREE.Face4(y,o,s,A+1)),s=v*w,A=t*x,y=s+w,o=A+x,this.faceVertexUvs[0].push([new THREE.Vector2(s,A),new THREE.Vector2(y,A),new THREE.Vector2(y,o),new THREE.Vector2(s,o)])}}this.mergeVertices();this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PlaneGeometry=function(v,u,t,s){THREE.Geometry.call(this);this.width=v;this.height=u;this.widthSegments=t||1;this.heightSegments=s||1;for(var t=v/2,r=u/2,s=this.widthSegments,q=this.heightSegments,p=s+1,o=q+1,n=this.width/s,l=this.height/q,k=new THREE.Vector3(0,0,1),v=0;v<o;v++){for(u=0;u<p;u++){this.vertices.push(new THREE.Vector3(u*n-t,-(v*l-r),0))}}for(v=0;v<q;v++){for(u=0;u<s;u++){t=new THREE.Face4(u+p*v,u+p*(v+1),u+1+p*(v+1),u+1+p*v),t.normal.copy(k),t.vertexNormals.push(k.clone(),k.clone(),k.clone(),k.clone()),this.faces.push(t),this.faceVertexUvs[0].push([new THREE.Vector2(u/s,1-v/q),new THREE.Vector2(u/s,1-(v+1)/q),new THREE.Vector2((u+1)/s,1-(v+1)/q),new THREE.Vector2((u+1)/s,1-v/q)])}}this.computeCentroids()};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.RingGeometry=function(x,w,v,u,t,s){THREE.Geometry.call(this);for(var x=x||0,w=w||50,t=void 0!==t?t:0,s=void 0!==s?s:2*Math.PI,v=void 0!==v?Math.max(3,v):8,u=void 0!==u?Math.max(3,u):8,r=[],q=x,o=(w-x)/u,x=0;x<=u;x++){for(w=0;w<=v;w++){var n=new THREE.Vector3,l=t+w/v*s;n.x=q*Math.cos(l);n.y=q*Math.sin(l);this.vertices.push(n);r.push(new THREE.Vector2((n.x/q+1)/2,-(n.y/q+1)/2+1))}q+=o}t=new THREE.Vector3(0,0,1);for(x=0;x<u;x++){s=x*v;for(w=0;w<=v;w++){var l=w+s,o=l+x,n=l+v+x,k=l+v+1+x;this.faces.push(new THREE.Face3(o,n,k,[t,t,t]));this.faceVertexUvs[0].push([r[o],r[n],r[k]]);o=l+x;n=l+v+1+x;k=l+1+x;this.faces.push(new THREE.Face3(o,n,k,[t,t,t]));this.faceVertexUvs[0].push([r[o],r[n],r[k]])}}this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,q)};THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.SphereGeometry=function(G,F,E,D,C,B,A){THREE.Geometry.call(this);this.radius=G=G||50;this.widthSegments=F=Math.max(3,Math.floor(F)||8);this.heightSegments=E=Math.max(2,Math.floor(E)||6);this.phiStart=D=void 0!==D?D:0;this.phiLength=C=void 0!==C?C:2*Math.PI;this.thetaStart=B=void 0!==B?B:0;this.thetaLength=A=void 0!==A?A:Math.PI;var z,y,x=[],v=[];for(y=0;y<=E;y++){var t=[],w=[];for(z=0;z<=F;z++){var k=z/F,H=y/E,u=new THREE.Vector3;u.x=-G*Math.cos(D+k*C)*Math.sin(B+H*A);u.y=G*Math.cos(B+H*A);u.z=G*Math.sin(D+k*C)*Math.sin(B+H*A);this.vertices.push(u);t.push(this.vertices.length-1);w.push(new THREE.Vector2(k,1-H))}x.push(t);v.push(w)}for(y=0;y<this.heightSegments;y++){for(z=0;z<this.widthSegments;z++){var F=x[y][z+1],E=x[y][z],D=x[y+1][z],C=x[y+1][z+1],B=this.vertices[F].clone().normalize(),A=this.vertices[E].clone().normalize(),t=this.vertices[D].clone().normalize(),w=this.vertices[C].clone().normalize(),k=v[y][z+1].clone(),H=v[y][z].clone(),u=v[y+1][z].clone(),o=v[y+1][z+1].clone();Math.abs(this.vertices[F].y)===this.radius?(this.faces.push(new THREE.Face3(F,D,C,[B,t,w])),this.faceVertexUvs[0].push([k,u,o])):Math.abs(this.vertices[D].y)===this.radius?(this.faces.push(new THREE.Face3(F,E,D,[B,A,t])),this.faceVertexUvs[0].push([k,H,u])):(this.faces.push(new THREE.Face4(F,E,D,C,[B,A,t,w])),this.faceVertexUvs[0].push([k,H,u,o]))}}this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,G)};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TextGeometry=function(e,d){var d=d||{},f=THREE.FontUtils.generateShapes(e,d);d.amount=void 0!==d.height?d.height:50;void 0===d.bevelThickness&&(d.bevelThickness=10);void 0===d.bevelSize&&(d.bevelSize=8);void 0===d.bevelEnabled&&(d.bevelEnabled=!1);THREE.ExtrudeGeometry.call(this,f,d)};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);THREE.TorusGeometry=function(r,q,p,o,n){THREE.Geometry.call(this);this.radius=r||100;this.tube=q||40;this.radialSegments=p||8;this.tubularSegments=o||6;this.arc=n||2*Math.PI;n=new THREE.Vector3;r=[];q=[];for(p=0;p<=this.radialSegments;p++){for(o=0;o<=this.tubularSegments;o++){var m=o/this.tubularSegments*this.arc,l=2*p/this.radialSegments*Math.PI;n.x=this.radius*Math.cos(m);n.y=this.radius*Math.sin(m);var k=new THREE.Vector3;k.x=(this.radius+this.tube*Math.cos(l))*Math.cos(m);k.y=(this.radius+this.tube*Math.cos(l))*Math.sin(m);k.z=this.tube*Math.sin(l);this.vertices.push(k);r.push(new THREE.Vector2(o/this.tubularSegments,p/this.radialSegments));q.push(k.clone().sub(n).normalize())}}for(p=1;p<=this.radialSegments;p++){for(o=1;o<=this.tubularSegments;o++){var n=(this.tubularSegments+1)*p+o-1,m=(this.tubularSegments+1)*(p-1)+o-1,l=(this.tubularSegments+1)*(p-1)+o,k=(this.tubularSegments+1)*p+o,j=new THREE.Face4(n,m,l,k,[q[n],q[m],q[l],q[k]]);j.normal.add(q[n]);j.normal.add(q[m]);j.normal.add(q[l]);j.normal.add(q[k]);j.normal.normalize();this.faces.push(j);this.faceVertexUvs[0].push([r[n].clone(),r[m].clone(),r[l].clone(),r[k].clone()])}}this.computeCentroids()};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusKnotGeometry=function(v,u,t,s,r,q,p){function o(i,h,y,x,w,m){var j=Math.cos(i);Math.cos(h);h=Math.sin(i);i*=y/x;y=Math.cos(i);j*=0.5*w*(2+y);h=0.5*w*(2+y)*h;w=0.5*m*w*Math.sin(i);return new THREE.Vector3(j,h,w)}THREE.Geometry.call(this);this.radius=v||100;this.tube=u||40;this.radialSegments=t||64;this.tubularSegments=s||8;this.p=r||2;this.q=q||3;this.heightScale=p||1;this.grid=Array(this.radialSegments);t=new THREE.Vector3;s=new THREE.Vector3;r=new THREE.Vector3;for(v=0;v<this.radialSegments;++v){this.grid[v]=Array(this.tubularSegments);for(u=0;u<this.tubularSegments;++u){var n=2*(v/this.radialSegments)*this.p*Math.PI,p=2*(u/this.tubularSegments)*Math.PI,q=o(n,p,this.q,this.p,this.radius,this.heightScale),n=o(n+0.01,p,this.q,this.p,this.radius,this.heightScale);t.subVectors(n,q);s.addVectors(n,q);r.crossVectors(t,s);s.crossVectors(r,t);r.normalize();s.normalize();n=-this.tube*Math.cos(p);p=this.tube*Math.sin(p);q.x+=n*s.x+p*r.x;q.y+=n*s.y+p*r.y;q.z+=n*s.z+p*r.z;this.grid[v][u]=this.vertices.push(new THREE.Vector3(q.x,q.y,q.z))-1}}for(v=0;v<this.radialSegments;++v){for(u=0;u<this.tubularSegments;++u){var r=(v+1)%this.radialSegments,q=(u+1)%this.tubularSegments,t=this.grid[v][u],s=this.grid[r][u],r=this.grid[r][q],q=this.grid[v][q],p=new THREE.Vector2(v/this.radialSegments,u/this.tubularSegments),n=new THREE.Vector2((v+1)/this.radialSegments,u/this.tubularSegments),l=new THREE.Vector2((v+1)/this.radialSegments,(u+1)/this.tubularSegments),k=new THREE.Vector2(v/this.radialSegments,(u+1)/this.tubularSegments);this.faces.push(new THREE.Face4(t,s,r,q));this.faceVertexUvs[0].push([p,n,l,k])}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry=function(B,A,z,y,x,w){THREE.Geometry.call(this);this.path=B;this.segments=A||64;this.radius=z||1;this.radiusSegments=y||8;this.closed=x||!1;w&&(this.debug=new THREE.Object3D);this.grid=[];var v,u,x=this.segments+1,t,s,o,w=new THREE.Vector3,n,q,k,A=new THREE.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed);n=A.tangents;q=A.normals;k=A.binormals;this.tangents=n;this.normals=q;this.binormals=k;for(A=0;A<x;A++){this.grid[A]=[];y=A/(x-1);o=B.getPointAt(y);y=n[A];v=q[A];u=k[A];this.debug&&(this.debug.add(new THREE.ArrowHelper(y,o,z,255)),this.debug.add(new THREE.ArrowHelper(v,o,z,16711680)),this.debug.add(new THREE.ArrowHelper(u,o,z,65280)));for(y=0;y<this.radiusSegments;y++){t=2*(y/this.radiusSegments)*Math.PI,s=-this.radius*Math.cos(t),t=this.radius*Math.sin(t),w.copy(o),w.x+=s*v.x+t*u.x,w.y+=s*v.y+t*u.y,w.z+=s*v.z+t*u.z,this.grid[A][y]=this.vertices.push(new THREE.Vector3(w.x,w.y,w.z))-1}}for(A=0;A<this.segments;A++){for(y=0;y<this.radiusSegments;y++){x=this.closed?(A+1)%this.segments:A+1,w=(y+1)%this.radiusSegments,B=this.grid[A][y],z=this.grid[x][y],x=this.grid[x][w],w=this.grid[A][w],n=new THREE.Vector2(A/this.segments,y/this.radiusSegments),q=new THREE.Vector2((A+1)/this.segments,y/this.radiusSegments),k=new THREE.Vector2((A+1)/this.segments,(y+1)/this.radiusSegments),v=new THREE.Vector2(A/this.segments,(y+1)/this.radiusSegments),this.faces.push(new THREE.Face4(B,z,x,w)),this.faceVertexUvs[0].push([n,q,k,v])}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry.FrenetFrames=function(x,w,v){new THREE.Vector3;var u=new THREE.Vector3;new THREE.Vector3;var t=[],s=[],r=[],q=new THREE.Vector3,o=new THREE.Matrix4,w=w+1,n,l,k;this.tangents=t;this.normals=s;this.binormals=r;for(n=0;n<w;n++){l=n/(w-1),t[n]=x.getTangentAt(l),t[n].normalize()}s[0]=new THREE.Vector3;r[0]=new THREE.Vector3;x=Number.MAX_VALUE;n=Math.abs(t[0].x);l=Math.abs(t[0].y);k=Math.abs(t[0].z);n<=x&&(x=n,u.set(1,0,0));l<=x&&(x=l,u.set(0,1,0));k<=x&&u.set(0,0,1);q.crossVectors(t[0],u).normalize();s[0].crossVectors(t[0],q);r[0].crossVectors(t[0],s[0]);for(n=1;n<w;n++){s[n]=s[n-1].clone(),r[n]=r[n-1].clone(),q.crossVectors(t[n-1],t[n]),0.0001<q.length()&&(q.normalize(),u=Math.acos(t[n-1].dot(t[n])),s[n].applyMatrix4(o.makeRotationAxis(q,u))),r[n].crossVectors(t[n],s[n])}if(v){u=Math.acos(s[0].dot(s[w-1]));u/=w-1;0<t[0].dot(q.crossVectors(s[0],s[w-1]))&&(u=-u);for(n=1;n<w;n++){s[n].applyMatrix4(o.makeRotationAxis(t[n],u*n)),r[n].crossVectors(t[n],s[n])}}};THREE.PolyhedronGeometry=function(L,K,J,I){function H(e){var d=e.normalize().clone();d.index=E.vertices.push(d)-1;var f=Math.atan2(e.z,-e.x)/2/Math.PI+0.5,e=Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+0.5;d.uv=new THREE.Vector2(f,1-e);return d}function G(f,e,h){var g=new THREE.Face3(f.index,e.index,h.index,[f.clone(),e.clone(),h.clone()]);g.centroid.add(f).add(e).add(h).divideScalar(3);g.normal.copy(g.centroid).normalize();E.faces.push(g);g=Math.atan2(g.centroid.z,-g.centroid.x);E.faceVertexUvs[0].push([F(f.uv,f,g),F(e.uv,e,g),F(h.uv,h,g)])}function F(e,d,f){0>f&&1===e.x&&(e=new THREE.Vector2(e.x-1,e.y));0===d.x&&0===d.z&&(e=new THREE.Vector2(f/2/Math.PI+0.5,e.y));return e.clone()}THREE.Geometry.call(this);for(var J=J||1,I=I||0,E=this,D=0,C=L.length;D<C;D++){H(new THREE.Vector3(L[D][0],L[D][1],L[D][2]))}for(var A=this.vertices,L=[],D=0,C=K.length;D<C;D++){var x=A[K[D][0]],B=A[K[D][1]],v=A[K[D][2]];L[D]=new THREE.Face3(x.index,B.index,v.index,[x.clone(),B.clone(),v.clone()])}D=0;for(C=L.length;D<C;D++){B=L[D];A=I;K=Math.pow(2,A);Math.pow(4,A);for(var A=H(E.vertices[B.a]),x=H(E.vertices[B.b]),t=H(E.vertices[B.c]),B=[],v=0;v<=K;v++){B[v]=[];for(var z=H(A.clone().lerp(t,v/K)),w=H(x.clone().lerp(t,v/K)),k=K-v,o=0;o<=k;o++){B[v][o]=0==o&&v==K?z:H(z.clone().lerp(w,o/k))}}for(v=0;v<K;v++){for(o=0;o<2*(K-v)-1;o++){A=Math.floor(o/2),0==o%2?G(B[v][A+1],B[v+1][A],B[v][A]):G(B[v][A+1],B[v+1][A+1],B[v+1][A])}}}D=0;for(C=this.faceVertexUvs[0].length;D<C;D++){I=this.faceVertexUvs[0][D],L=I[0].x,K=I[1].x,A=I[2].x,x=Math.max(L,Math.max(K,A)),B=Math.min(L,Math.min(K,A)),0.9<x&&0.1>B&&(0.2>L&&(I[0].x+=1),0.2>K&&(I[1].x+=1),0.2>A&&(I[2].x+=1))}this.mergeVertices();D=0;for(C=this.vertices.length;D<C;D++){this.vertices[D].multiplyScalar(J)}this.computeCentroids();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,J)};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.IcosahedronGeometry=function(e,d){this.radius=e;this.detail=d;var f=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,f,0],[1,f,0],[-1,-f,0],[1,-f,0],[0,-1,f],[0,1,f],[0,-1,-f],[0,1,-f],[f,0,-1],[f,0,1],[-f,0,-1],[-f,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],e,d)};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.OctahedronGeometry=function(d,c){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],d,c)};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry=function(d,c){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],d,c)};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometry=function(E,D,C,B){THREE.Geometry.call(this);var A=this.vertices,z=this.faces,y=this.faceVertexUvs[0],B=void 0===B?!1:B,x,w,v,t,o=D+1;for(x=0;x<=C;x++){t=x/C;for(w=0;w<=D;w++){v=w/D,v=E(v,t),A.push(v)}}var u,k,F,q;for(x=0;x<C;x++){for(w=0;w<D;w++){E=x*o+w,A=x*o+w+1,t=(x+1)*o+w,v=(x+1)*o+w+1,u=new THREE.Vector2(w/D,x/C),k=new THREE.Vector2((w+1)/D,x/C),F=new THREE.Vector2(w/D,(x+1)/C),q=new THREE.Vector2((w+1)/D,(x+1)/C),B?(z.push(new THREE.Face3(E,A,t)),z.push(new THREE.Face3(A,v,t)),y.push([u,k,F]),y.push([k,q,F])):(z.push(new THREE.Face4(E,A,v,t)),y.push([u,k,q,F]))}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ConvexGeometry=function(E){function D(d){var c=d.length();return new THREE.Vector2(d.x/c,d.y/c)}THREE.Geometry.call(this);for(var C=[[0,1,2],[0,2,1]],B=3;B<E.length;B++){var A=B,z=E[A].clone(),y=z.length();z.x+=y*0.000002*(Math.random()-0.5);z.y+=y*0.000002*(Math.random()-0.5);z.z+=y*0.000002*(Math.random()-0.5);for(var y=[],x=0;x<C.length;){var w=C[x],v=z,t=E[w[0]],o;o=t;var u=E[w[1]],k=E[w[2]],F=new THREE.Vector3,q=new THREE.Vector3;F.subVectors(k,u);q.subVectors(o,u);F.cross(q);F.normalize();o=F;t=o.dot(t);if(o.dot(v)>=t){for(v=0;3>v;v++){t=[w[v],w[(v+1)%3]];o=!0;for(u=0;u<y.length;u++){if(y[u][0]===t[1]&&y[u][1]===t[0]){y[u]=y[y.length-1];y.pop();o=!1;break}}o&&y.push(t)}C[x]=C[C.length-1];C.pop()}else{x++}}for(u=0;u<y.length;u++){C.push([y[u][0],y[u][1],A])}}A=0;z=Array(E.length);for(B=0;B<C.length;B++){y=C[B];for(x=0;3>x;x++){void 0===z[y[x]]&&(z[y[x]]=A++,this.vertices.push(E[y[x]])),y[x]=z[y[x]]}}for(B=0;B<C.length;B++){this.faces.push(new THREE.Face3(C[B][0],C[B][1],C[B][2]))}for(B=0;B<this.faces.length;B++){y=this.faces[B],this.faceVertexUvs[0].push([D(this.vertices[y.a]),D(this.vertices[y.b]),D(this.vertices[y.c])])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ConvexGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.AxisHelper=function(d){var d=d||1,c=new THREE.Geometry;c.vertices.push(new THREE.Vector3,new THREE.Vector3(d,0,0),new THREE.Vector3,new THREE.Vector3(0,d,0),new THREE.Vector3,new THREE.Vector3(0,0,d));c.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));d=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,c,d,THREE.LinePieces)};THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype);THREE.ArrowHelper=function(f,e,h,g){THREE.Object3D.call(this);void 0===g&&(g=16776960);void 0===h&&(h=1);this.position=e;this.useQuaternion=!0;e=new THREE.Geometry;e.vertices.push(new THREE.Vector3(0,0,0));e.vertices.push(new THREE.Vector3(0,1,0));this.line=new THREE.Line(e,new THREE.LineBasicMaterial({color:g}));this.line.matrixAutoUpdate=!1;this.add(this.line);e=new THREE.CylinderGeometry(0,0.05,0.25,5,1);e.applyMatrix((new THREE.Matrix4).makeTranslation(0,0.875,0));this.cone=new THREE.Mesh(e,new THREE.MeshBasicMaterial({color:g}));this.cone.matrixAutoUpdate=!1;this.add(this.cone);this.setDirection(f);this.setLength(h)};THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.setDirection=function(){var d=new THREE.Vector3,c;return function(a){0.999<a.y?this.quaternion.set(0,0,0,1):-0.999>a.y?this.quaternion.set(1,0,0,0):(d.set(a.z,0,-a.x).normalize(),c=Math.acos(a.y),this.quaternion.setFromAxisAngle(d,c))}}();THREE.ArrowHelper.prototype.setLength=function(b){this.scale.set(b,b,b)};THREE.ArrowHelper.prototype.setColor=function(b){this.line.material.color.setHex(b);this.cone.material.color.setHex(b)};THREE.BoxHelper=function(d){var d=d||1,c=new THREE.Geometry,d=[new THREE.Vector3(d,d,d),new THREE.Vector3(-d,d,d),new THREE.Vector3(-d,-d,d),new THREE.Vector3(d,-d,d),new THREE.Vector3(d,d,-d),new THREE.Vector3(-d,d,-d),new THREE.Vector3(-d,-d,-d),new THREE.Vector3(d,-d,-d)];c.vertices.push(d[0],d[1],d[1],d[2],d[2],d[3],d[3],d[0],d[4],d[5],d[5],d[6],d[6],d[7],d[7],d[4],d[0],d[4],d[1],d[5],d[2],d[6],d[3],d[7]);this.vertices=d;THREE.Line.call(this,c,new THREE.LineBasicMaterial,THREE.LinePieces)};THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype);THREE.BoxHelper.prototype.update=function(f){var e=f.geometry;null===e.boundingBox&&e.computeBoundingBox();var h=e.boundingBox.min,e=e.boundingBox.max,g=this.vertices;g[0].set(e.x,e.y,e.z);g[1].set(h.x,e.y,e.z);g[2].set(h.x,h.y,e.z);g[3].set(e.x,h.y,e.z);g[4].set(e.x,e.y,h.z);g[5].set(h.x,e.y,h.z);g[6].set(h.x,h.y,h.z);g[7].set(e.x,h.y,h.z);this.geometry.computeBoundingSphere();this.geometry.verticesNeedUpdate=!0;this.matrixAutoUpdate=!1;this.matrixWorld=f.matrixWorld};THREE.CameraHelper=function(h){function g(e,c,f){l(e,f);l(c,f)}function l(d,c){k.vertices.push(new THREE.Vector3);k.colors.push(new THREE.Color(c));void 0===i[d]&&(i[d]=[]);i[d].push(k.vertices.length-1)}THREE.Line.call(this);var k=new THREE.Geometry,j=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),i={};g("n1","n2",16755200);g("n2","n4",16755200);g("n4","n3",16755200);g("n3","n1",16755200);g("f1","f2",16755200);g("f2","f4",16755200);g("f4","f3",16755200);g("f3","f1",16755200);g("n1","f1",16755200);g("n2","f2",16755200);g("n3","f3",16755200);g("n4","f4",16755200);g("p","n1",16711680);g("p","n2",16711680);g("p","n3",16711680);g("p","n4",16711680);g("u1","u2",43775);g("u2","u3",43775);g("u3","u1",43775);g("c","t",16777215);g("p","c",3355443);g("cn1","cn2",3355443);g("cn3","cn4",3355443);g("cf1","cf2",3355443);g("cf3","cf4",3355443);THREE.Line.call(this,k,j,THREE.LinePieces);this.camera=h;this.matrixWorld=h.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=i;this.update()};THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);THREE.CameraHelper.prototype.update=function(){var e=new THREE.Vector3,d=new THREE.Camera,f=new THREE.Projector;return function(){function b(l,k,j,c){e.set(k,j,c);f.unprojectVector(e,d);l=a.pointMap[l];if(void 0!==l){k=0;for(j=l.length;k<j;k++){a.geometry.vertices[l[k]].copy(e)}}}var a=this;d.projectionMatrix.copy(this.camera.projectionMatrix);b("c",0,0,-1);b("t",0,0,1);b("n1",-1,-1,-1);b("n2",1,-1,-1);b("n3",-1,1,-1);b("n4",1,1,-1);b("f1",-1,-1,1);b("f2",1,-1,1);b("f3",-1,1,1);b("f4",1,1,1);b("u1",0.7,1.1,-1);b("u2",-0.7,1.1,-1);b("u3",0,2,-1);b("cf1",-1,0,1);b("cf2",1,0,1);b("cf3",0,-1,1);b("cf4",0,1,1);b("cn1",-1,0,-1);b("cn2",1,0,-1);b("cn3",0,-1,-1);b("cn4",0,1,-1);this.geometry.verticesNeedUpdate=!0}}();THREE.DirectionalLightHelper=function(f,e){THREE.Object3D.call(this);this.matrixAutoUpdate=!1;this.light=f;var h=new THREE.SphereGeometry(e,4,2),g=new THREE.MeshBasicMaterial({fog:!1,wireframe:!0});g.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightSphere=new THREE.Mesh(h,g);this.lightSphere.matrixWorld=this.light.matrixWorld;this.lightSphere.matrixAutoUpdate=!1;this.add(this.lightSphere);h=new THREE.Geometry;h.vertices.push(this.light.position);h.vertices.push(this.light.target.position);h.computeLineDistances();g=new THREE.LineDashedMaterial({dashSize:4,gapSize:4,opacity:0.75,transparent:!0,fog:!1});g.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine=new THREE.Line(h,g);this.add(this.targetLine)};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.DirectionalLightHelper.prototype.update=function(){this.lightSphere.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.targetLine.geometry.computeLineDistances();this.targetLine.geometry.verticesNeedUpdate=!0;this.targetLine.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};THREE.GridHelper=function(j,i){for(var p=new THREE.Geometry,o=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors}),n=new THREE.Color(4473924),m=new THREE.Color(8947848),l=-j;l<=j;l+=i){p.vertices.push(new THREE.Vector3(-j,0,l));p.vertices.push(new THREE.Vector3(j,0,l));p.vertices.push(new THREE.Vector3(l,0,-j));p.vertices.push(new THREE.Vector3(l,0,j));var k=0===l?n:m;p.colors.push(k,k,k,k)}THREE.Line.call(this,p,o,THREE.LinePieces)};THREE.GridHelper.prototype=Object.create(THREE.Line.prototype);THREE.HemisphereLightHelper=function(g,f){THREE.Object3D.call(this);this.light=g;var j=new THREE.SphereGeometry(f,4,2);j.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));for(var i=0;8>i;i++){j.faces[i].materialIndex=4>i?0:1}i=new THREE.MeshBasicMaterial({fog:!1,wireframe:!0});i.color.copy(g.color).multiplyScalar(g.intensity);var h=new THREE.MeshBasicMaterial({fog:!1,wireframe:!0});h.color.copy(g.groundColor).multiplyScalar(g.intensity);this.lightSphere=new THREE.Mesh(j,new THREE.MeshFaceMaterial([i,h]));this.lightSphere.position=g.position;this.lightSphere.lookAt(new THREE.Vector3);this.add(this.lightSphere)};THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.HemisphereLightHelper.prototype.update=function(){this.lightSphere.lookAt(new THREE.Vector3);this.lightSphere.material.materials[0].color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightSphere.material.materials[1].color.copy(this.light.groundColor).multiplyScalar(this.light.intensity)};THREE.PointLightHelper=function(f,e){THREE.Object3D.call(this);this.matrixAutoUpdate=!1;this.light=f;var h=new THREE.SphereGeometry(e,4,2),g=new THREE.MeshBasicMaterial({fog:!1,wireframe:!0});g.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightSphere=new THREE.Mesh(h,g);this.lightSphere.matrixWorld=this.light.matrixWorld;this.lightSphere.matrixAutoUpdate=!1;this.add(this.lightSphere)};THREE.PointLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.PointLightHelper.prototype.update=function(){this.lightSphere.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};THREE.SpotLightHelper=function(f,e){THREE.Object3D.call(this);this.matrixAutoUpdate=!1;this.light=f;var h=new THREE.SphereGeometry(e,4,2),g=new THREE.MeshBasicMaterial({fog:!1,wireframe:!0});g.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightSphere=new THREE.Mesh(h,g);this.lightSphere.matrixWorld=this.light.matrixWorld;this.lightSphere.matrixAutoUpdate=!1;this.add(this.lightSphere);h=new THREE.CylinderGeometry(0.0001,1,1,8,1,!0);h.applyMatrix((new THREE.Matrix4).makeTranslation(0,-0.5,0));h.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));g=new THREE.MeshBasicMaterial({fog:!1,wireframe:!0,opacity:0.3,transparent:!0});g.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightCone=new THREE.Mesh(h,g);this.lightCone.position=this.light.position;h=f.distance?f.distance:10000;g=h*Math.tan(f.angle);this.lightCone.scale.set(g,g,h);this.lightCone.lookAt(this.light.target.position);this.add(this.lightCone)};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.SpotLightHelper.prototype.update=function(){var d=this.light.distance?this.light.distance:10000,c=d*Math.tan(this.light.angle);this.lightCone.scale.set(c,c,d);this.lightCone.lookAt(this.light.target.position);this.lightSphere.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);this.lightCone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare=function(g,f,j,i,h){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==g&&this.add(g,f,j,i,h)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare.prototype.add=function(h,g,l,k,j,i){void 0===g&&(g=-1);void 0===l&&(l=0);void 0===i&&(i=1);void 0===j&&(j=new THREE.Color(16777215));void 0===k&&(k=THREE.NormalBlending);l=Math.min(l,Math.max(0,l));this.lensFlares.push({texture:h,size:g,distance:l,x:0,y:0,z:0,scale:1,rotation:1,opacity:i,color:j,blending:k})};THREE.LensFlare.prototype.updateLensFlares=function(){var g,f=this.lensFlares.length,j,i=2*-this.positionScreen.x,h=2*-this.positionScreen.y;for(g=0;g<f;g++){j=this.lensFlares[g],j.x=this.positionScreen.x+i*j.distance,j.y=this.positionScreen.y+h*j.distance,j.wantedRotation=0.25*j.x*Math.PI,j.rotation+=0.25*(j.wantedRotation-j.rotation)}};THREE.MorphBlendMesh=function(e,d){THREE.Mesh.call(this,e,d);this.animationsMap={};this.animationsList=[];var f=this.geometry.morphTargets.length;this.createAnimation("__default",0,f-1,f/1);this.setAnimationWeight("__default",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphBlendMesh.prototype.createAnimation=function(f,e,h,g){e={startFrame:e,endFrame:h,length:h-e+1,fps:g,duration:(h-e)/g,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[f]=e;this.animationsList.push(e)};THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(r){for(var q=/([a-z]+)(\d+)/,p,o={},n=this.geometry,m=0,l=n.morphTargets.length;m<l;m++){var k=n.morphTargets[m].name.match(q);if(k&&1<k.length){var j=k[1];o[j]||(o[j]={start:Infinity,end:-Infinity});k=o[j];m<k.start&&(k.start=m);m>k.end&&(k.end=m);p||(p=j)}}for(j in o){k=o[j],this.createAnimation(j,k.start,k.end,r)}this.firstAnimation=p};THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(b){if(b=this.animationsMap[b]){b.direction=1,b.directionBackwards=!1}};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(b){if(b=this.animationsMap[b]){b.direction=-1,b.directionBackwards=!0}};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(e,d){var f=this.animationsMap[e];f&&(f.fps=d,f.duration=(f.end-f.start)/f.fps)};THREE.MorphBlendMesh.prototype.setAnimationDuration=function(e,d){var f=this.animationsMap[e];f&&(f.duration=d,f.fps=(f.end-f.start)/f.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(e,d){var f=this.animationsMap[e];f&&(f.weight=d)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(e,d){var f=this.animationsMap[e];f&&(f.time=d)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(d){var c=0;if(d=this.animationsMap[d]){c=d.time}return c};THREE.MorphBlendMesh.prototype.getAnimationDuration=function(d){var c=-1;if(d=this.animationsMap[d]){c=d.duration}return c};THREE.MorphBlendMesh.prototype.playAnimation=function(d){var c=this.animationsMap[d];c?(c.time=0,c.active=!0):console.warn("animation["+d+"] undefined")};THREE.MorphBlendMesh.prototype.stopAnimation=function(b){if(b=this.animationsMap[b]){b.active=!1}};THREE.MorphBlendMesh.prototype.update=function(i){for(var h=0,n=this.animationsList.length;h<n;h++){var m=this.animationsList[h];if(m.active){var l=m.duration/m.length;m.time+=m.direction*i;if(m.mirroredLoop){if(m.time>m.duration||0>m.time){m.direction*=-1,m.time>m.duration&&(m.time=m.duration,m.directionBackwards=!0),0>m.time&&(m.time=0,m.directionBackwards=!1)}}else{m.time%=m.duration,0>m.time&&(m.time+=m.duration)}var k=m.startFrame+THREE.Math.clamp(Math.floor(m.time/l),0,m.length-1),j=m.weight;k!==m.currentFrame&&(this.morphTargetInfluences[m.lastFrame]=0,this.morphTargetInfluences[m.currentFrame]=1*j,this.morphTargetInfluences[k]=0,m.lastFrame=m.currentFrame,m.currentFrame=k);l=m.time%l/l;m.directionBackwards&&(l=1-l);this.morphTargetInfluences[m.currentFrame]=l*j;this.morphTargetInfluences[m.lastFrame]=(1-l)*j}}};THREE.LensFlarePlugin=function(){function B(b,m){var l=A.createProgram(),j=A.createShader(A.FRAGMENT_SHADER),i=A.createShader(A.VERTEX_SHADER),h="precision "+m+" float;\n";A.shaderSource(j,h+b.fragmentShader);A.shaderSource(i,h+b.vertexShader);A.compileShader(j);A.compileShader(i);A.attachShader(l,j);A.attachShader(l,i);A.linkProgram(l);return l}var A,z,y,x,w,v,u,t,s,o,n,q,k;this.init=function(a){A=a.context;z=a;y=a.getPrecision();x=new Float32Array(16);w=new Uint16Array(6);a=0;x[a++]=-1;x[a++]=-1;x[a++]=0;x[a++]=0;x[a++]=1;x[a++]=-1;x[a++]=1;x[a++]=0;x[a++]=1;x[a++]=1;x[a++]=1;x[a++]=1;x[a++]=-1;x[a++]=1;x[a++]=0;x[a++]=1;a=0;w[a++]=0;w[a++]=1;w[a++]=2;w[a++]=0;w[a++]=2;w[a++]=3;v=A.createBuffer();u=A.createBuffer();A.bindBuffer(A.ARRAY_BUFFER,v);A.bufferData(A.ARRAY_BUFFER,x,A.STATIC_DRAW);A.bindBuffer(A.ELEMENT_ARRAY_BUFFER,u);A.bufferData(A.ELEMENT_ARRAY_BUFFER,w,A.STATIC_DRAW);t=A.createTexture();s=A.createTexture();A.bindTexture(A.TEXTURE_2D,t);A.texImage2D(A.TEXTURE_2D,0,A.RGB,16,16,0,A.RGB,A.UNSIGNED_BYTE,null);A.texParameteri(A.TEXTURE_2D,A.TEXTURE_WRAP_S,A.CLAMP_TO_EDGE);A.texParameteri(A.TEXTURE_2D,A.TEXTURE_WRAP_T,A.CLAMP_TO_EDGE);A.texParameteri(A.TEXTURE_2D,A.TEXTURE_MAG_FILTER,A.NEAREST);A.texParameteri(A.TEXTURE_2D,A.TEXTURE_MIN_FILTER,A.NEAREST);A.bindTexture(A.TEXTURE_2D,s);A.texImage2D(A.TEXTURE_2D,0,A.RGBA,16,16,0,A.RGBA,A.UNSIGNED_BYTE,null);A.texParameteri(A.TEXTURE_2D,A.TEXTURE_WRAP_S,A.CLAMP_TO_EDGE);A.texParameteri(A.TEXTURE_2D,A.TEXTURE_WRAP_T,A.CLAMP_TO_EDGE);A.texParameteri(A.TEXTURE_2D,A.TEXTURE_MAG_FILTER,A.NEAREST);A.texParameteri(A.TEXTURE_2D,A.TEXTURE_MIN_FILTER,A.NEAREST);0>=A.getParameter(A.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(o=!1,n=B(THREE.ShaderFlares.lensFlare,y)):(o=!0,n=B(THREE.ShaderFlares.lensFlareVertexTexture,y));q={};k={};q.vertex=A.getAttribLocation(n,"position");q.uv=A.getAttribLocation(n,"uv");k.renderType=A.getUniformLocation(n,"renderType");k.map=A.getUniformLocation(n,"map");k.occlusionMap=A.getUniformLocation(n,"occlusionMap");k.opacity=A.getUniformLocation(n,"opacity");k.color=A.getUniformLocation(n,"color");k.scale=A.getUniformLocation(n,"scale");k.rotation=A.getUniformLocation(n,"rotation");k.screenPosition=A.getUniformLocation(n,"screenPosition")};this.render=function(T,S,R,Q){var T=T.__webglFlares,D=T.length;if(D){var l=new THREE.Vector3,N=Q/R,M=0.5*R,i=0.5*Q,r=16/Q,h=new THREE.Vector2(r*N,r),m=new THREE.Vector3(1,1,0),g=new THREE.Vector2(1,1),p=k,r=q;A.useProgram(n);A.enableVertexAttribArray(q.vertex);A.enableVertexAttribArray(q.uv);A.uniform1i(p.occlusionMap,0);A.uniform1i(p.map,1);A.bindBuffer(A.ARRAY_BUFFER,v);A.vertexAttribPointer(r.vertex,2,A.FLOAT,!1,16,0);A.vertexAttribPointer(r.uv,2,A.FLOAT,!1,16,8);A.bindBuffer(A.ELEMENT_ARRAY_BUFFER,u);A.disable(A.CULL_FACE);A.depthMask(!1);var c,P,b,O,j;for(c=0;c<D;c++){if(r=16/Q,h.set(r*N,r),O=T[c],l.set(O.matrixWorld.elements[12],O.matrixWorld.elements[13],O.matrixWorld.elements[14]),l.applyMatrix4(S.matrixWorldInverse),l.applyProjection(S.projectionMatrix),m.copy(l),g.x=m.x*M+M,g.y=m.y*i+i,o||0<g.x&&g.x<R&&0<g.y&&g.y<Q){A.activeTexture(A.TEXTURE1);A.bindTexture(A.TEXTURE_2D,t);A.copyTexImage2D(A.TEXTURE_2D,0,A.RGB,g.x-8,g.y-8,16,16,0);A.uniform1i(p.renderType,0);A.uniform2f(p.scale,h.x,h.y);A.uniform3f(p.screenPosition,m.x,m.y,m.z);A.disable(A.BLEND);A.enable(A.DEPTH_TEST);A.drawElements(A.TRIANGLES,6,A.UNSIGNED_SHORT,0);A.activeTexture(A.TEXTURE0);A.bindTexture(A.TEXTURE_2D,s);A.copyTexImage2D(A.TEXTURE_2D,0,A.RGBA,g.x-8,g.y-8,16,16,0);A.uniform1i(p.renderType,1);A.disable(A.DEPTH_TEST);A.activeTexture(A.TEXTURE1);A.bindTexture(A.TEXTURE_2D,t);A.drawElements(A.TRIANGLES,6,A.UNSIGNED_SHORT,0);O.positionScreen.copy(m);O.customUpdateCallback?O.customUpdateCallback(O):O.updateLensFlares();A.uniform1i(p.renderType,2);A.enable(A.BLEND);P=0;for(b=O.lensFlares.length;P<b;P++){j=O.lensFlares[P],0.001<j.opacity&&0.001<j.scale&&(m.x=j.x,m.y=j.y,m.z=j.z,r=j.size*j.scale/Q,h.x=r*N,h.y=r,A.uniform3f(p.screenPosition,m.x,m.y,m.z),A.uniform2f(p.scale,h.x,h.y),A.uniform1f(p.rotation,j.rotation),A.uniform1f(p.opacity,j.opacity),A.uniform3f(p.color,j.color.r,j.color.g,j.color.b),z.setBlending(j.blending,j.blendEquation,j.blendSrc,j.blendDst),z.setTexture(j.texture,1),A.drawElements(A.TRIANGLES,6,A.UNSIGNED_SHORT,0))}}}A.enable(A.CULL_FACE);A.enable(A.DEPTH_TEST);A.depthMask(!0)}}};THREE.ShadowMapPlugin=function(){var v,u,t,s,r,q,p=new THREE.Frustum,o=new THREE.Matrix4,n=new THREE.Vector3,l=new THREE.Vector3,k=new THREE.Vector3;this.init=function(b){v=b.context;u=b;var b=THREE.ShaderLib.depthRGBA,a=THREE.UniformsUtils.clone(b.uniforms);t=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a});s=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a,morphTargets:!0});r=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a,skinning:!0});q=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a,morphTargets:!0,skinning:!0});t._shadowPass=!0;s._shadowPass=!0;r._shadowPass=!0;q._shadowPass=!0};this.render=function(b,d){u.shadowMapEnabled&&u.shadowMapAutoUpdate&&this.update(b,d)};this.update=function(c,e){var a,B,d,b,g,j,i,w,A,h=[];b=0;v.clearColor(1,1,1,1);v.disable(v.BLEND);v.enable(v.CULL_FACE);v.frontFace(v.CCW);u.shadowMapCullFace===THREE.CullFaceFront?v.cullFace(v.FRONT):v.cullFace(v.BACK);u.setDepthTest(!0);a=0;for(B=c.__lights.length;a<B;a++){if(d=c.__lights[a],d.castShadow){if(d instanceof THREE.DirectionalLight&&d.shadowCascade){for(g=0;g<d.shadowCascadeCount;g++){var m;if(d.shadowCascadeArray[g]){m=d.shadowCascadeArray[g]}else{A=d;i=g;m=new THREE.DirectionalLight;m.isVirtual=!0;m.onlyShadow=!0;m.castShadow=!0;m.shadowCameraNear=A.shadowCameraNear;m.shadowCameraFar=A.shadowCameraFar;m.shadowCameraLeft=A.shadowCameraLeft;m.shadowCameraRight=A.shadowCameraRight;m.shadowCameraBottom=A.shadowCameraBottom;m.shadowCameraTop=A.shadowCameraTop;m.shadowCameraVisible=A.shadowCameraVisible;m.shadowDarkness=A.shadowDarkness;m.shadowBias=A.shadowCascadeBias[i];m.shadowMapWidth=A.shadowCascadeWidth[i];m.shadowMapHeight=A.shadowCascadeHeight[i];m.pointsWorld=[];m.pointsFrustum=[];w=m.pointsWorld;j=m.pointsFrustum;for(var f=0;8>f;f++){w[f]=new THREE.Vector3,j[f]=new THREE.Vector3}w=A.shadowCascadeNearZ[i];A=A.shadowCascadeFarZ[i];j[0].set(-1,-1,w);j[1].set(1,-1,w);j[2].set(-1,1,w);j[3].set(1,1,w);j[4].set(-1,-1,A);j[5].set(1,-1,A);j[6].set(-1,1,A);j[7].set(1,1,A);m.originalCamera=e;j=new THREE.Gyroscope;j.position=d.shadowCascadeOffset;j.add(m);j.add(m.target);e.add(j);d.shadowCascadeArray[g]=m;console.log("Created virtualLight",m)}i=d;w=g;A=i.shadowCascadeArray[w];A.position.copy(i.position);A.target.position.copy(i.target.position);A.lookAt(A.target);A.shadowCameraVisible=i.shadowCameraVisible;A.shadowDarkness=i.shadowDarkness;A.shadowBias=i.shadowCascadeBias[w];j=i.shadowCascadeNearZ[w];i=i.shadowCascadeFarZ[w];A=A.pointsFrustum;A[0].z=j;A[1].z=j;A[2].z=j;A[3].z=j;A[4].z=i;A[5].z=i;A[6].z=i;A[7].z=i;h[b]=m;b++}}else{h[b]=d,b++}}}a=0;for(B=h.length;a<B;a++){d=h[a];d.shadowMap||(g=THREE.LinearFilter,u.shadowMapType===THREE.PCFSoftShadowMap&&(g=THREE.NearestFilter),d.shadowMap=new THREE.WebGLRenderTarget(d.shadowMapWidth,d.shadowMapHeight,{minFilter:g,magFilter:g,format:THREE.RGBAFormat}),d.shadowMapSize=new THREE.Vector2(d.shadowMapWidth,d.shadowMapHeight),d.shadowMatrix=new THREE.Matrix4);if(!d.shadowCamera){if(d instanceof THREE.SpotLight){d.shadowCamera=new THREE.PerspectiveCamera(d.shadowCameraFov,d.shadowMapWidth/d.shadowMapHeight,d.shadowCameraNear,d.shadowCameraFar)}else{if(d instanceof THREE.DirectionalLight){d.shadowCamera=new THREE.OrthographicCamera(d.shadowCameraLeft,d.shadowCameraRight,d.shadowCameraTop,d.shadowCameraBottom,d.shadowCameraNear,d.shadowCameraFar)}else{console.error("Unsupported light type for shadow");continue}}c.add(d.shadowCamera);!0===c.autoUpdate&&c.updateMatrixWorld()}d.shadowCameraVisible&&!d.cameraHelper&&(d.cameraHelper=new THREE.CameraHelper(d.shadowCamera),d.shadowCamera.add(d.cameraHelper));if(d.isVirtual&&m.originalCamera==e){g=e;b=d.shadowCamera;j=d.pointsFrustum;A=d.pointsWorld;n.set(Infinity,Infinity,Infinity);l.set(-Infinity,-Infinity,-Infinity);for(i=0;8>i;i++){w=A[i],w.copy(j[i]),THREE.ShadowMapPlugin.__projector.unprojectVector(w,g),w.applyMatrix4(b.matrixWorldInverse),w.x<n.x&&(n.x=w.x),w.x>l.x&&(l.x=w.x),w.y<n.y&&(n.y=w.y),w.y>l.y&&(l.y=w.y),w.z<n.z&&(n.z=w.z),w.z>l.z&&(l.z=w.z)}b.left=n.x;b.right=l.x;b.top=l.y;b.bottom=n.y;b.updateProjectionMatrix()}b=d.shadowMap;j=d.shadowMatrix;g=d.shadowCamera;g.position.getPositionFromMatrix(d.matrixWorld);k.getPositionFromMatrix(d.target.matrixWorld);g.lookAt(k);g.updateMatrixWorld();g.matrixWorldInverse.getInverse(g.matrixWorld);d.cameraHelper&&(d.cameraHelper.visible=d.shadowCameraVisible);d.shadowCameraVisible&&d.cameraHelper.update();j.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);j.multiply(g.projectionMatrix);j.multiply(g.matrixWorldInverse);o.multiplyMatrices(g.projectionMatrix,g.matrixWorldInverse);p.setFromMatrix(o);u.setRenderTarget(b);u.clear();A=c.__webglObjects;d=0;for(b=A.length;d<b;d++){if(i=A[d],j=i.object,i.render=!1,j.visible&&j.castShadow&&(!(j instanceof THREE.Mesh||j instanceof THREE.ParticleSystem)||!j.frustumCulled||p.intersectsObject(j))){j._modelViewMatrix.multiplyMatrices(g.matrixWorldInverse,j.matrixWorld),i.render=!0}}d=0;for(b=A.length;d<b;d++){i=A[d],i.render&&(j=i.object,i=i.buffer,f=j.material instanceof THREE.MeshFaceMaterial?j.material.materials[0]:j.material,w=0<j.geometry.morphTargets.length&&f.morphTargets,f=j instanceof THREE.SkinnedMesh&&f.skinning,w=j.customDepthMaterial?j.customDepthMaterial:f?w?q:r:w?s:t,i instanceof THREE.BufferGeometry?u.renderBufferDirect(g,c.__lights,null,w,i,j):u.renderBuffer(g,c.__lights,null,w,i,j))}A=c.__webglObjectsImmediate;d=0;for(b=A.length;d<b;d++){i=A[d],j=i.object,j.visible&&j.castShadow&&(j._modelViewMatrix.multiplyMatrices(g.matrixWorldInverse,j.matrixWorld),u.renderImmediateObject(g,c.__lights,null,t,j))}}a=u.getClearColor();B=u.getClearAlpha();v.clearColor(a.r,a.g,a.b,B);v.enable(v.BLEND);u.shadowMapCullFace===THREE.CullFaceFront&&v.cullFace(v.BACK)}};THREE.ShadowMapPlugin.__projector=new THREE.Projector;THREE.SpritePlugin=function(){function v(d,c){return d.z!==c.z?c.z-d.z:c.id-d.id}var u,t,s,r,q,p,o,n,l,k;this.init=function(c){u=c.context;t=c;s=c.getPrecision();r=new Float32Array(16);q=new Uint16Array(6);c=0;r[c++]=-1;r[c++]=-1;r[c++]=0;r[c++]=0;r[c++]=1;r[c++]=-1;r[c++]=1;r[c++]=0;r[c++]=1;r[c++]=1;r[c++]=1;r[c++]=1;r[c++]=-1;r[c++]=1;r[c++]=0;r[c++]=1;c=0;q[c++]=0;q[c++]=1;q[c++]=2;q[c++]=0;q[c++]=2;q[c++]=3;p=u.createBuffer();o=u.createBuffer();u.bindBuffer(u.ARRAY_BUFFER,p);u.bufferData(u.ARRAY_BUFFER,r,u.STATIC_DRAW);u.bindBuffer(u.ELEMENT_ARRAY_BUFFER,o);u.bufferData(u.ELEMENT_ARRAY_BUFFER,q,u.STATIC_DRAW);var c=THREE.ShaderSprite.sprite,b=u.createProgram(),e=u.createShader(u.FRAGMENT_SHADER),d=u.createShader(u.VERTEX_SHADER),f="precision "+s+" float;\n";u.shaderSource(e,f+c.fragmentShader);u.shaderSource(d,f+c.vertexShader);u.compileShader(e);u.compileShader(d);u.attachShader(b,e);u.attachShader(b,d);u.linkProgram(b);n=b;l={};k={};l.position=u.getAttribLocation(n,"position");l.uv=u.getAttribLocation(n,"uv");k.uvOffset=u.getUniformLocation(n,"uvOffset");k.uvScale=u.getUniformLocation(n,"uvScale");k.rotation=u.getUniformLocation(n,"rotation");k.scale=u.getUniformLocation(n,"scale");k.alignment=u.getUniformLocation(n,"alignment");k.color=u.getUniformLocation(n,"color");k.map=u.getUniformLocation(n,"map");k.opacity=u.getUniformLocation(n,"opacity");k.useScreenCoordinates=u.getUniformLocation(n,"useScreenCoordinates");k.sizeAttenuation=u.getUniformLocation(n,"sizeAttenuation");k.screenPosition=u.getUniformLocation(n,"screenPosition");k.modelViewMatrix=u.getUniformLocation(n,"modelViewMatrix");k.projectionMatrix=u.getUniformLocation(n,"projectionMatrix");k.fogType=u.getUniformLocation(n,"fogType");k.fogDensity=u.getUniformLocation(n,"fogDensity");k.fogNear=u.getUniformLocation(n,"fogNear");k.fogFar=u.getUniformLocation(n,"fogFar");k.fogColor=u.getUniformLocation(n,"fogColor");k.alphaTest=u.getUniformLocation(n,"alphaTest")};this.render=function(h,g,c,I){var b=h.__webglSprites,a=b.length;if(a){var j=l,B=k,w=I/c,c=0.5*c,D=0.5*I;u.useProgram(n);u.enableVertexAttribArray(j.position);u.enableVertexAttribArray(j.uv);u.disable(u.CULL_FACE);u.enable(u.BLEND);u.bindBuffer(u.ARRAY_BUFFER,p);u.vertexAttribPointer(j.position,2,u.FLOAT,!1,16,0);u.vertexAttribPointer(j.uv,2,u.FLOAT,!1,16,8);u.bindBuffer(u.ELEMENT_ARRAY_BUFFER,o);u.uniformMatrix4fv(B.projectionMatrix,!1,g.projectionMatrix.elements);u.activeTexture(u.TEXTURE0);u.uniform1i(B.map,0);var G=j=0,m=h.fog;m?(u.uniform3f(B.fogColor,m.color.r,m.color.g,m.color.b),m instanceof THREE.Fog?(u.uniform1f(B.fogNear,m.near),u.uniform1f(B.fogFar,m.far),u.uniform1i(B.fogType,1),G=j=1):m instanceof THREE.FogExp2&&(u.uniform1f(B.fogDensity,m.density),u.uniform1i(B.fogType,2),G=j=2)):(u.uniform1i(B.fogType,0),G=j=0);for(var C,i,A=[],m=0;m<a;m++){C=b[m],i=C.material,C.visible&&0!==i.opacity&&(i.useScreenCoordinates?C.z=-C.position.z:(C._modelViewMatrix.multiplyMatrices(g.matrixWorldInverse,C.matrixWorld),C.z=-C._modelViewMatrix.elements[14]))}b.sort(v);for(m=0;m<a;m++){C=b[m],i=C.material,C.visible&&0!==i.opacity&&(i.map&&i.map.image&&i.map.image.width)&&(u.uniform1f(B.alphaTest,i.alphaTest),!0===i.useScreenCoordinates?(u.uniform1i(B.useScreenCoordinates,1),u.uniform3f(B.screenPosition,(C.position.x*t.devicePixelRatio-c)/c,(D-C.position.y*t.devicePixelRatio)/D,Math.max(0,Math.min(1,C.position.z))),A[0]=t.devicePixelRatio,A[1]=t.devicePixelRatio):(u.uniform1i(B.useScreenCoordinates,0),u.uniform1i(B.sizeAttenuation,i.sizeAttenuation?1:0),u.uniformMatrix4fv(B.modelViewMatrix,!1,C._modelViewMatrix.elements),A[0]=1,A[1]=1),g=h.fog&&i.fog?G:0,j!==g&&(u.uniform1i(B.fogType,g),j=g),g=1/(i.scaleByViewport?I:1),A[0]*=g*w*C.scale.x,A[1]*=g*C.scale.y,u.uniform2f(B.uvScale,i.uvScale.x,i.uvScale.y),u.uniform2f(B.uvOffset,i.uvOffset.x,i.uvOffset.y),u.uniform2f(B.alignment,i.alignment.x,i.alignment.y),u.uniform1f(B.opacity,i.opacity),u.uniform3f(B.color,i.color.r,i.color.g,i.color.b),u.uniform1f(B.rotation,C.rotation),u.uniform2fv(B.scale,A),t.setBlending(i.blending,i.blendEquation,i.blendSrc,i.blendDst),t.setDepthTest(i.depthTest),t.setDepthWrite(i.depthWrite),t.setTexture(i.map,0),u.drawElements(u.TRIANGLES,6,u.UNSIGNED_SHORT,0))}u.enable(u.CULL_FACE)}}};THREE.DepthPassPlugin=function(){this.enabled=!1;this.renderTarget=null;var j,i,p,o,n,m,l=new THREE.Frustum,k=new THREE.Matrix4;this.init=function(b){j=b.context;i=b;var b=THREE.ShaderLib.depthRGBA,a=THREE.UniformsUtils.clone(b.uniforms);p=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a});o=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a,morphTargets:!0});n=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a,skinning:!0});m=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a,morphTargets:!0,skinning:!0});p._shadowPass=!0;o._shadowPass=!0;n._shadowPass=!0;m._shadowPass=!0};this.render=function(d,c){this.enabled&&this.update(d,c)};this.update=function(h,g){var e,c,f,a,t,d;j.clearColor(1,1,1,1);j.disable(j.BLEND);i.setDepthTest(!0);!0===h.autoUpdate&&h.updateMatrixWorld();g.matrixWorldInverse.getInverse(g.matrixWorld);k.multiplyMatrices(g.projectionMatrix,g.matrixWorldInverse);l.setFromMatrix(k);i.setRenderTarget(this.renderTarget);i.clear();d=h.__webglObjects;e=0;for(c=d.length;e<c;e++){if(f=d[e],t=f.object,f.render=!1,t.visible&&(!(t instanceof THREE.Mesh||t instanceof THREE.ParticleSystem)||!t.frustumCulled||l.intersectsObject(t))){t._modelViewMatrix.multiplyMatrices(g.matrixWorldInverse,t.matrixWorld),f.render=!0}}var b;e=0;for(c=d.length;e<c;e++){if(f=d[e],f.render&&(t=f.object,f=f.buffer,!(t instanceof THREE.ParticleSystem)||t.customDepthMaterial)){(b=t.material instanceof THREE.MeshFaceMaterial?t.material.materials[0]:t.material)&&i.setMaterialFaces(t.material),a=0<t.geometry.morphTargets.length&&b.morphTargets,b=t instanceof THREE.SkinnedMesh&&b.skinning,a=t.customDepthMaterial?t.customDepthMaterial:b?a?m:n:a?o:p,f instanceof THREE.BufferGeometry?i.renderBufferDirect(g,h.__lights,null,a,f,t):i.renderBuffer(g,h.__lights,null,a,f,t)}}d=h.__webglObjectsImmediate;e=0;for(c=d.length;e<c;e++){f=d[e],t=f.object,t.visible&&(t._modelViewMatrix.multiplyMatrices(g.matrixWorldInverse,t.matrixWorld),i.renderImmediateObject(g,h.__lights,null,p,t))}e=i.getClearColor();c=i.getClearAlpha();j.clearColor(e.r,e.g,e.b,c);j.enable(j.BLEND)}};THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility = (       visibility.r / 9.0 ) *\n( 1.0 - visibility.g / 9.0 ) *\n(       visibility.b / 9.0 ) *\n( 1.0 - visibility.a / 9.0 );\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},lensFlare:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};THREE.ShaderSprite={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int sizeAttenuation;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( sizeAttenuation == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",fragmentShader:"uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"}};